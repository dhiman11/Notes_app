{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";import React,{Component}from'react';import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Modal from\"react-native-web/dist/exports/Modal\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import AsyncStorage from\"react-native-web/dist/exports/AsyncStorage\";import Image from\"react-native-web/dist/exports/Image\";import{TextInput}from'react-native-gesture-handler';import DateTimePicker from\"react-native-modal-datetime-picker\";import{SQLite}from'expo-sqlite';import{api_name}from\"../Settings\";var Add_event_modal=function(_Component){_inherits(Add_event_modal,_Component);function Add_event_modal(){var _getPrototypeOf2;var _this;_classCallCheck(this,Add_event_modal);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Add_event_modal)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={isDateTimePickerVisible:false,all_events:[],fairnew:'',city:'',fromdate:'-',todate:'-',user_id:1};_this.hideDateTimePicker=function(){_this.setState({isDateTimePickerVisible:false});};_this.confirmed=function(date){var date=new Date(date);var month=parseInt(date.getMonth())+1;var date=date.getFullYear()+\"-\"+month+\"-\"+date.getDate();if(_this.state.selecting_date_for==\"fromto\"){_this.setState({fromdate:date.toString()});}if(_this.state.selecting_date_for==\"todate\"){_this.setState({todate:date.toString()});}_this.hideDateTimePicker();};_this.showDateTimePicker=function(datetype){_this.setState({isDateTimePickerVisible:true,selecting_date_for:datetype});};_this.submitForm=function(){var fairnew=_this.state.fairnew;var city=_this.state.city;var fromdate=_this.state.fromdate;var todate=_this.state.todate;var user_id=_this.state.user_id;var newdata=JSON.stringify({fairnew:fairnew,city:city,fromdate:fromdate,todate:todate,user_id:user_id});fetch(api_name+'/Events/addevent',{method:'POST',headers:{Accept:'application/json','Content-Type':'application/json'},body:JSON.stringify({fairnew:fairnew,city:city,fromdate:fromdate,todate:todate,user_id:user_id})}).then(function(response){return response.json();}).then(function(data){_this.setModalVisible(false);}).catch(function(error){});_this.setModalVisible(false);};return _this;}_createClass(Add_event_modal,[{key:\"setModalVisible\",value:function setModalVisible(visible){this.props.updateState(visible);}},{key:\"set_data\",value:function set_data(newdata){return _regeneratorRuntime.async(function set_data$(_context){while(1){switch(_context.prev=_context.next){case 0:try{AsyncStorage.getItem('m_data',function(err,result){if(result!==null){}else{}});}catch(e){}case 1:case\"end\":return _context.stop();}}});}},{key:\"render\",value:function render(){var _this2=this;return React.createElement(View,null,React.createElement(Modal,{animationType:\"slide\",transparent:false,visible:this.props.modalvisibility,onRequestClose:function onRequestClose(){_this2.setModalVisible(false);}},React.createElement(TouchableOpacity,{style:{zIndex:10,position:\"absolute\",right:10,top:10},onPress:function onPress(){_this2.setModalVisible(false);}},React.createElement(Image,{source:require(\"../../assets/img/close.png\"),style:{width:40,height:40,marginLeft:8}})),React.createElement(View,{style:styles.container},React.createElement(Text,{style:{fontSize:22,marginBottom:10,fontWeight:\"bold\",color:\"#000000\"}},\"CREATE EVENT\"),React.createElement(View,null,React.createElement(TextInput,{style:styles.inputfields,textAlign:\"left\",onChangeText:function onChangeText(text){return _this2.setState({fairnew:text});},placeholderTextColor:\"#818181\",placeholder:\"Name of new event\"})),React.createElement(View,null,React.createElement(TextInput,{style:styles.inputfields,textAlign:\"left\",onChangeText:function onChangeText(text){return _this2.setState({city:text});},placeholderTextColor:\"#818181\",placeholder:\"(City of New Event)\"})),React.createElement(View,null,React.createElement(TouchableOpacity,{onPress:function onPress(){_this2.showDateTimePicker('fromto');},style:styles.inputfields},React.createElement(Text,{style:{fontSize:22,color:\"#818181\"}},\"From date : \",this.state.fromdate))),React.createElement(View,null,React.createElement(TouchableOpacity,{onPress:function onPress(){_this2.showDateTimePicker('todate');},style:styles.inputfields},React.createElement(Text,{style:{fontSize:22,color:\"#818181\"}},\"To date \",this.state.todate))),React.createElement(View,null,React.createElement(DateTimePicker,{isVisible:this.state.isDateTimePickerVisible,onConfirm:this.confirmed,onCancel:this.hideDateTimePicker})),React.createElement(View,{style:{alignItems:\"center\",alignContent:\"center\",marginTop:15}},React.createElement(TouchableOpacity,{onPress:function onPress(){_this2.submitForm();},style:{backgroundColor:\"#176fc1\",width:100,paddingLeft:20,paddingRight:20,paddingTop:10,paddingBottom:10}},React.createElement(Text,{style:{color:\"#fff\"}},\"CREATE\"))))));}}]);return Add_event_modal;}(Component);var styles=StyleSheet.create({container:{flex:1,margin:20,backgroundColor:'#fff'},datebutton:{alignSelf:'stretch',opacity:0.4,marginBottom:15,fontSize:22,backgroundColor:\"#fff\",maxHeight:50,minWidth:300,borderColor:\"gray\",borderWidth:1,paddingLeft:15,paddingTop:8,paddingBottom:15},inputfields:{alignSelf:'stretch',opacity:0.4,marginTop:15,fontSize:22,backgroundColor:\"#fff\",maxHeight:60,minWidth:\"100%\",borderColor:\"gray\",borderWidth:1,paddingLeft:15}});export default Add_event_modal;","map":{"version":3,"sources":["D:/Notes_app/Pages/modals/Add_event_modal.js"],"names":["React","Component","TextInput","DateTimePicker","SQLite","api_name","Add_event_modal","state","isDateTimePickerVisible","all_events","fairnew","city","fromdate","todate","user_id","hideDateTimePicker","setState","confirmed","date","Date","month","parseInt","getMonth","getFullYear","getDate","selecting_date_for","toString","showDateTimePicker","datetype","submitForm","newdata","JSON","stringify","fetch","method","headers","Accept","body","then","response","json","data","setModalVisible","catch","error","visible","props","updateState","AsyncStorage","getItem","err","result","e","modalvisibility","zIndex","position","right","top","require","width","height","marginLeft","styles","container","fontSize","marginBottom","fontWeight","color","inputfields","text","alignItems","alignContent","marginTop","backgroundColor","paddingLeft","paddingRight","paddingTop","paddingBottom","StyleSheet","create","flex","margin","datebutton","alignSelf","opacity","maxHeight","minWidth","borderColor","borderWidth"],"mappings":"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","sourcesContent":["//import liraries\r\n\r\nimport React, { Component } from 'react';\r\nimport { View, Text, StyleSheet, Modal, TouchableOpacity, AsyncStorage, Image } from 'react-native';\r\nimport { TextInput } from 'react-native-gesture-handler';\r\nimport DateTimePicker from \"react-native-modal-datetime-picker\";\r\n \r\nimport { SQLite } from 'expo-sqlite';\r\nimport { api_name } from '../Settings';\r\n\r\n \r\nclass Add_event_modal extends Component {\r\n\r\n    state = {\r\n        isDateTimePickerVisible: false,\r\n        all_events: [],\r\n        fairnew: '',\r\n        city: '',\r\n        fromdate: '-',\r\n        todate: '-',\r\n        user_id: 1\r\n    }\r\n\r\n\r\n    /////////////////Check if this table exist or not \r\n\r\n\r\n    setModalVisible(visible) {\r\n        this.props.updateState(visible);\r\n    }\r\n\r\n    /////////////////////\r\n    //// DATES ////////\r\n\r\n    hideDateTimePicker = () => {\r\n        this.setState({ isDateTimePickerVisible: false });\r\n    };\r\n\r\n\r\n\r\n\r\n    confirmed = date => {\r\n\r\n        var date = new Date(date);\r\n        var month = parseInt(date.getMonth())+1;\r\n        var date = date.getFullYear() + \"-\" + month + \"-\" + date.getDate();\r\n\r\n        if (this.state.selecting_date_for == \"fromto\") {\r\n\r\n            this.setState({\r\n                fromdate: date.toString()\r\n            });\r\n        }\r\n        if (this.state.selecting_date_for == \"todate\") {\r\n            this.setState({\r\n                todate: date.toString()\r\n            });\r\n        }\r\n        this.hideDateTimePicker();\r\n    };\r\n\r\n\r\n    showDateTimePicker = (datetype) => {\r\n        this.setState({\r\n            isDateTimePickerVisible: true,\r\n            selecting_date_for: datetype\r\n        });\r\n    };\r\n\r\n    async set_data(newdata) {\r\n\r\n        try {\r\n            AsyncStorage.getItem('m_data', (err, result) => {\r\n\r\n                if (result !== null) {\r\n\r\n                } else {\r\n\r\n                }\r\n            });\r\n\r\n\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////\r\n    /////SUBMIT THE FORM\r\n    ///////////////////\r\n\r\n    submitForm = () => {\r\n        //////////////////////////\r\n        ///////////////////////// \r\n\r\n        let fairnew = this.state.fairnew;\r\n        let city = this.state.city;\r\n        let fromdate = this.state.fromdate;\r\n        let todate = this.state.todate;\r\n        let user_id = this.state.user_id;\r\n\r\n        var newdata = JSON.stringify({\r\n            fairnew: fairnew,\r\n            city: city,\r\n            fromdate: fromdate,\r\n            todate: todate,\r\n            user_id: user_id,\r\n        });\r\n\r\n        // this.set_data(newdata);\r\n \r\n        fetch(api_name+'/Events/addevent', {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            }, \r\n            body: JSON.stringify({\r\n                fairnew:fairnew,\r\n                city:city,\r\n                fromdate:fromdate,\r\n                todate:todate,\r\n                user_id:user_id,\r\n            }),\r\n            }).then((response) => response.json())\r\n            .then((data) => { \r\n                   this.setModalVisible(false)  \r\n            })\r\n            .catch((error) => {\r\n             // console.error(error);\r\n            });\r\n \r\n\r\n        this.setModalVisible(false);\r\n \r\n    }\r\n\r\n    /////////////////////\r\n    //// DATES ////////\r\n\r\n    render() {\r\n        return (\r\n            <View>\r\n\r\n                <Modal\r\n                    animationType=\"slide\"\r\n                    transparent={false}\r\n                    visible={this.props.modalvisibility}\r\n                    onRequestClose={() => {\r\n                        this.setModalVisible(false)\r\n                    }}>\r\n\r\n                    <TouchableOpacity style={{ zIndex: 10, position: \"absolute\", right: 10, top: 10 }} onPress={() => { this.setModalVisible(false) }}>\r\n                        <Image\r\n                            source={require('../../assets/img/close.png')}\r\n                            style={{ width: 40, height: 40, marginLeft: 8 }}\r\n                        />\r\n                    </TouchableOpacity>\r\n\r\n                    <View style={styles.container}>\r\n                        <Text style={{ fontSize: 22, marginBottom: 10, fontWeight: \"bold\", color: \"#000000\" }}>CREATE EVENT</Text>\r\n\r\n                        <View>\r\n                            <TextInput\r\n                                style={styles.inputfields}\r\n                                textAlign=\"left\"\r\n                                onChangeText={(text) => this.setState({ fairnew: text })}\r\n                                placeholderTextColor='#818181'\r\n                                placeholder=\"Name of new event\"\r\n                            />\r\n                        </View>\r\n\r\n                        <View>\r\n                            <TextInput\r\n                                style={styles.inputfields}\r\n                                textAlign=\"left\"\r\n                                onChangeText={(text) => this.setState({ city: text })}\r\n                                placeholderTextColor='#818181'\r\n                                placeholder=\"(City of New Event)\"\r\n                            />\r\n                        </View>\r\n              \r\n                        <View>\r\n                            <TouchableOpacity\r\n                                onPress={() => { this.showDateTimePicker('fromto') }}\r\n                                style={styles.inputfields}\r\n                            >\r\n                                <Text style={{ fontSize: 22,color:\"#818181\" }}>From date : {this.state.fromdate}</Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n\r\n                        <View>\r\n                            <TouchableOpacity\r\n                                onPress={() => { this.showDateTimePicker('todate') }}\r\n                                style={styles.inputfields}\r\n                            >\r\n\r\n                                <Text style={{ fontSize: 22,color:\"#818181\" }} >To date {this.state.todate}</Text>\r\n\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                        <View>\r\n\r\n                            <DateTimePicker\r\n                                isVisible={this.state.isDateTimePickerVisible}\r\n                                onConfirm={this.confirmed}\r\n                                onCancel={this.hideDateTimePicker}\r\n                            />\r\n                        </View>\r\n                        <View style={{ alignItems: \"center\", alignContent: \"center\",marginTop: 15, }}>\r\n                            <TouchableOpacity\r\n                                onPress={() => { this.submitForm() }}\r\n                                style={{ backgroundColor: \"#176fc1\", width: 100, paddingLeft: 20, paddingRight: 20, paddingTop: 10, paddingBottom: 10 }}>\r\n                                <Text style={{ color: \"#fff\" }}>CREATE</Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n\r\n\r\n                    </View>\r\n                </Modal>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\n// define your styles\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        margin: 20,\r\n        backgroundColor: '#fff',\r\n    },\r\n    datebutton: {\r\n        alignSelf: 'stretch',\r\n        opacity: 0.4,\r\n        marginBottom: 15,\r\n        fontSize: 22,\r\n        backgroundColor: \"#fff\",\r\n        maxHeight: 50,\r\n        minWidth: 300,\r\n        borderColor: \"gray\",\r\n        borderWidth: 1,\r\n        paddingLeft: 15,\r\n        paddingTop: 8,\r\n        paddingBottom: 15\r\n\r\n\r\n    },\r\n    inputfields: {\r\n        alignSelf: 'stretch',\r\n        opacity: 0.4,\r\n        marginTop: 15,\r\n        fontSize: 22,\r\n        backgroundColor: \"#fff\",\r\n        maxHeight: 60,\r\n        minWidth: \"100%\",\r\n        borderColor: \"gray\",\r\n        borderWidth: 1,\r\n        paddingLeft: 15\r\n    },\r\n});\r\n\r\n//make this component available to the app\r\nexport default Add_event_modal;\r\n"]},"metadata":{},"sourceType":"module"}