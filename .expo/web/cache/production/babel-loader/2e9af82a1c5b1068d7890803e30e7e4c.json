{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";import React,{Component}from'react';import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import FlatList from\"react-native-web/dist/exports/FlatList\";import RefreshControl from\"react-native-web/dist/exports/RefreshControl\";import ActivityIndicator from\"react-native-web/dist/exports/ActivityIndicator\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import{SQLite}from'expo-sqlite';import Contact_compo from\"../History_components/Contact_compo\";import Edit_contact from\"../edit_note/Edit_contact\";import{tabs_data_load}from\"../models/all_models\";var db=SQLite.openDatabase('db.db');var Contacts_tab_data=function(_Component){_inherits(Contacts_tab_data,_Component);function Contacts_tab_data(props){var _this;_classCallCheck(this,Contacts_tab_data);_this=_possibleConstructorReturn(this,_getPrototypeOf(Contacts_tab_data).call(this,props));_this.process_data=function(rows){_this.setState({contacts_data:[].concat(_toConsumableArray(_this.state.contacts_data),_toConsumableArray(rows)),loadingmore:false});};_this.get_data=function(limit){var tabname=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'contacts';tabs_data_load(limit,tabname).then(function(response){var data=JSON.parse(response);console.log(data.data);_this.process_data(data.data);});};_this._onRefresh=function(){_this.setState({isRefreshing:true});_this.setState({contacts_data:[]});_this.setState({limit:0});_this.get_data(0);_this.setState({isRefreshing:false});_this.setState({loadmore_test:' '});};_this.handleLoadMore=function(){_this.setState({loadmore_test:'Loading...'});var limit=parseInt(_this.state.limit)+parseInt(20);_this.setState({limit:limit});_this.get_data(limit);_this.setState({loadmore_test:'Scroll down to load more'});};_this.edit_it=function(id,type){_this.props.navigation.navigate('Edit_contact',{contact_id:id});};_this.state={contacts_data:[],loadmore_test:'',isRefreshing:false,loadingmore:false,history_array:[],limit:0};return _this;}_createClass(Contacts_tab_data,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.props.navigation.addListener('willFocus',function(route){_this2._onRefresh();});}},{key:\"render\",value:function render(){var _this3=this;return React.createElement(View,{style:styles.container},this.state.loadingmore&&React.createElement(ActivityIndicator,{animating:this.state.loadingmore,size:\"large\",color:\"red\"}),React.createElement(FlatList,{numColumns:1,data:this.state.contacts_data,refreshControl:React.createElement(RefreshControl,{refreshing:this.state.isRefreshing,onRefresh:this._onRefresh.bind(this)}),keyExtractor:function keyExtractor(item,index){return index.toString();},onEndReachedThreshold:3,onEndReached:this.handleLoadMore.bind(this),renderItem:function renderItem(_ref){var item=_ref.item,index=_ref.index;return React.createElement(View,null,React.createElement(TouchableOpacity,{onPress:function onPress(){_this3.edit_it(item.contact_id);}},React.createElement(Contact_compo,{note:item.note,phone:item.phone,email:item.email,supplier_name:item.supplier_name,contact_name:item.contact_name,image:item.main_image.src})));}}),React.createElement(View,null,React.createElement(Text,null,this.state.loadmore_test)));}}]);return Contacts_tab_data;}(Component);export{Contacts_tab_data as default};var styles=StyleSheet.create({container:{flex:1,justifyContent:'center',alignItems:'center',backgroundColor:'#fff'},heading:{fontSize:22,color:\"#000000\",marginTop:10,width:100,marginBottom:20,fontWeight:\"bold\"}});","map":{"version":3,"sources":["D:/Notes_app/Pages/history_tabs/Contact_tab_data.js"],"names":["React","Component","SQLite","Contact_compo","Edit_contact","tabs_data_load","db","openDatabase","Contacts_tab_data","props","process_data","rows","setState","contacts_data","state","loadingmore","get_data","limit","tabname","then","response","data","JSON","parse","console","log","_onRefresh","isRefreshing","loadmore_test","handleLoadMore","parseInt","edit_it","id","type","navigation","navigate","contact_id","history_array","addListener","route","styles","container","bind","item","index","toString","note","phone","email","supplier_name","contact_name","main_image","src","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","heading","fontSize","color","marginTop","width","marginBottom","fontWeight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { View, Text, StyleSheet, FlatList, RefreshControl, ActivityIndicator,TouchableOpacity } from 'react-native';\r\n\r\nimport { SQLite } from 'expo-sqlite';\r\nimport Contact_compo from '../History_components/Contact_compo';\r\nimport Edit_contact from '../edit_note/Edit_contact';\r\nimport { tabs_data_load } from '../models/all_models';\r\nconst db = SQLite.openDatabase('db.db');\r\n\r\nexport default class Contacts_tab_data extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            contacts_data: [],\r\n            loadmore_test: '',\r\n            isRefreshing: false,\r\n            loadingmore: false,\r\n            history_array: [],\r\n            limit: 0,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // this.get_data(this.state.limit);\r\n        this.props.navigation.addListener('willFocus', (route) => {\r\n            this._onRefresh();\r\n        });\r\n    }\r\n\r\n    process_data = (rows) => {\r\n\r\n        this.setState({\r\n            contacts_data: [...this.state.contacts_data, ...rows],\r\n            loadingmore: false\r\n        })\r\n    }\r\n\r\n    get_data = (limit,tabname='contacts') => {\r\n      \r\n        tabs_data_load(limit,tabname).then((response) => {  \r\n            var data   = JSON.parse(response);\r\n            console.log(data.data);\r\n            this.process_data(data.data)\r\n          \r\n        });   \r\n    }\r\n\r\n    _onRefresh = () => {\r\n        this.setState({ isRefreshing: true })\r\n        this.setState({ contacts_data: [] })\r\n        this.setState({ limit: 0 })\r\n        this.get_data(0);\r\n        this.setState({ isRefreshing: false })\r\n        this.setState({ loadmore_test: ' ', });\r\n    }\r\n\r\n    ///// LOAD MORE ////////////////////\r\n    handleLoadMore = () => {\r\n\r\n        this.setState({ loadmore_test: 'Loading...', });\r\n        var limit = parseInt(this.state.limit) + parseInt(20);  // increase page by 1\r\n        this.setState({ limit: limit });\r\n        this.get_data(limit);  // method for API call \r\n        this.setState({ loadmore_test: 'Scroll down to load more', });\r\n\r\n    };\r\n\r\n    //////////////EDIT PRODUCT OR CONTACT\r\n    edit_it = (id, type) => {\r\n        this.props.navigation.navigate('Edit_contact', {\r\n            contact_id: id\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <View style={styles.container}>\r\n\r\n                {this.state.loadingmore &&\r\n                    <ActivityIndicator animating={this.state.loadingmore} size=\"large\" color=\"red\" />\r\n                }\r\n                <FlatList\r\n                    numColumns={1}\r\n                    data={this.state.contacts_data}\r\n                    refreshControl={\r\n                        <RefreshControl\r\n                            refreshing={this.state.isRefreshing}\r\n                            onRefresh={this._onRefresh.bind(this)}\r\n                        />\r\n                    }\r\n                    keyExtractor={(item, index) => index.toString()}\r\n                    onEndReachedThreshold={3}\r\n                    onEndReached={this.handleLoadMore.bind(this)}\r\n                    renderItem={({ item, index }) => (\r\n\r\n\r\n\r\n                        <View>\r\n                            <TouchableOpacity onPress={() => { this.edit_it(item.contact_id) }}>\r\n                                <Contact_compo note={item.note} phone={item.phone} email={item.email} supplier_name={item.supplier_name} contact_name={item.contact_name} image={item.main_image.src} />\r\n                            </TouchableOpacity>\r\n                        </View>\r\n\r\n                    )}\r\n                />\r\n\r\n                <View>\r\n                    <Text>{this.state.loadmore_test}</Text>\r\n                </View>\r\n\r\n\r\n            </View>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n// define your styles\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundColor: '#fff',\r\n\r\n\r\n    },\r\n    heading: {\r\n        fontSize: 22,\r\n        color: \"#000000\",\r\n        marginTop: 10,\r\n        width: 100,\r\n        marginBottom: 20,\r\n        fontWeight: \"bold\"\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}