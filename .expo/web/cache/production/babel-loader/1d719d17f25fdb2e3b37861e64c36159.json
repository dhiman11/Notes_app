{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";import React,{Component}from'react';import Image from\"react-native-web/dist/exports/Image\";import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import TextInput from\"react-native-web/dist/exports/TextInput\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import StatusBar from\"react-native-web/dist/exports/StatusBar\";import AsyncStorage from\"react-native-web/dist/exports/AsyncStorage\";import{api_name}from\"./Settings\";var Login=function(_Component){_inherits(Login,_Component);function Login(props){var _this;_classCallCheck(this,Login);_this=_possibleConstructorReturn(this,_getPrototypeOf(Login).call(this,props));_this.state={username:'',password:'',isLoggedin:false,LoginStatus:''};_this.ifloginalerady=function _callee(){var token,data;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return _regeneratorRuntime.awrap(AsyncStorage.getItem('cookies'));case 3:token=_context.sent;data=JSON.parse(token);if(data.logged_in){_this.props.navigation.navigate('App');}else{_this.props.navigation.navigate('Auth');}_context.next=10;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);case 10:case\"end\":return _context.stop();}}},null,null,[[0,8]]);};_this.storeData=function _callee2(data){return _regeneratorRuntime.async(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return _regeneratorRuntime.awrap(AsyncStorage.setItem('cookies',JSON.stringify(data)));case 3:_this.props.navigation.navigate('Home');_context2.next=9;break;case 6:_context2.prev=6;_context2.t0=_context2[\"catch\"](0);_this.props.navigation.navigate('Login');case 9:case\"end\":return _context2.stop();}}},null,null,[[0,6]]);};_this.onLoginPressed=function(){var username=_this.state.username;var password=_this.state.password;fetch(api_name+'login_now',{method:'POST',headers:{Accept:'application/json','Content-Type':'application/json'},body:JSON.stringify({employeeid:username,password:password})}).then(function(response){return response.json();}).then(function(responseJson){if(responseJson.result){_this.storeData(responseJson.cookie_data);}}).catch(function(error){});};_this.ifloginalerady();return _this;}_createClass(Login,[{key:\"componentDidMount\",value:function componentDidMount(){StatusBar.setHidden(true);}},{key:\"render\",value:function render(){var _this2=this;return React.createElement(View,{style:styles.loginpage},React.createElement(Image,{style:{width:200,height:200},source:require(\"../assets/img/logo.png\")}),React.createElement(Text,{style:{color:\"red\"}},this.state.LoginStatus),React.createElement(TextInput,{style:styles.inputfields,autoCapitalize:\"none\",onSubmitEditing:function onSubmitEditing(){return _this2.passwordInput.focus();},autoCorrect:false,ref:function ref(_ref){return _this2.username=_ref;},onChangeText:function onChangeText(text){return _this2.setState({username:text});},keyboardType:\"email-address\",returnKeyType:\"next\",onSubmitEditing:this._submit,textAlign:\"center\",placeholder:\"Username\",placeholderTextColor:\"#818181\"}),React.createElement(TextInput,{style:styles.inputfields,returnKeyType:\"go\",ref:function ref(_ref2){return _this2.password=_ref2;},onChangeText:function onChangeText(text){return _this2.setState({password:text});},placeholder:\"Password\",textAlign:\"center\",placeholderTextColor:\"#818181\",secureTextEntry:true}),React.createElement(View,{style:{alignItems:\"center\"}},React.createElement(TouchableOpacity,{onPress:function onPress(){return _this2.onLoginPressed();},style:styles.buttons},React.createElement(Text,{style:styles.login},\"LOGIN\"))));}}]);return Login;}(Component);var styles=StyleSheet.create({inputfields:{opacity:0.4,marginBottom:15,fontSize:25,backgroundColor:\"#fff\",minHeight:60,minWidth:300,maxWidth:300,borderColor:\"gray\",borderWidth:1,paddingLeft:15},login:{backgroundColor:\"#fff200\",alignItems:\"center\",alignContent:'center',alignSelf:'center',color:\"#282525\",fontSize:16,minWidth:100,paddingHorizontal:50,paddingTop:10,paddingBottom:10,marginBottom:20},signup:{backgroundColor:\"green\",color:\"white\",alignItems:\"center\",alignContent:'center',minWidth:100,alignSelf:'center',fontSize:16,paddingHorizontal:50,paddingTop:10,paddingBottom:10,marginBottom:15},buttons:{alignItems:\"center\",alignContent:'center',alignSelf:'center',minWidth:200},loginpage:{backgroundColor:\"#176fc1\",paddingTop:130,alignItems:\"center\",flex:1,borderTopColor:'#fff200',borderTopWidth:25},picker:{borderColor:\"gray\",borderWidth:1}});export default Login;","map":{"version":3,"sources":["D:/Notes_app/Pages/Login.js"],"names":["React","Component","api_name","Login","props","state","username","password","isLoggedin","LoginStatus","ifloginalerady","AsyncStorage","getItem","token","data","JSON","parse","logged_in","navigation","navigate","storeData","setItem","stringify","onLoginPressed","fetch","method","headers","Accept","body","employeeid","then","response","json","responseJson","result","cookie_data","catch","error","StatusBar","setHidden","styles","loginpage","width","height","require","color","inputfields","passwordInput","focus","ref","text","setState","_submit","alignItems","buttons","login","StyleSheet","create","opacity","marginBottom","fontSize","backgroundColor","minHeight","minWidth","maxWidth","borderColor","borderWidth","paddingLeft","alignContent","alignSelf","paddingHorizontal","paddingTop","paddingBottom","signup","flex","borderTopColor","borderTopWidth","picker"],"mappings":"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","sourcesContent":["//import liraries\r\nimport React, { Component } from 'react';\r\nimport { Image,View, Text, StyleSheet,TextInput,TouchableOpacity,StatusBar,AsyncStorage } from 'react-native';\r\nimport { api_name } from './Settings';\r\n \r\n \r\n\r\n// create a component\r\nclass Login extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.ifloginalerady();\r\n    }\r\n\r\n    componentDidMount() {\r\n        StatusBar.setHidden(true);\r\n     }\r\n\r\n    state = { \r\n        username: '',\r\n        password: '' ,\r\n        isLoggedin: false,\r\n        LoginStatus: '', \r\n      };\r\n\r\n      ifloginalerady = async()=>{\r\n          try {\r\n                let  token  =  await AsyncStorage.getItem('cookies');\r\n                let data  = JSON.parse(token);\r\n                if(data.logged_in){\r\n                this.props.navigation.navigate('App');\r\n                }else{\r\n                this.props.navigation.navigate('Auth');\r\n                }\r\n\r\n          } catch (error) {\r\n              \r\n          }\r\n      }\r\n\r\n      storeData = async (data) => {\r\n      \r\n        try {\r\n          await AsyncStorage.setItem('cookies', JSON.stringify(data));\r\n          this.props.navigation.navigate('Home');\r\n        } catch (e) {\r\n            this.props.navigation.navigate('Login');\r\n        }\r\n      }\r\n\r\n \r\n\r\n    onLoginPressed = () => { \r\n           \r\n        // alert(this.state.username);\r\n         let username = this.state.username;\r\n         let password = this.state.password;\r\n        \r\n       \r\n         fetch(api_name+'login_now', {\r\n             method: 'POST',\r\n             headers: {\r\n                 Accept: 'application/json',\r\n                 'Content-Type': 'application/json',\r\n             }, \r\n             body: JSON.stringify({\r\n                 employeeid:username,\r\n                 password:password,\r\n             }),\r\n             }).then((response) => response.json())\r\n             .then((responseJson) => { \r\n                  if (responseJson.result){   \r\n                    this.storeData(responseJson.cookie_data); \r\n                  }\r\n                \r\n               \r\n             })\r\n             .catch((error) => {\r\n              // console.error(error);\r\n             });\r\n         }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n              \r\n                <View style={styles.loginpage}> \r\n                        <Image \r\n                            style ={{width:200,height:200}}\r\n                             source={require('../assets/img/logo.png')}\r\n                        />\r\n\r\n                        <Text style={{color:\"red\"}}>{this.state.LoginStatus}</Text>\r\n                        <TextInput  \r\n                        style={styles.inputfields}\r\n                        // onChangeText={(text) => this.setState({text})} \r\n                        autoCapitalize=\"none\" \r\n                        onSubmitEditing={() => this.passwordInput.focus()} \r\n                        autoCorrect={false} \r\n                        ref={(ref)=> this.username = ref} \r\n                        onChangeText={(text) => this.setState({username:text})}\r\n                        keyboardType='email-address' \r\n                        returnKeyType=\"next\" \r\n                        onSubmitEditing={this._submit}\r\n                        textAlign=\"center\"\r\n                        placeholder='Username' \r\n                        placeholderTextColor='#818181'\r\n                        />\r\n\r\n                        <TextInput \r\n                        style={styles.inputfields}\r\n                        // onChangeText={(text) => this.setState({text})}\r\n                        returnKeyType=\"go\" \r\n                        ref={(ref)=> this.password = ref} \r\n                        onChangeText={(text) => this.setState({password:text})}\r\n                        placeholder='Password' \r\n                        textAlign=\"center\"\r\n                        placeholderTextColor='#818181' \r\n                        secureTextEntry\r\n                        />\r\n\r\n                        <View style={{alignItems:\"center\"}}>\r\n                            <TouchableOpacity onPress = {() => this.onLoginPressed()}  style={styles.buttons}>\r\n                            <Text   style={styles.login}>LOGIN</Text>\r\n                            </TouchableOpacity>\r\n \r\n\r\n                        </View>\r\n                    </View>\r\n             \r\n\r\n            \r\n        );\r\n    }\r\n}\r\n\r\n// define your styles\r\n// define your styles\r\nconst styles = StyleSheet.create({\r\n \r\n    inputfields:{\r\n        opacity:0.4,\r\n        marginBottom: 15,\r\n        fontSize:25,\r\n        backgroundColor:\"#fff\",  \r\n        minHeight: 60,\r\n        minWidth: 300,  \r\n        maxWidth: 300,\r\n        borderColor: \"gray\",\r\n        borderWidth: 1,\r\n        paddingLeft:15\r\n    },\r\n    login:{\r\n        backgroundColor:\"#fff200\",  \r\n        alignItems:\"center\",\r\n        alignContent: 'center',\r\n        alignSelf: 'center',\r\n        color:\"#282525\",\r\n        fontSize: 16,\r\n        minWidth:100, \r\n        paddingHorizontal: 50, \r\n        paddingTop: 10,\r\n        paddingBottom: 10,\r\n        marginBottom:20 ,\r\n      \r\n    },\r\n    signup:{\r\n        backgroundColor:\"green\", \r\n        color:\"white\",\r\n        alignItems:\"center\",\r\n        alignContent: 'center',\r\n        minWidth:100, \r\n        alignSelf: 'center',\r\n        fontSize: 16,\r\n        paddingHorizontal: 50, \r\n        paddingTop: 10,\r\n        paddingBottom: 10,\r\n        marginBottom:15  ,\r\n       \r\n    },\r\n    buttons:{ \r\n        alignItems:\"center\",\r\n        alignContent: 'center',\r\n        alignSelf: 'center', \r\n        minWidth:200, \r\n    },\r\n   loginpage:{\r\n        backgroundColor:\"#176fc1\", \r\n        paddingTop:130,\r\n        alignItems:\"center\",\r\n        flex:1,\r\n        borderTopColor: '#fff200',\r\n        borderTopWidth: 25,\r\n   },\r\n    picker:{\r\n        borderColor:\"gray\",\r\n        borderWidth:1\r\n    }\r\n\r\n\r\n});\r\n\r\n//make this component available to the app\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}