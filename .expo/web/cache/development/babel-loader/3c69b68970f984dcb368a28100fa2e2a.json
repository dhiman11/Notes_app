{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"D:\\\\Notes_app\\\\Pages\\\\add_notes\\\\explorer_data\\\\Pro_con_data.js\";\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { SQLite } from 'expo-sqlite';\nvar db = SQLite.openDatabase('db.db');\nimport Contact_compo_e from \"../../Explorer_components/Contact_compo_e\";\nimport Product_compo_e from \"../../Explorer_components/Product_compo_e\";\nimport Create_product from \"../notes_components/Create_product\";\nimport Create_contacts from \"../notes_components/Create_contacts\";\nimport { MaterialIcons, Ionicons, Entypo } from '@expo/vector-icons';\nimport { load_products, load_contacts } from \"../../models/all_models\";\n\nvar Pro_con_data = function (_Component) {\n  _inherits(Pro_con_data, _Component);\n\n  function Pro_con_data(props) {\n    var _this;\n\n    _classCallCheck(this, Pro_con_data);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Pro_con_data).call(this, props));\n\n    _this.go_supp_page = function () {\n      _this.props.navigation.goBack(null);\n    };\n\n    _this.process_data = function (rows, type) {\n      if (type == 'products') {\n        _this.setState({\n          products_data: [].concat(_toConsumableArray(_this.state.products_data), _toConsumableArray(rows)),\n          loadingmore: false\n        });\n      }\n\n      if (type == 'contacts') {\n        _this.setState({\n          contacts_data: [].concat(_toConsumableArray(_this.state.contacts_data), _toConsumableArray(rows)),\n          loadingmore: false\n        });\n      }\n    };\n\n    _this.get_product_data = function (limit, supp_id) {\n      load_products(supp_id, limit).then(function (response) {\n        var data = JSON.parse(response);\n\n        _this.process_data(data['data'], 'products');\n      });\n    };\n\n    _this.get_contact_data = function (limit, supp_id) {\n      load_contacts(supp_id, limit).then(function (response) {\n        var data = JSON.parse(response);\n\n        _this.process_data(data['data'], 'contacts');\n      });\n    };\n\n    _this._onRefreshp = function () {\n      _this.setState({\n        isRefreshing: true\n      });\n\n      _this.setState({\n        products_data: []\n      });\n\n      _this.setState({\n        limit: 0\n      });\n\n      _this.get_product_data(0, _this.state.supplier_id);\n\n      _this.setState({\n        isRefreshing: false\n      });\n\n      _this.setState({\n        loadmore_test: ' '\n      });\n    };\n\n    _this._onRefreshc = function () {\n      _this.setState({\n        isRefreshing: true\n      });\n\n      _this.setState({\n        contacts_data: []\n      });\n\n      _this.setState({\n        limit: 0\n      });\n\n      _this.get_contact_data(0, _this.state.supplier_id);\n\n      _this.setState({\n        isRefreshing: false\n      });\n\n      _this.setState({\n        loadmore_test: ' '\n      });\n    };\n\n    _this.handleLoadMorep = function () {\n      _this.setState({\n        loadmore_test: 'Loading...'\n      });\n\n      var limit = parseInt(_this.state.limit) + parseInt(20);\n\n      _this.setState({\n        limit: limit\n      });\n\n      _this.get_product_data(limit, _this.state.supplier_id);\n\n      _this.setState({\n        loadmore_test: 'Scroll down to load more'\n      });\n    };\n\n    _this.handleLoadMorec = function () {\n      _this.setState({\n        loadmore_test: 'Loading...'\n      });\n\n      var limit = parseInt(_this.state.limit) + parseInt(20);\n\n      _this.setState({\n        limit: limit\n      });\n\n      _this.get_contact_data(limit, _this.state.supplier_id);\n\n      _this.setState({\n        loadmore_test: 'Scroll down to load more'\n      });\n    };\n\n    _this.setModalVisible = function _callee(state, type) {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(type == 'contacts')) {\n                _context.next = 4;\n                break;\n              }\n\n              _this.setState({\n                contact_model: state\n              });\n\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(_this._onRefreshc());\n\n            case 4:\n              if (!(type == 'products')) {\n                _context.next = 8;\n                break;\n              }\n\n              _this.setState({\n                product_model: state\n              });\n\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(_this._onRefreshp());\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    _this.edit_it = function (id, type) {\n      if (type == \"product\") {\n        _this.props.navigation.navigate('Edit_product', {\n          product_id: id\n        });\n      }\n\n      if (type == \"contact\") {\n        _this.props.navigation.navigate('Edit_contact', {\n          contact_id: id\n        });\n      }\n    };\n\n    _this.state = {\n      products_data: [],\n      contacts_data: [],\n      supplier_id: '',\n      suppliername: '',\n      limit: 0,\n      p_limit: 0,\n      c_limit: 0,\n      contact_model: false,\n      product_model: false\n    };\n    return _this;\n  }\n\n  _createClass(Pro_con_data, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var params = this.props.navigation.state.params;\n      var supplier_id = params['supp_id'];\n      var suppliername = params['supp_name'];\n      this.get_product_data(this.state.p_limit, supplier_id);\n      this.get_contact_data(this.state.p_limit, supplier_id);\n      this.setState({\n        supplier_id: supplier_id,\n        suppliername: suppliername\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        }\n      }, this.state.contact_model ? React.createElement(Modal, {\n        animationType: \"slide\",\n        transparent: false,\n        visible: this.state.contact_model,\n        onRequestClose: function onRequestClose() {\n          _this2.setModalVisible(false, 'contacts');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          zIndex: 10,\n          position: \"absolute\",\n          right: 10,\n          top: 10\n        },\n        onPress: function onPress() {\n          _this2.setModalVisible(false, 'contacts');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        }\n      }, React.createElement(Image, {\n        source: require(\"./../../../assets/img/close.png\"),\n        style: {\n          width: 40,\n          height: 40,\n          marginLeft: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        }\n      })), React.createElement(Create_contacts, {\n        handle_visibility: this.setModalVisible.bind(this),\n        single_supp: true,\n        supp_id: this.state.supplier_id,\n        suppliername: this.state.suppliername,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        }\n      })) : null, this.state.product_model ? React.createElement(Modal, {\n        animationType: \"slide\",\n        transparent: false,\n        visible: this.state.product_model,\n        onRequestClose: function onRequestClose() {\n          _this2.setModalVisible(false, 'products');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          zIndex: 10,\n          position: \"absolute\",\n          right: 10,\n          top: 10\n        },\n        onPress: function onPress() {\n          _this2.setModalVisible(false, 'products');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        }\n      }, React.createElement(Image, {\n        source: require(\"./../../../assets/img/close.png\"),\n        style: {\n          width: 40,\n          height: 40,\n          marginLeft: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        }\n      })), React.createElement(Create_product, {\n        handle_visibility: this.setModalVisible.bind(this),\n        single_supp: true,\n        supp_id: this.state.supplier_id,\n        suppliername: this.state.suppliername,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        }\n      })) : null, React.createElement(View, {\n        style: styles.inline_block,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.go_supp_page();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        }\n      }, React.createElement(Ionicons, {\n        name: \"md-arrow-round-back\",\n        size: 60,\n        style: {\n          color: 'black',\n          marginRight: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        }\n      })), React.createElement(Text, {\n        style: styles.heading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        }\n      }, this.state.suppliername)), React.createElement(View, {\n        style: {\n          marginTop: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        }\n      }, React.createElement(View, {\n        style: {\n          width: \"100%\",\n          backgroundColor: \"#ed7d3182\",\n          padding: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        }\n      }, React.createElement(View, {\n        style: styles.inline_block,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.setModalVisible(true, 'contacts');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        }\n      }, React.createElement(MaterialIcons, {\n        name: \"add-circle-outline\",\n        size: 35,\n        color: \"#000000\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        }\n      })), React.createElement(Text, {\n        style: styles.add_name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        }\n      }, \" CONTACTS\")), React.createElement(View, {\n        style: {\n          marginTop: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        }\n      }, React.createElement(FlatList, {\n        style: {\n          height: 212\n        },\n        horizontal: true,\n        data: this.state.contacts_data,\n        refreshControl: React.createElement(RefreshControl, {\n          refreshing: this.state.isRefreshing,\n          onRefresh: this._onRefreshc.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241\n          }\n        }),\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        onEndReachedThreshold: 3,\n        onEndReached: this.handleLoadMorec.bind(this),\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item,\n              index = _ref.index;\n          return console.log(item), React.createElement(TouchableOpacity, {\n            onPress: function onPress() {\n              _this2.edit_it(item.contact_id, \"contact\");\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 252\n            }\n          }, React.createElement(Contact_compo_e, {\n            note: item.note,\n            phone: item.phone,\n            email: item.email,\n            supplier_name: item.supplier_name,\n            contact_name: item.contact_name,\n            image: item.main_image.src,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 253\n            }\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        }\n      }))), React.createElement(View, {\n        style: {\n          width: \"100%\",\n          backgroundColor: \"#8cc63e6b\",\n          padding: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        }\n      }, React.createElement(View, {\n        style: styles.inline_block,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.setModalVisible(true, 'products');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        }\n      }, React.createElement(MaterialIcons, {\n        name: \"add-circle-outline\",\n        size: 35,\n        color: \"#000000\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        }\n      })), React.createElement(Text, {\n        style: styles.add_name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        }\n      }, \" PRODUCTS\")), React.createElement(View, {\n        style: {\n          marginTop: 5,\n          marginBottom: 120\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        }\n      }, React.createElement(FlatList, {\n        style: {\n          height: 195\n        },\n        horizontal: true,\n        data: this.state.products_data,\n        refreshControl: React.createElement(RefreshControl, {\n          refreshing: this.state.isRefreshing,\n          onRefresh: this._onRefreshp.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281\n          }\n        }),\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        onEndReachedThreshold: 3,\n        onEndReached: this.handleLoadMorep.bind(this),\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item,\n              index = _ref2.index;\n          return React.createElement(TouchableOpacity, {\n            onPress: function onPress() {\n              _this2.edit_it(item.product_id, \"product\");\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 290\n            }\n          }, React.createElement(Product_compo_e, {\n            product_id: item.product_id,\n            note: item.note,\n            moq: item.moq,\n            fob_price: item.fob_price,\n            product_name: item.product_name,\n            supplier_name: item.supplier_name,\n            image: item.main_image.src,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 291\n            }\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        }\n      })))));\n    }\n  }]);\n\n  return Pro_con_data;\n}(Component);\n\nexport { Pro_con_data as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    margin: 20\n  },\n  heading: {\n    fontSize: 22,\n    color: \"#000000\",\n    marginTop: 10,\n    marginBottom: 10,\n    fontWeight: \"bold\",\n    width: \"70%\"\n  },\n  inline_block: {\n    flexDirection: 'row',\n    alignSelf: 'flex-start'\n  },\n  add_name: {\n    marginTop: 8,\n    width: 200,\n    marginLeft: 10,\n    fontWeight: \"bold\",\n    textAlignVertical: 'top'\n  }\n});","map":{"version":3,"sources":["D:/Notes_app/Pages/add_notes/explorer_data/Pro_con_data.js"],"names":["React","Component","SQLite","db","openDatabase","Contact_compo_e","Product_compo_e","Create_product","Create_contacts","MaterialIcons","Ionicons","Entypo","load_products","load_contacts","Pro_con_data","props","go_supp_page","navigation","goBack","process_data","rows","type","setState","products_data","state","loadingmore","contacts_data","get_product_data","limit","supp_id","then","response","data","JSON","parse","get_contact_data","_onRefreshp","isRefreshing","supplier_id","loadmore_test","_onRefreshc","handleLoadMorep","parseInt","handleLoadMorec","setModalVisible","contact_model","product_model","edit_it","id","navigate","product_id","contact_id","suppliername","p_limit","c_limit","params","styles","container","zIndex","position","right","top","require","width","height","marginLeft","bind","inline_block","color","marginRight","heading","marginTop","backgroundColor","padding","add_name","item","index","toString","console","log","note","phone","email","supplier_name","contact_name","main_image","src","marginBottom","moq","fob_price","product_name","StyleSheet","create","flex","margin","fontSize","fontWeight","flexDirection","alignSelf","textAlignVertical"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { View, Text, StyleSheet, FlatList, Modal, RefreshControl, ActivityIndicator, TouchableOpacity, Image } from 'react-native';\r\nimport { SQLite } from 'expo-sqlite';\r\nconst db = SQLite.openDatabase('db.db');\r\n\r\n\r\n\r\nimport Contact_compo_e from \"../../Explorer_components/Contact_compo_e\";\r\nimport Product_compo_e from \"../../Explorer_components/Product_compo_e\";\r\nimport Create_product from '../notes_components/Create_product';\r\nimport Create_contacts from '../notes_components/Create_contacts';\r\n\r\nimport { MaterialIcons, Ionicons, Entypo } from '@expo/vector-icons';\r\nimport { load_products,load_contacts } from '../../models/all_models';\r\n \r\n\r\nexport default class Pro_con_data extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            products_data: [],\r\n            contacts_data: [],\r\n            supplier_id: '',\r\n            suppliername: '',\r\n            limit:0,\r\n            p_limit: 0,\r\n            c_limit: 0,\r\n            contact_model: false,\r\n            product_model: false\r\n        };\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        let params = this.props.navigation.state.params;\r\n        let supplier_id = params['supp_id'];\r\n        let suppliername = params['supp_name'];\r\n\r\n        this.get_product_data(this.state.p_limit, supplier_id);\r\n        this.get_contact_data(this.state.p_limit, supplier_id);\r\n\r\n        this.setState({\r\n            supplier_id: supplier_id,\r\n            suppliername: suppliername,\r\n        })\r\n\r\n    }\r\n\r\n    go_supp_page = () => {\r\n        // this.props.navigation.navigate('Add_supp');\r\n        this.props.navigation.goBack(null);\r\n    }\r\n\r\n\r\n\r\n    process_data = (rows, type) => {\r\n \r\n\r\n        if (type == 'products') {\r\n            this.setState({\r\n                products_data: [...this.state.products_data, ...rows],\r\n                loadingmore: false\r\n            })\r\n        }\r\n        if (type == 'contacts') {\r\n            this.setState({\r\n                contacts_data: [...this.state.contacts_data, ...rows],\r\n                loadingmore: false\r\n            })\r\n        }\r\n\r\n        // console.log(this.state.products_data)\r\n     \r\n    }\r\n\r\n\r\n    get_product_data = (limit, supp_id) => {\r\n\r\n        load_products(supp_id,limit).then((response) => { \r\n            var data   = JSON.parse(response);   \r\n            this.process_data(data['data'], 'products')\r\n        });\r\n \r\n    }\r\n\r\n    get_contact_data = (limit, supp_id) => {\r\n\r\n        load_contacts(supp_id,limit).then((response) => { \r\n            var data   = JSON.parse(response);   \r\n            this.process_data(data['data'], 'contacts')\r\n        });\r\n \r\n    }\r\n \r\n\r\n\r\n\r\n    ///// refresh_data ////////////////////\r\n    ////////////////////////////////////////  \r\n    _onRefreshp = () => {\r\n        this.setState({ isRefreshing: true })\r\n        this.setState({ products_data: [] })\r\n        this.setState({ limit: 0 })\r\n        this.get_product_data(0, this.state.supplier_id);\r\n        this.setState({ isRefreshing: false })\r\n        this.setState({ loadmore_test: ' ', });\r\n    }\r\n    _onRefreshc = () => {\r\n        this.setState({ isRefreshing: true })\r\n        this.setState({ contacts_data: [] })\r\n        this.setState({ limit: 0 })\r\n        this.get_contact_data(0, this.state.supplier_id);\r\n        this.setState({ isRefreshing: false })\r\n        this.setState({ loadmore_test: ' ', });\r\n    }\r\n\r\n    ///// LOAD MORE ////////////////////\r\n    ////////////////////////////////////////\r\n    handleLoadMorep = () => {\r\n\r\n        this.setState({ loadmore_test: 'Loading...', });\r\n        var limit = parseInt(this.state.limit) + parseInt(20);  // increase page by 1\r\n        this.setState({ limit: limit });\r\n        this.get_product_data(limit, this.state.supplier_id);  // method for API call \r\n        this.setState({ loadmore_test: 'Scroll down to load more', });\r\n    };\r\n    handleLoadMorec = () => {\r\n\r\n        this.setState({ loadmore_test: 'Loading...', });\r\n        var limit = parseInt(this.state.limit) + parseInt(20);  // increase page by 1\r\n        this.setState({ limit: limit });\r\n        this.get_contact_data(limit, this.state.supplier_id);  // method for API call \r\n        this.setState({ loadmore_test: 'Scroll down to load more', });\r\n\r\n    };\r\n    ////////////////////////////////////////    \r\n    ////////////////////////////////////////    \r\n\r\n\r\n\r\n    setModalVisible = async (state, type) => { \r\n        ////////Contacts Model\r\n        if (type == 'contacts') {\r\n            this.setState({\r\n                contact_model: state\r\n            })\r\n            await this._onRefreshc();\r\n        }\r\n        /////////Products model\r\n        if (type == 'products') {\r\n            this.setState({\r\n                product_model: state\r\n            })\r\n\r\n            await this._onRefreshp();\r\n        } \r\n\r\n    }\r\n\r\n    //////////////EDIT PRODUCT OR CONTACT\r\n    edit_it=(id,type)=>{\r\n        if(type == \"product\"){\r\n            this.props.navigation.navigate('Edit_product', {\r\n                product_id: id \r\n            });\r\n        }\r\n        if(type==\"contact\"){\r\n            this.props.navigation.navigate('Edit_contact', {\r\n                contact_id: id \r\n            });\r\n        }\r\n       \r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <View style={styles.container} >\r\n                {this.state.contact_model ?\r\n                    <Modal\r\n                        animationType=\"slide\"\r\n                        transparent={false}\r\n                        visible={this.state.contact_model}\r\n                        onRequestClose={() => {\r\n                            this.setModalVisible(false, 'contacts')\r\n                        }}>\r\n                        <TouchableOpacity style={{ zIndex: 10, position: \"absolute\", right: 10, top: 10 }} onPress={() => { this.setModalVisible(false, 'contacts') }}>\r\n                            <Image\r\n                                source={require(\"./../../../assets/img/close.png\")}\r\n                                style={{ width: 40, height: 40, marginLeft: 8 }}\r\n                            />\r\n                        </TouchableOpacity>\r\n                        <Create_contacts handle_visibility={this.setModalVisible.bind(this)} single_supp={true} supp_id={this.state.supplier_id} suppliername={this.state.suppliername} />\r\n                    </Modal> : null}\r\n\r\n\r\n                {this.state.product_model ?\r\n                    <Modal\r\n                        animationType=\"slide\"\r\n                        transparent={false}\r\n                        visible={this.state.product_model}\r\n                        onRequestClose={() => {\r\n                            this.setModalVisible(false, 'products')\r\n                        }}>\r\n                        <TouchableOpacity style={{ zIndex: 10, position: \"absolute\", right: 10, top: 10 }} onPress={() => { this.setModalVisible(false, 'products') }}>\r\n                            <Image\r\n                                source={require('./../../../assets/img/close.png')}\r\n                                style={{ width: 40, height: 40, marginLeft: 8 }}\r\n                            />\r\n                        </TouchableOpacity>\r\n                        <Create_product handle_visibility={this.setModalVisible.bind(this)}  single_supp={true} supp_id={this.state.supplier_id} suppliername={this.state.suppliername} />\r\n                    </Modal> : null}\r\n\r\n\r\n                <View style={styles.inline_block}>\r\n                    <TouchableOpacity onPress={() => { this.go_supp_page() }} >\r\n                        <Ionicons name=\"md-arrow-round-back\" size={60} style={{ color: 'black', marginRight: 10, }} />\r\n                    </TouchableOpacity>\r\n                    <Text style={styles.heading}>{this.state.suppliername}</Text>\r\n                </View>\r\n\r\n\r\n                <View style={{ marginTop: 10 }}>\r\n                    <View style={{ width: \"100%\", backgroundColor: \"#ed7d3182\", padding: 5 }} >\r\n\r\n                        <View style={styles.inline_block}>\r\n                            <TouchableOpacity onPress={() => { this.setModalVisible(true, 'contacts') }}  >\r\n                                <MaterialIcons name=\"add-circle-outline\" size={35} color=\"#000000\" />\r\n                            </TouchableOpacity>\r\n                            <Text style={styles.add_name}> CONTACTS</Text>\r\n                        </View>\r\n\r\n                        <View style={{ marginTop: 5, }}>\r\n                            <FlatList\r\n                                style={{ height: 212 }}\r\n                                //    numColumns={3}\r\n                                horizontal={true}\r\n                                data={this.state.contacts_data}\r\n                                refreshControl={\r\n                                    <RefreshControl\r\n                                        refreshing={this.state.isRefreshing}\r\n                                        onRefresh={this._onRefreshc.bind(this)}\r\n                                    />\r\n                                }\r\n                                keyExtractor={(item, index) => index.toString()}\r\n                                onEndReachedThreshold={3}\r\n                                onEndReached={this.handleLoadMorec.bind(this)}\r\n                                renderItem={({ item, index }) => (\r\n                                        console.log(item),\r\n                                   \r\n                                    <TouchableOpacity onPress ={()=>{ this.edit_it(item.contact_id,\"contact\") }}>\r\n                                            <Contact_compo_e note={item.note} phone={item.phone} email={item.email} supplier_name={item.supplier_name} contact_name={item.contact_name} image={item.main_image.src} />\r\n                                        </TouchableOpacity>\r\n                                    \r\n\r\n                                )}\r\n                            />\r\n                        </View>\r\n\r\n                    </View>\r\n\r\n\r\n                    <View style={{ width: \"100%\", backgroundColor: \"#8cc63e6b\", padding: 5 }}>\r\n\r\n                        <View style={styles.inline_block}>\r\n                            <TouchableOpacity onPress={() => { this.setModalVisible(true, 'products') }}  >\r\n                                <MaterialIcons name=\"add-circle-outline\" size={35} color=\"#000000\" />\r\n                            </TouchableOpacity>\r\n                            <Text style={styles.add_name}> PRODUCTS</Text>\r\n\r\n                        </View>\r\n\r\n                        <View style={{ marginTop: 5, marginBottom: 120, }}>\r\n                            <FlatList\r\n                                // numColumns={2}\r\n                                style={{ height: 195 }}\r\n                                horizontal={true}\r\n                                data={this.state.products_data}\r\n                                refreshControl={\r\n                                    <RefreshControl\r\n                                        refreshing={this.state.isRefreshing}\r\n                                        onRefresh={this._onRefreshp.bind(this)}\r\n                                    />\r\n                                }\r\n                                keyExtractor={(item, index) => index.toString()}\r\n                                onEndReachedThreshold={3}\r\n                                onEndReached={this.handleLoadMorep.bind(this)}\r\n                                renderItem={({ item, index }) => (  \r\n                                    <TouchableOpacity onPress ={()=>{ this.edit_it(item.product_id,\"product\") }}>\r\n                                            <Product_compo_e product_id = {item.product_id} note={item.note} moq={item.moq} fob_price={item.fob_price} product_name={item.product_name} supplier_name={item.supplier_name} image={item.main_image.src} />\r\n                                        </TouchableOpacity>  \r\n                                )}\r\n                            />\r\n\r\n                        </View>\r\n                    </View>\r\n\r\n\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst styles =\r\n    StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            margin: 20,\r\n\r\n        },\r\n        heading: {\r\n            fontSize: 22,\r\n            color: \"#000000\",\r\n            marginTop: 10,\r\n            marginBottom: 10,\r\n            fontWeight: \"bold\",\r\n            width: \"70%\"\r\n        },\r\n        inline_block: {\r\n            flexDirection: 'row',\r\n            alignSelf: 'flex-start'\r\n        },\r\n        add_name: {\r\n            marginTop: 8,\r\n            width: 200,\r\n            marginLeft: 10,\r\n            fontWeight: \"bold\",\r\n            textAlignVertical: 'top'\r\n        }\r\n    });"]},"metadata":{},"sourceType":"module"}