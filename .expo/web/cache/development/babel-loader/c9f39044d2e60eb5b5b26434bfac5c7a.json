{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"D:\\\\Notes_app\\\\Pages\\\\add_notes\\\\notes_components\\\\Create_supplier.js\";\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport * as ImagePicker from 'expo-image-picker';\nimport Images_upload_view from \"./Images_upload_view.js\";\nimport { SafeAreaView } from 'react-navigation';\nimport * as Permissions from 'expo-permissions';\nimport { SQLite } from 'expo-sqlite';\nimport { insert_supplier } from \"../../models/all_models.js\";\nvar db = SQLite.openDatabase('db.db');\n\nvar Create_supplier = function (_Component) {\n  _inherits(Create_supplier, _Component);\n\n  function Create_supplier(props) {\n    var _this;\n\n    _classCallCheck(this, Create_supplier);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Create_supplier).call(this, props));\n\n    _this.close_modal = function (value) {\n      _this.props.handle_visibility(value);\n    };\n\n    _this.choose_images = function _callee() {\n      var _await$Permissions$as, status, result, img_array;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA_ROLL));\n\n            case 2:\n              _await$Permissions$as = _context.sent;\n              status = _await$Permissions$as.status;\n\n              if (status == 'granted') {} else {}\n\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n                allowsEditing: false,\n                aspect: [4, 3],\n                base64: true,\n                quality: 0.5\n              }));\n\n            case 7:\n              result = _context.sent;\n              img_array = [];\n\n              if (result.base64) {\n                img_array.push(result.base64);\n              } else {}\n\n              _this.setState({\n                images: [].concat(_toConsumableArray(_this.state.images), img_array)\n              });\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    _this.click_images = function _callee2() {\n      var _await$Permissions$as2, status, result, img_array;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 2:\n              _await$Permissions$as2 = _context2.sent;\n              status = _await$Permissions$as2.status;\n\n              if (status !== 'granted') {}\n\n              _context2.next = 7;\n              return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync({\n                mediaTypes: ImagePicker.MediaTypeOptions.All,\n                allowsEditing: false,\n                aspect: [4, 3],\n                base64: true,\n                quality: 0.5\n              }));\n\n            case 7:\n              result = _context2.sent;\n              img_array = [];\n\n              if (result.base64) {\n                img_array.push(result.base64);\n              } else {}\n\n              _this.setState({\n                images: [].concat(_toConsumableArray(_this.state.images), img_array)\n              });\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    };\n\n    _this.update_supp_id = function (val1) {\n      _this.setState({\n        supplier_id: val1.supplier_id,\n        supplier_name: val1.suppliername,\n        show_s_create_btn: false\n      });\n    };\n\n    _this.fetchdata = function () {\n      _this.setState({\n        response: \" Note: Please wait we saving your data .... \"\n      });\n\n      var eventid = _this.state.event_id;\n      var supplier_name = _this.state.supplier_name;\n      var notes = _this.state.notes;\n      var images = _this.state.images;\n\n      if (supplier_name != '') {\n        insert_supplier(eventid, supplier_name, notes, images).then(function (response) {\n          var supp_data = JSON.parse(response);\n\n          if (supp_data) {}\n\n          _this.close_modal(false);\n        });\n      } else {\n        alert('Please Fill Supplier name ');\n\n        _this.setState({\n          response: \"Please Fill Supplier name \"\n        });\n      }\n    };\n\n    _this.state = {\n      user_id: 0,\n      user_name: '',\n      event_id: 0,\n      lastsupp: [],\n      supplier_name: '',\n      supplier_id: 0,\n      notes: '',\n      images: [],\n      response: ' ',\n      isCapturing: false,\n      show_s_create_btn: false\n    };\n    return _this;\n  }\n\n  _createClass(Create_supplier, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        event_id: this.props.event_id,\n        event_name: this.props.event_name\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(SafeAreaView, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        }\n      }, React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 22,\n          marginBottom: 10,\n          fontWeight: \"bold\",\n          color: \"#000000\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        }\n      }, this.state.event_name), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputfields,\n        textAlign: \"left\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            supplier_name: text\n          });\n        },\n        placeholderTextColor: \"#818181\",\n        placeholder: \"Supplier Name\",\n        ref: function ref(component) {\n          return _this2._textInput2 = component;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        }\n      })), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        }\n      }, React.createElement(TextInput, {\n        multiline: true,\n        numberOfLines: 10,\n        style: styles.textarea,\n        textAlign: \"left\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            notes: text\n          });\n        },\n        placeholderTextColor: \"#818181\",\n        placeholder: \"Notes\",\n        ref: function ref(component) {\n          return _this2._textInput5 = component;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        }\n      })), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        }\n      }, React.createElement(Text, {\n        style: styles.response,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        }\n      }, this.state.response)), React.createElement(View, {\n        style: styles.buttons,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        }\n      }, React.createElement(View, {\n        style: styles.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.choose_images();\n        },\n        style: {\n          width: 40\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        }\n      }, React.createElement(Image, {\n        source: require(\"../../../assets/img/gallery.png\"),\n        style: {\n          width: 40,\n          height: 40,\n          marginLeft: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        }\n      }))), React.createElement(View, {\n        style: styles.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.click_images();\n        },\n        style: {\n          width: 40\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        }\n      }, React.createElement(Image, {\n        source: require(\"../../../assets/img/camera.png\"),\n        style: {\n          width: 40,\n          height: 40,\n          marginLeft: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        }\n      }))), React.createElement(View, {\n        style: styles.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.fetchdata();\n        },\n        style: {\n          textAlign: \"center\",\n          backgroundColor: \"#176fc1\",\n          width: 100,\n          paddingLeft: 20,\n          paddingRight: 20,\n          paddingTop: 10,\n          paddingBottom: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"#fff\",\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        }\n      }, \"SAVE\")))), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        }\n      }, React.createElement(FlatList, {\n        numColumns: 3,\n        data: this.state.images,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(Images_upload_view, {\n            base64img: item,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 288\n            }\n          });\n        },\n        ListFooterComponent: this.renderFooter,\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        }\n      })))));\n    }\n  }]);\n\n  return Create_supplier;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    margin: 20,\n    backgroundColor: '#fff'\n  },\n  buttons: {\n    alignItems: \"flex-end\",\n    textAlign: \"center\",\n    marginTop: 5,\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  },\n  add_supp: {\n    backgroundColor: '#176fc1',\n    paddingLeft: 10,\n    paddingTop: 10,\n    paddingBottom: 10,\n    minWidth: 130,\n    maxWidth: 130\n  },\n  button: {\n    width: '20%'\n  },\n  inputfields: {\n    alignSelf: 'stretch',\n    opacity: 0.4,\n    marginTop: 15,\n    fontSize: 18,\n    backgroundColor: \"#fff\",\n    maxHeight: 40,\n    minWidth: 300,\n    borderColor: \"gray\",\n    borderWidth: 1,\n    paddingLeft: 15\n  },\n  textarea: {\n    alignSelf: 'stretch',\n    opacity: 0.4,\n    marginTop: 15,\n    fontSize: 18,\n    backgroundColor: \"#fff\",\n    maxHeight: 150,\n    minWidth: 300,\n    borderColor: \"gray\",\n    borderWidth: 1,\n    paddingLeft: 15,\n    textAlignVertical: 'top'\n  },\n  response: {\n    fontSize: 20,\n    color: \"red\",\n    marginBottom: 0\n  },\n  heading: {\n    fontSize: 18,\n    fontWeight: \"normal\",\n    borderColor: \"#176fc1\",\n    borderWidth: 1,\n    backgroundColor: \"#176fc1\",\n    color: \"#fff\",\n    padding: 5,\n    marginBottom: 10\n  },\n  camera: {\n    flex: 1,\n    justifyContent: 'space-between'\n  }\n});\nexport default Create_supplier;","map":{"version":3,"sources":["D:/Notes_app/Pages/add_notes/notes_components/Create_supplier.js"],"names":["React","Component","ImagePicker","Images_upload_view","SafeAreaView","Permissions","SQLite","insert_supplier","db","openDatabase","Create_supplier","props","close_modal","value","handle_visibility","choose_images","askAsync","CAMERA_ROLL","status","launchImageLibraryAsync","allowsEditing","aspect","base64","quality","result","img_array","push","setState","images","state","click_images","CAMERA","launchCameraAsync","mediaTypes","MediaTypeOptions","All","update_supp_id","val1","supplier_id","supplier_name","suppliername","show_s_create_btn","fetchdata","response","eventid","event_id","notes","then","supp_data","JSON","parse","alert","user_id","user_name","lastsupp","isCapturing","event_name","styles","container","fontSize","marginBottom","fontWeight","color","inputfields","text","component","_textInput2","textarea","_textInput5","buttons","button","width","require","height","marginLeft","textAlign","backgroundColor","paddingLeft","paddingRight","paddingTop","paddingBottom","item","renderFooter","index","toString","StyleSheet","create","flex","margin","alignItems","marginTop","flexDirection","flexWrap","add_supp","minWidth","maxWidth","alignSelf","opacity","maxHeight","borderColor","borderWidth","textAlignVertical","heading","padding","camera","justifyContent"],"mappings":"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","sourcesContent":["//import liraries\r\nimport React, { Component } from 'react';\r\nimport { View, FlatList, Text, TextInput, StyleSheet, TouchableOpacity, ScrollView, Alert, Image, AsyncStorage } from 'react-native';\r\n// import ImagePicker from 'react-native-image-crop-picker';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport Images_upload_view from './Images_upload_view.js';\r\nimport { SafeAreaView } from 'react-navigation';\r\nimport * as Permissions from 'expo-permissions';\r\n \r\n\r\n////////////////////SQLLITE CONNECTION\r\nimport { SQLite } from 'expo-sqlite';\r\nimport { insert_supplier } from '../../models/all_models.js';\r\nconst db = SQLite.openDatabase('db.db');\r\n//////////////////////////////////////\r\n\r\nclass Create_supplier extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        //////////////////\r\n        this.state = {\r\n            user_id: 0,\r\n            user_name: '',\r\n            event_id: 0,\r\n            lastsupp: [],\r\n            supplier_name: '',\r\n            supplier_id: 0,\r\n            notes: '',\r\n            images: [],\r\n            response: ' ',\r\n            isCapturing: false,\r\n            show_s_create_btn: false\r\n\r\n        }\r\n        ///////////////////\r\n\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {  \r\n        this.setState({\r\n            event_id: this.props.event_id,\r\n            event_name: this.props.event_name,\r\n        })\r\n    }\r\n\r\n    //CLOSE MODAL////\r\n    /////////////////\r\n    close_modal = (value)=>{  \r\n            this.props.handle_visibility(value); \r\n        }  \r\n \r\n \r\n\r\n \r\n\r\n    /////////////////GET COOKIES DATA /////////////////////\r\n    ///////////////////////////////////////////////////////\r\n\r\n\r\n\r\n\r\n\r\n    /* ************************************************ */\r\n    // Choose images from camera\r\n    /* ************************************************ */\r\n    /* ************************************************ */ \r\n    choose_images = async () => { \r\n        const { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL); \r\n        if (status == 'granted') {\r\n            // alert('Sorry, we need camera roll permissions to make this work!');\r\n            // alert(status)\r\n        } else {\r\n            // alert(status)\r\n        } \r\n        let result = await ImagePicker.launchImageLibraryAsync({\r\n            allowsEditing: false,\r\n            aspect: [4, 3],\r\n            base64: true,\r\n            quality:0.5\r\n        });\r\n\r\n        // console.log(result.base64);\r\n        var img_array = []; \r\n        if(result.base64){\r\n            img_array.push(result.base64);\r\n        }else{ \r\n        }  \r\n        this.setState({\r\n            images: [...this.state.images, ...img_array]\r\n        });   \r\n    }\r\n    /* ************************************************ */\r\n    /* ************************************************ */\r\n    /* ************************************************ */\r\n\r\n    // Click images from camera \r\n    ///////////////////////////\r\n    click_images = async () => { \r\n        const { status } = await Permissions.askAsync(Permissions.CAMERA);\r\n        if (status !== 'granted') {\r\n            // alert('Sorry, we need camera roll permissions to make this work!');\r\n\r\n        } \r\n        let result = await ImagePicker.launchCameraAsync({\r\n            mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n            allowsEditing: false,\r\n            aspect: [4, 3],\r\n            base64: true,\r\n            quality:0.5\r\n        });\r\n  \r\n        var img_array = []; \r\n        if(result.base64){\r\n            img_array.push(result.base64);\r\n        }else{ \r\n        }\r\n\r\n        this.setState({\r\n            images: [...this.state.images, ...img_array]\r\n        });\r\n \r\n    }\r\n\r\n\r\n\r\n    ////// Set supplier id for the contact\r\n    //////////////////////////////////////\r\n    update_supp_id = (val1) => { \r\n        this.setState({\r\n            supplier_id: val1.supplier_id,\r\n            supplier_name: val1.suppliername,\r\n            show_s_create_btn: false\r\n        });   \r\n    }\r\n\r\n \r\n \r\n\r\n    ////// POST Form data //////////////////\r\n    //////////////////////////////////////\r\n    fetchdata = () => {\r\n\r\n        this.setState({\r\n            response: \" Note: Please wait we saving your data .... \",\r\n        });\r\n        \r\n        /* ****************** */\r\n        /* SUPPLIER FORM DATA */\r\n        /* ****************** */\r\n        let eventid = this.state.event_id;\r\n        let supplier_name = this.state.supplier_name; \r\n        let notes = this.state.notes;\r\n        let images = this.state.images;\r\n\r\n        /* ************************ */\r\n        /* IF SUPPLIER IS NOT EMPTY */\r\n        /* ************************ */\r\n        if (supplier_name != '') {\r\n            insert_supplier(eventid, supplier_name, notes, images).then((response) => {\r\n                var supp_data = JSON.parse(response);\r\n                if(supp_data){\r\n                    \r\n                }\r\n                this.close_modal(false);\r\n                // console.log(supp_data);\r\n                // this.setState({\r\n                //     all_suppliers: supp_data.data\r\n                // });\r\n            });\r\n        /* ************************ */\r\n        /* ************************ */   \r\n        } else {\r\n            alert('Please Fill Supplier name ');\r\n            this.setState({\r\n                response: \"Please Fill Supplier name \"\r\n\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <SafeAreaView style={styles.container}>\r\n                <ScrollView>\r\n                    <View >\r\n                        <Text style={{ fontSize: 22, marginBottom: 10, fontWeight: \"bold\", color: \"#000000\" }}>{this.state.event_name}</Text>\r\n\r\n\r\n\r\n                        <View>\r\n                            <TextInput\r\n                                style={styles.inputfields}\r\n                                textAlign=\"left\"\r\n                                onChangeText={(text) => this.setState({ supplier_name: text })}\r\n                                placeholderTextColor='#818181'\r\n                                placeholder=\"Supplier Name\"\r\n                                ref={component => this._textInput2 = component}\r\n\r\n                            />\r\n                        </View>\r\n\r\n\r\n                        <View>\r\n                            <TextInput\r\n                                multiline={true}\r\n                                numberOfLines={10}\r\n                                style={styles.textarea}\r\n                                textAlign=\"left\"\r\n                                onChangeText={(text) => this.setState({ notes: text })}\r\n                                placeholderTextColor='#818181'\r\n                                placeholder=\"Notes\"\r\n                                ref={component => this._textInput5 = component}\r\n                            />\r\n                        </View>\r\n                        {/* <Image \r\n                        style ={{width:25,height:25}}\r\n                        source={require('../assets/img/search.png')}\r\n                         /> */}\r\n\r\n\r\n                        <View>\r\n                            <Text style={styles.response}>{this.state.response}</Text>\r\n                        </View>\r\n                        {/* <View style={{alignItems:\"center\",alignContent:\"center\"}}>\r\n                                    <TouchableOpacity\r\n                                //  onPress={() => {this.submitForm()}}\r\n                                    style={{backgroundColor:\"#176fc1\",width:100,paddingLeft:20,paddingRight:20,paddingTop:10,paddingBottom:10}}>\r\n                                        <Text style={{color:\"#fff\"}}>Save</Text>\r\n                                    </TouchableOpacity>\r\n                                </View> */}\r\n                        <View style={styles.buttons}>\r\n\r\n                            <View style={styles.button}>\r\n                                <TouchableOpacity\r\n                                    onPress={() => { this.choose_images() }}\r\n                                    style={{ width: 40 }}>\r\n                                    <Image\r\n                                        source={require('../../../assets/img/gallery.png')}\r\n                                        style={{ width: 40, height: 40, marginLeft: 8 }}\r\n                                    />\r\n                                    {/* <Text style={{color:\"#000000\"}}> GALLERY</Text> */}\r\n                                </TouchableOpacity>\r\n                            </View>\r\n\r\n\r\n\r\n\r\n                            <View style={styles.button}>\r\n                                <TouchableOpacity\r\n                                    onPress={() => { this.click_images() }}\r\n                                    style={{ width: 40 }}>\r\n                                    <Image\r\n                                        source={require('../../../assets/img/camera.png')}\r\n                                        style={{ width: 40, height: 40, marginLeft: 8 }}\r\n                                    />\r\n                                    {/* <Text style={{color:\"#000000\"}}>CAMERA</Text> */}\r\n                                </TouchableOpacity>\r\n                            </View>\r\n\r\n\r\n\r\n\r\n                            <View style={styles.button}>\r\n                                <TouchableOpacity\r\n                                    onPress={() => { this.fetchdata() }}\r\n                                    style={{ textAlign: \"center\", backgroundColor: \"#176fc1\", width: 100, paddingLeft: 20, paddingRight: 20, paddingTop: 10, paddingBottom: 10 }}>\r\n                                    <Text style={{ color: \"#fff\", textAlign: \"center\" }}>SAVE</Text>\r\n                                </TouchableOpacity>\r\n                            </View>\r\n                        </View>\r\n\r\n\r\n                        <View>\r\n                            <FlatList\r\n                                numColumns={3}\r\n                                data={this.state.images}\r\n                                //data={this.state.images} \r\n                                //Item Separator View this.state.lastsuppliers\r\n                                renderItem={({ item }) => (\r\n                                    <Images_upload_view base64img={item} />\r\n                                )}\r\n                                ListFooterComponent={this.renderFooter}\r\n                                keyExtractor={(item, index) => index.toString()}\r\n\r\n                            />\r\n                        </View>\r\n\r\n\r\n\r\n\r\n\r\n                    </View>\r\n                </ScrollView>\r\n            </SafeAreaView>\r\n        );\r\n    }\r\n}\r\n\r\n// define your styles\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        margin: 20,\r\n        backgroundColor: '#fff',\r\n    },\r\n    buttons: {\r\n        alignItems: \"flex-end\",\r\n        textAlign: \"center\",\r\n        marginTop: 5,\r\n        flexDirection: 'row',\r\n        flexWrap: 'wrap',\r\n\r\n    },\r\n    add_supp: {\r\n        backgroundColor: '#176fc1',\r\n        paddingLeft: 10,\r\n        paddingTop: 10,\r\n        paddingBottom: 10,\r\n        minWidth: 130,\r\n        maxWidth: 130,\r\n\r\n    },\r\n    button: {\r\n        width: '20%'\r\n    },\r\n\r\n    inputfields: {\r\n        alignSelf: 'stretch',\r\n        opacity: 0.4,\r\n        marginTop: 15,\r\n        fontSize: 18,\r\n        backgroundColor: \"#fff\",\r\n        maxHeight: 40,\r\n        minWidth: 300,\r\n        borderColor: \"gray\",\r\n        borderWidth: 1,\r\n        paddingLeft: 15\r\n    },\r\n    textarea: {\r\n        alignSelf: 'stretch',\r\n        opacity: 0.4,\r\n        marginTop: 15,\r\n        fontSize: 18,\r\n        backgroundColor: \"#fff\",\r\n        maxHeight: 150,\r\n        minWidth: 300,\r\n        borderColor: \"gray\",\r\n        borderWidth: 1,\r\n        paddingLeft: 15,\r\n        textAlignVertical: 'top',\r\n    },\r\n    response: {\r\n        fontSize: 20,\r\n        color: \"red\",\r\n        marginBottom: 0\r\n    },\r\n    heading: {\r\n        fontSize: 18,\r\n        fontWeight: \"normal\",\r\n        borderColor: \"#176fc1\",\r\n        borderWidth: 1,\r\n        backgroundColor: \"#176fc1\",\r\n        color: \"#fff\",\r\n        padding: 5,\r\n        marginBottom: 10\r\n    },\r\n    camera: {\r\n        flex: 1,\r\n        justifyContent: 'space-between',\r\n    }\r\n});\r\n\r\n\r\n//make this component available to the app\r\nexport default Create_supplier;\r\n"]},"metadata":{},"sourceType":"module"}