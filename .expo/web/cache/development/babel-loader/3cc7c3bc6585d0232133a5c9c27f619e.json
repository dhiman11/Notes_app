{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"D:\\\\Notes_app\\\\Pages\\\\Home_page.js\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport { createAppContainer, createBottomTabNavigator, createStackNavigator } from 'react-navigation';\nimport History_pages from \"./History_pages\";\nimport Add_note from \"./Add_note\";\nimport Products from \"./Products\";\nimport History_pages_online from \"./History_pages_online\";\nimport { FontAwesome, Entypo, SimpleLineIcons } from '@expo/vector-icons';\nimport User from \"./User\";\nvar Appli = createBottomTabNavigator({\n  Products: {\n    screen: Products,\n    navigationOptions: {\n      title: 'All products',\n      tabBarIcon: function tabBarIcon(_ref) {\n        var focused = _ref.focused,\n            tintColor = _ref.tintColor;\n        return React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          }\n        }, React.createElement(FontAwesome, {\n          name: \"search\",\n          size: 25,\n          color: \"#000000\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          }\n        }));\n      }\n    }\n  },\n  History: {\n    screen: History_pages,\n    navigationOptions: {\n      title: 'My Notes',\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var focused = _ref2.focused,\n            tintColor = _ref2.tintColor;\n        return React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          }\n        }, React.createElement(SimpleLineIcons, {\n          name: \"note\",\n          size: 25,\n          color: \"#000000\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          }\n        }));\n      }\n    }\n  },\n  Add: {\n    screen: Add_note,\n    navigationOptions: {\n      title: 'Add Note',\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var focused = _ref3.focused,\n            tintColor = _ref3.tintColor;\n        return React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          }\n        }, React.createElement(Entypo, {\n          name: \"plus\",\n          size: 40,\n          color: \"#000000\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          }\n        }));\n      }\n    }\n  },\n  Timeline: {\n    screen: History_pages_online,\n    navigationOptions: {\n      title: 'History',\n      tabBarIcon: function tabBarIcon(_ref4) {\n        var focused = _ref4.focused,\n            tintColor = _ref4.tintColor;\n        return React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          }\n        }, React.createElement(FontAwesome, {\n          name: \"history\",\n          size: 25,\n          color: \"#000000\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          }\n        }));\n      }\n    }\n  },\n  Users: {\n    screen: User,\n    navigationOptions: {\n      title: 'Me',\n      tabBarIcon: function tabBarIcon(_ref5) {\n        var focused = _ref5.focused,\n            tintColor = _ref5.tintColor;\n        return React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          }\n        }, React.createElement(FontAwesome, {\n          name: \"user-circle\",\n          size: 25,\n          color: \"#000000\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          }\n        }));\n      }\n    }\n  }\n}, {\n  initialRouteName: \"Users\",\n  tabBarOptions: {\n    activeTintColor: '#fff',\n    inactiveTintColor: '#000000',\n    activeBackgroundColor: \"#2e75b6\",\n    indicatorStyle: {\n      height: null,\n      top: 0,\n      backgroundColor: 'red'\n    }\n  }\n});\nvar styles = StyleSheet.create({\n  tabButton: {\n    paddingTop: 0,\n    paddingBottom: 0,\n    alignItems: 'center',\n    justifyContent: 'center',\n    flex: 1\n  },\n  tabButtonText: {\n    textTransform: 'uppercase'\n  },\n  icon: {\n    fontFamily: 'Arial',\n    height: 30,\n    fontSize: 25,\n    paddingBottom: 0\n  }\n});\nvar Mainmenu = createAppContainer(Appli);\n\nvar Home_page = function (_React$Component) {\n  _inherits(Home_page, _React$Component);\n\n  function Home_page(props) {\n    var _this;\n\n    _classCallCheck(this, Home_page);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Home_page).call(this, props));\n\n    _this._bootstrapAsync = function _callee(props) {\n      var userToken;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('cookies'));\n\n            case 2:\n              userToken = _context.sent;\n\n              try {\n                token = JSON.parse(userToken);\n\n                _this.setState({\n                  logged_in: token.logged_in\n                });\n              } catch (error) {}\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    _this.state = {\n      logged_in: false\n    };\n\n    _this._bootstrapAsync(props);\n\n    return _this;\n  }\n\n  _createClass(Home_page, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Mainmenu, {\n        screenProps: this.props.navigation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        }\n      });\n    }\n  }]);\n\n  return Home_page;\n}(React.Component);\n\nexport { Home_page as default };","map":{"version":3,"sources":["D:/Notes_app/Pages/Home_page.js"],"names":["React","createAppContainer","createBottomTabNavigator","createStackNavigator","History_pages","Add_note","Products","History_pages_online","FontAwesome","Entypo","SimpleLineIcons","User","Appli","screen","navigationOptions","title","tabBarIcon","focused","tintColor","History","Add","Timeline","Users","initialRouteName","tabBarOptions","activeTintColor","inactiveTintColor","activeBackgroundColor","indicatorStyle","height","top","backgroundColor","styles","StyleSheet","create","tabButton","paddingTop","paddingBottom","alignItems","justifyContent","flex","tabButtonText","textTransform","icon","fontFamily","fontSize","Mainmenu","Home_page","props","_bootstrapAsync","AsyncStorage","getItem","userToken","token","JSON","parse","setState","logged_in","error","state","navigation","Component"],"mappings":"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","sourcesContent":["//import liraries\r\nimport React from 'react';\r\nimport { View, Text, StyleSheet, Image, AsyncStorage } from 'react-native';\r\n\r\nimport { createAppContainer, createBottomTabNavigator, createStackNavigator } from 'react-navigation';\r\n\r\n// create a component\r\nimport History_pages from './History_pages';\r\nimport Add_note from './Add_note';\r\nimport Products from './Products';\r\nimport History_pages_online from './History_pages_online';\r\nimport { FontAwesome, Entypo,SimpleLineIcons } from '@expo/vector-icons';\r\nimport User from './User';\r\n\r\n \r\n\r\nconst Appli = createBottomTabNavigator(\r\n\t{\r\n\t\tProducts: {\r\n\t\t\tscreen: Products,\r\n\t\t\tnavigationOptions: {\r\n\t\t\t\ttitle: 'All products',\r\n\t\t\t\ttabBarIcon: ({ focused, tintColor }) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<View>\r\n\t\t\t\t\t\t\t<FontAwesome name=\"search\" size={25} color=\"#000000\" />\r\n\t\t\t\t\t\t</View>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tHistory: {\r\n\t\t\tscreen: History_pages,\r\n\t\t\tnavigationOptions: {\r\n\t\t\t\ttitle: 'My Notes',\r\n\t\t\t\ttabBarIcon: ({ focused, tintColor }) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<View>\r\n\t\t\t\t\t\t\t<SimpleLineIcons name=\"note\" size={25} color=\"#000000\" />\r\n\t\t\t\t\t\t</View>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tAdd: {\r\n\t\t\tscreen: Add_note,\r\n\t\t\tnavigationOptions: {\r\n\t\t\t\ttitle: 'Add Note',\r\n\t\t\t\ttabBarIcon: ({ focused, tintColor }) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<View>\r\n\t\t\t\t\t\t\t<Entypo name=\"plus\" size={40} color=\"#000000\" />\r\n\t\t\t\t\t\t</View>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tTimeline: {\r\n\t\t\tscreen: History_pages_online,\r\n\t\t\tnavigationOptions: {\r\n\t\t\t\ttitle: 'History',\r\n\t\t\t\ttabBarIcon: ({ focused, tintColor }) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<View>\r\n\t\t\t\t\t\t\t<FontAwesome name=\"history\" size={25} color=\"#000000\" />\r\n\t\t\t\t\t\t</View>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tUsers: {\r\n\t\t\tscreen: User,\r\n\t\t\tnavigationOptions: {\r\n\t\t\t\ttitle: 'Me',\r\n\t\t\t\ttabBarIcon: ({ focused, tintColor }) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<View>\r\n\t\t\t\t\t\t\t<FontAwesome name=\"user-circle\" size={25} color=\"#000000\" />\r\n\t\t\t\t\t\t</View>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t},\r\n\t{\r\n\t\tinitialRouteName: \"Users\",\r\n\r\n\t\ttabBarOptions: {\r\n\t\t\tactiveTintColor: '#fff',\r\n\t\t\tinactiveTintColor: '#000000',\r\n\t\t\tactiveBackgroundColor: \"#2e75b6\",\r\n\t\t\tindicatorStyle: {\r\n\t\t\t\theight: null,\r\n\t\t\t\ttop: 0,\r\n\t\t\t\tbackgroundColor: 'red',\r\n\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\r\n);\r\n\r\nconst styles = StyleSheet.create({\r\n\ttabButton: {\r\n\t\tpaddingTop: 0,\r\n\t\tpaddingBottom: 0,\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'center',\r\n\t\tflex: 1\r\n\t},\r\n\ttabButtonText: {\r\n\t\ttextTransform: 'uppercase'\r\n\t},\r\n\ticon: {\r\n\t\tfontFamily: 'Arial',\r\n\t\theight: 30,\r\n\t\tfontSize: 25,\r\n\t\tpaddingBottom: 0\r\n\t}\r\n});\r\n\r\n\r\n\r\n\r\n\r\nconst Mainmenu = createAppContainer(Appli);\r\n\r\n\r\n\r\nexport default class Home_page extends React.Component {\r\n\t///////////////////////////\r\n\t///////////////////////////\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tlogged_in: false\r\n\t\t}\r\n\t\tthis._bootstrapAsync(props);\r\n\t}\r\n\r\n\r\n\t_bootstrapAsync = async (props) => {\r\n\t\tconst userToken = await AsyncStorage.getItem('cookies');\r\n\t\ttry {\r\n\t\t\ttoken = JSON.parse(userToken);\r\n\t\t\t//////////////////////////////\r\n\t\t\tthis.setState({\r\n\t\t\t\tlogged_in: token.logged_in\r\n\t\t\t});\r\n\r\n\t\t} catch (error) {\r\n\r\n\r\n\t\t}\r\n\t\t// This will switch to the App screen or Auth screen and this loading\r\n\t\t// screen will be unmounted and thrown away.\r\n\r\n\t};\r\n\r\n\r\n\t///////////////////////////\r\n\t///////////////////////////\r\n\trender() {\r\n\r\n\t\treturn (\r\n\t\t\t<Mainmenu screenProps={this.props.navigation} />\r\n\t\t);\r\n\r\n\t}\r\n\t///////////////////////////\r\n\t///////////////////////////\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}