{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"D:\\\\Notes_app\\\\Pages\\\\history_tabs\\\\Events_tab_data.js\";\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { SQLite } from 'expo-sqlite';\nvar db = SQLite.openDatabase('db.db');\nimport Event_compo from \"../History_components/Event_compo\";\nimport { load_events } from \"../models/all_models\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { cookies } from \"../Settings\";\n\nvar Events_tab_data = function (_Component) {\n  _inherits(Events_tab_data, _Component);\n\n  function Events_tab_data(props) {\n    var _this;\n\n    _classCallCheck(this, Events_tab_data);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Events_tab_data).call(this, props));\n\n    _this.componentDidMount = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.props.navigation.addListener('willFocus', function (route) {\n                _this._onRefresh();\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    _this.process_data = function (rows) {\n      _this.setState({\n        events_data: [].concat(_toConsumableArray(_this.state.events_data), _toConsumableArray(rows)),\n        loadingmore: false\n      });\n\n      console.log(_this.state.events_data);\n    };\n\n    _this.get_data = function _callee2(limit) {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(cookies.then(function (obj) {\n                var data = JSON.parse(obj);\n\n                _this.setState({\n                  user_id: data.user_id\n                });\n              }));\n\n            case 2:\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(load_events(limit, _this.state.user_id).then(function (response) {\n                var event_data = JSON.parse(response);\n                console.log(event_data);\n\n                _this.process_data(event_data.event_list_all);\n              }));\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    };\n\n    _this._onRefresh = function () {\n      _this.setState({\n        isRefreshing: true\n      });\n\n      _this.setState({\n        events_data: []\n      });\n\n      _this.setState({\n        limit: 0\n      });\n\n      _this.get_data(0);\n\n      _this.setState({\n        isRefreshing: false\n      });\n\n      _this.setState({\n        loadmore_test: ' '\n      });\n    };\n\n    _this.handleLoadMore = function () {\n      _this.setState({\n        loadmore_test: 'Loading...'\n      });\n\n      var limit = parseInt(_this.state.limit) + parseInt(20);\n\n      _this.setState({\n        limit: limit\n      });\n\n      _this.get_data(limit);\n\n      _this.setState({\n        loadmore_test: 'Scroll down to load more'\n      });\n    };\n\n    _this.state = {\n      events_data: [],\n      loadmore_test: '',\n      isRefreshing: false,\n      loadingmore: false,\n      history_array: [],\n      limit: 0,\n      user_id: null\n    };\n    return _this;\n  }\n\n  _createClass(Events_tab_data, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        }\n      }, this.state.loadingmore && React.createElement(ActivityIndicator, {\n        animating: this.state.loadingmore,\n        size: \"large\",\n        color: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        }\n      }), React.createElement(FlatList, {\n        numColumns: 1,\n        data: this.state.events_data,\n        refreshControl: React.createElement(RefreshControl, {\n          refreshing: this.state.isRefreshing,\n          onRefresh: this._onRefresh.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          }\n        }),\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        onEndReachedThreshold: 3,\n        onEndReached: this.handleLoadMore.bind(this),\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item,\n              index = _ref.index;\n          return React.createElement(View, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107\n            }\n          }, React.createElement(TouchableOpacity, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108\n            }\n          }, React.createElement(Event_compo, {\n            event_name: item.event_name,\n            city: item.city,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109\n            }\n          })));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        }\n      }), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        }\n      }, this.state.loadmore_test)));\n    }\n  }]);\n\n  return Events_tab_data;\n}(Component);\n\nexport { Events_tab_data as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#fff'\n  },\n  heading: {\n    fontSize: 22,\n    color: \"#000000\",\n    marginTop: 10,\n    width: 100,\n    marginBottom: 20,\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"sources":["D:/Notes_app/Pages/history_tabs/Events_tab_data.js"],"names":["React","Component","SQLite","db","openDatabase","Event_compo","load_events","TouchableOpacity","cookies","Events_tab_data","props","componentDidMount","navigation","addListener","route","_onRefresh","process_data","rows","setState","events_data","state","loadingmore","console","log","get_data","limit","then","obj","data","JSON","parse","user_id","response","event_data","event_list_all","isRefreshing","loadmore_test","handleLoadMore","parseInt","history_array","styles","container","bind","item","index","toString","event_name","city","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","heading","fontSize","color","marginTop","width","marginBottom","fontWeight"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;AAGA,SAASC,MAAT,QAAuB,aAAvB;AACA,IAAMC,EAAE,GAAGD,MAAM,CAACE,YAAP,CAAoB,OAApB,CAAX;AACA,OAAOC,WAAP;AACA,SAASC,WAAT;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,SAASC,OAAT;;IAGqBC,e;;;AACjB,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,yFAAMA,KAAN;;AADe,UAanBC,iBAbmB,GAaA;AAAA;AAAA;AAAA;AAAA;AAEf,oBAAKD,KAAL,CAAWE,UAAX,CAAsBC,WAAtB,CAAkC,WAAlC,EAA+C,UAACC,KAAD,EAAW;AACtD,sBAAKC,UAAL;AACH,eAFD;;AAFe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAbA;;AAAA,UAuBnBC,YAvBmB,GAuBJ,UAACC,IAAD,EAAU;AAErB,YAAKC,QAAL,CAAc;AACVC,QAAAA,WAAW,+BAAM,MAAKC,KAAL,CAAWD,WAAjB,sBAAiCF,IAAjC,EADD;AAEVI,QAAAA,WAAW,EAAE;AAFH,OAAd;;AAKAC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKH,KAAL,CAAWD,WAAvB;AACH,KA/BkB;;AAAA,UAiCnBK,QAjCmB,GAiCR,kBAAMC,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEDjB,OAAO,CAACkB,IAAR,CAAa,UAACC,GAAD,EAAU;AACzB,oBAAIC,IAAI,GAAOC,IAAI,CAACC,KAAL,CAAWH,GAAX,CAAf;;AACA,sBAAKT,QAAL,CAAc;AACVa,kBAAAA,OAAO,EAACH,IAAI,CAACG;AADH,iBAAd;AAGF,eALI,CAFC;;AAAA;AAAA;AAAA,+CAQFzB,WAAW,CAACmB,KAAD,EAAO,MAAKL,KAAL,CAAWW,OAAlB,CAAX,CAAsCL,IAAtC,CAA2C,UAACM,QAAD,EAAc;AAC1D,oBAAIC,UAAU,GAAKJ,IAAI,CAACC,KAAL,CAAWE,QAAX,CAAnB;AACAV,gBAAAA,OAAO,CAACC,GAAR,CAAYU,UAAZ;;AACA,sBAAKjB,YAAL,CAAkBiB,UAAU,CAACC,cAA7B;AAEH,eALI,CARE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAjCQ;;AAAA,UAkDnBnB,UAlDmB,GAkDN,YAAM;AACf,YAAKG,QAAL,CAAc;AAAEiB,QAAAA,YAAY,EAAE;AAAhB,OAAd;;AACA,YAAKjB,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAE;AAAf,OAAd;;AACA,YAAKD,QAAL,CAAc;AAAEO,QAAAA,KAAK,EAAE;AAAT,OAAd;;AACA,YAAKD,QAAL,CAAc,CAAd;;AACA,YAAKN,QAAL,CAAc;AAAEiB,QAAAA,YAAY,EAAE;AAAhB,OAAd;;AACA,YAAKjB,QAAL,CAAc;AAAEkB,QAAAA,aAAa,EAAE;AAAjB,OAAd;AACH,KAzDkB;;AAAA,UA4DnBC,cA5DmB,GA4DF,YAAM;AAEnB,YAAKnB,QAAL,CAAc;AAAEkB,QAAAA,aAAa,EAAE;AAAjB,OAAd;;AACA,UAAIX,KAAK,GAAGa,QAAQ,CAAC,MAAKlB,KAAL,CAAWK,KAAZ,CAAR,GAA6Ba,QAAQ,CAAC,EAAD,CAAjD;;AACA,YAAKpB,QAAL,CAAc;AAAEO,QAAAA,KAAK,EAAEA;AAAT,OAAd;;AACA,YAAKD,QAAL,CAAcC,KAAd;;AACA,YAAKP,QAAL,CAAc;AAAEkB,QAAAA,aAAa,EAAE;AAAjB,OAAd;AAEH,KApEkB;;AAEf,UAAKhB,KAAL,GAAa;AACTD,MAAAA,WAAW,EAAE,EADJ;AAETiB,MAAAA,aAAa,EAAE,EAFN;AAGTD,MAAAA,YAAY,EAAE,KAHL;AAITd,MAAAA,WAAW,EAAE,KAJJ;AAKTkB,MAAAA,aAAa,EAAE,EALN;AAMTd,MAAAA,KAAK,EAAE,CANE;AAOTM,MAAAA,OAAO,EAAC;AAPC,KAAb;AAFe;AAWlB;;;;6BA4DQ;AACL,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAES,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA,SAEK,KAAKrB,KAAL,CAAWC,WAAX,IACG,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAE,KAAKD,KAAL,CAAWC,WAAzC;AAAsD,QAAA,IAAI,EAAC,OAA3D;AAAmE,QAAA,KAAK,EAAC,KAAzE;AAAA;AAAA;AAAA;AAAA;AAAA,QAHR,EAKI,oBAAC,QAAD;AACI,QAAA,UAAU,EAAE,CADhB;AAEI,QAAA,IAAI,EAAE,KAAKD,KAAL,CAAWD,WAFrB;AAGI,QAAA,cAAc,EACV,oBAAC,cAAD;AACI,UAAA,UAAU,EAAE,KAAKC,KAAL,CAAWe,YAD3B;AAEI,UAAA,SAAS,EAAE,KAAKpB,UAAL,CAAgB2B,IAAhB,CAAqB,IAArB,CAFf;AAAA;AAAA;AAAA;AAAA;AAAA,UAJR;AASI,QAAA,YAAY,EAAE,sBAACC,IAAD,EAAOC,KAAP;AAAA,iBAAiBA,KAAK,CAACC,QAAN,EAAjB;AAAA,SATlB;AAUI,QAAA,qBAAqB,EAAE,CAV3B;AAWI,QAAA,YAAY,EAAE,KAAKR,cAAL,CAAoBK,IAApB,CAAyB,IAAzB,CAXlB;AAYI,QAAA,UAAU,EAAE;AAAA,cAAGC,IAAH,QAAGA,IAAH;AAAA,cAASC,KAAT,QAASA,KAAT;AAAA,iBAIR,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA,aACK,oBAAC,WAAD;AAAa,YAAA,UAAU,EAAED,IAAI,CAACG,UAA9B;AAA0C,YAAA,IAAI,EAAEH,IAAI,CAACI,IAArD;AAAA;AAAA;AAAA;AAAA;AAAA,YADL,CADJ,CAJQ;AAAA,SAZhB;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,EA8BI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,KAAK3B,KAAL,CAAWgB,aAAlB,CADJ,CA9BJ,CADJ;AAuCH;;;;EAhHwCnC,S;;SAAxBQ,e;AAoHrB,IAAM+B,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC7BR,EAAAA,SAAS,EAAE;AACPS,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,cAAc,EAAE,QAFT;AAGPC,IAAAA,UAAU,EAAE,QAHL;AAIPC,IAAAA,eAAe,EAAE;AAJV,GADkB;AAS7BC,EAAAA,OAAO,EAAE;AACLC,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,KAAK,EAAE,SAFF;AAGLC,IAAAA,SAAS,EAAE,EAHN;AAILC,IAAAA,KAAK,EAAE,GAJF;AAKLC,IAAAA,YAAY,EAAE,EALT;AAMLC,IAAAA,UAAU,EAAE;AANP;AAToB,CAAlB,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { View, Text, StyleSheet, FlatList, RefreshControl, ActivityIndicator } from 'react-native';\r\n\r\nimport { SQLite } from 'expo-sqlite';\r\nconst db = SQLite.openDatabase('db.db');\r\nimport Event_compo from '../History_components/Event_compo';\r\nimport { load_events } from '../models/all_models';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\nimport { cookies } from '../Settings';\r\n \r\n\r\nexport default class Events_tab_data extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            events_data: [],\r\n            loadmore_test: '',\r\n            isRefreshing: false,\r\n            loadingmore: false,\r\n            history_array: [],\r\n            limit: 0,\r\n            user_id:null\r\n        };\r\n    }\r\n\r\n    componentDidMount =async()=> {\r\n        // this.get_data(this.state.limit);\r\n        this.props.navigation.addListener('willFocus', (route) => {\r\n            this._onRefresh();\r\n        });\r\n\r\n     \r\n\r\n    }\r\n\r\n    process_data = (rows) => {\r\n\r\n        this.setState({\r\n            events_data: [...this.state.events_data, ...rows],\r\n            loadingmore: false\r\n        })\r\n\r\n        console.log(this.state.events_data);\r\n    }\r\n\r\n    get_data = async(limit) => { \r\n       \r\n        await cookies.then((obj)  => {\r\n            var data =     JSON.parse(obj);  \r\n            this.setState({\r\n                user_id:data.user_id\r\n            })   \r\n         }); \r\n       await load_events(limit,this.state.user_id).then((response) => {  \r\n            var event_data   = JSON.parse(response);\r\n            console.log(event_data);\r\n            this.process_data(event_data.event_list_all)\r\n          \r\n        }); \r\n\r\n    }\r\n\r\n    _onRefresh = () => {\r\n        this.setState({ isRefreshing: true })\r\n        this.setState({ events_data: [] })\r\n        this.setState({ limit: 0 })\r\n        this.get_data(0);\r\n        this.setState({ isRefreshing: false })\r\n        this.setState({ loadmore_test: ' ', });\r\n    }\r\n\r\n    ///// LOAD MORE ////////////////////\r\n    handleLoadMore = () => {\r\n\r\n        this.setState({ loadmore_test: 'Loading...', });\r\n        var limit = parseInt(this.state.limit) + parseInt(20);  // increase page by 1\r\n        this.setState({ limit: limit });\r\n        this.get_data(limit);  // method for API call \r\n        this.setState({ loadmore_test: 'Scroll down to load more', });\r\n\r\n    };\r\n\r\n \r\n    render() {\r\n        return (\r\n            <View style={styles.container}>\r\n\r\n                {this.state.loadingmore &&\r\n                    <ActivityIndicator animating={this.state.loadingmore} size=\"large\" color=\"red\" />\r\n                }\r\n                <FlatList\r\n                    numColumns={1}\r\n                    data={this.state.events_data}\r\n                    refreshControl={\r\n                        <RefreshControl\r\n                            refreshing={this.state.isRefreshing}\r\n                            onRefresh={this._onRefresh.bind(this)}\r\n                        />\r\n                    }\r\n                    keyExtractor={(item, index) => index.toString()}\r\n                    onEndReachedThreshold={3}\r\n                    onEndReached={this.handleLoadMore.bind(this)}\r\n                    renderItem={({ item, index }) => (\r\n\r\n\r\n\r\n                        <View>\r\n                            <TouchableOpacity>\r\n                                 <Event_compo event_name={item.event_name} city={item.city} />\r\n                            </TouchableOpacity>\r\n                        </View>\r\n\r\n                    )}\r\n                />\r\n\r\n                <View>\r\n                    <Text>{this.state.loadmore_test}</Text>\r\n                </View>\r\n\r\n\r\n            </View>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n// define your styles\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundColor: '#fff',\r\n\r\n\r\n    },\r\n    heading: {\r\n        fontSize: 22,\r\n        color: \"#000000\",\r\n        marginTop: 10,\r\n        width: 100,\r\n        marginBottom: 20,\r\n        fontWeight: \"bold\"\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}