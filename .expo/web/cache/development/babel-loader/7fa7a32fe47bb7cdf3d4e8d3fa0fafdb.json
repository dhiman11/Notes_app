{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"D:\\\\Notes_app\\\\Pages\\\\add_notes\\\\Add_contact_products.js\";\nimport React, { Component } from 'react';\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { createAppContainer } from 'react-navigation';\nimport { createBottomTabNavigator } from 'react-navigation-tabs';\nimport Create_product from \"./notes_components/Create_product\";\nimport Create_contacts from \"./notes_components/Create_contacts\";\nvar add_note = createBottomTabNavigator({\n  Contacts: {\n    screen: Create_contacts,\n    navigationOptions: {\n      tabBarIcon: function tabBarIcon(_ref) {\n        var focused = _ref.focused,\n            tintColor = _ref.tintColor;\n        var iconFocused = focused ? 'add-contact-active.png' : 'add-contact-inactive.png';\n\n        if (focused) {\n          return React.createElement(View, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 20\n            }\n          }, React.createElement(Image, {\n            style: {\n              width: 30,\n              height: 30\n            },\n            source: require(\"../../assets/img/add-contact-active.png\"),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 21\n            }\n          }));\n        } else {\n          return React.createElement(View, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            }\n          }, React.createElement(Image, {\n            style: {\n              width: 30,\n              height: 30\n            },\n            source: require(\"../../assets/img/add-contact-inactive.png\"),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            }\n          }));\n        }\n      }\n    }\n  },\n  Products: {\n    screen: Create_product,\n    navigationOptions: {\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var focused = _ref2.focused,\n            tintColor = _ref2.tintColor;\n        var iconFocused = focused ? 'add-product-active.png' : 'add-product-inactive.png';\n\n        if (focused) {\n          return React.createElement(View, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            }\n          }, React.createElement(Image, {\n            style: {\n              width: 30,\n              height: 30\n            },\n            source: require(\"../../assets/img/add-product-active.png\"),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            }\n          }));\n        } else {\n          return React.createElement(View, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            }\n          }, React.createElement(Image, {\n            style: {\n              width: 30,\n              height: 30\n            },\n            source: require(\"../../assets/img/add-product-inactive.png\"),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            }\n          }));\n        }\n      }\n    }\n  }\n}, {\n  initialRouteName: \"Contacts\"\n}, {\n  tabBarOptions: {\n    activeTintColor: 'red',\n    inactiveTintColor: 'pink',\n    activeBackgroundColor: \"red\",\n    labelStyle: {\n      fontSize: 20\n    },\n    style: {\n      paddingVertical: 0,\n      height: 100,\n      borderTopWidth: 1,\n      borderTopColor: 'red'\n    }\n  }\n});\nvar Note_tab = createAppContainer(add_note);\n\nvar Add_contact_products = function (_Component) {\n  _inherits(Add_contact_products, _Component);\n\n  function Add_contact_products() {\n    _classCallCheck(this, Add_contact_products);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Add_contact_products).apply(this, arguments));\n  }\n\n  _createClass(Add_contact_products, [{\n    key: \"setModalVisible\",\n    value: function setModalVisible(visible) {\n      alert(visible);\n      this.props.updateState(visible);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        }\n      }, React.createElement(Modal, {\n        animationType: \"slide\",\n        transparent: false,\n        visible: this.props.modalvisibility,\n        onRequestClose: function onRequestClose() {\n          _this.setModalVisible(false);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          zIndex: 10,\n          position: \"absolute\",\n          right: 10,\n          top: 10\n        },\n        onPress: function onPress() {\n          _this.setModalVisible(false);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        }\n      }, React.createElement(Image, {\n        source: require(\"../../assets/img/close.png\"),\n        style: {\n          width: 40,\n          height: 40,\n          marginLeft: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        }\n      })), React.createElement(Note_tab, {\n        event_id: this.props.selected_event_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        }\n      })));\n    }\n  }]);\n\n  return Add_contact_products;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#2c3e50'\n  }\n});\nexport default Add_contact_products;","map":{"version":3,"sources":["D:/Notes_app/Pages/add_notes/Add_contact_products.js"],"names":["React","Component","createAppContainer","createBottomTabNavigator","Create_product","Create_contacts","add_note","Contacts","screen","navigationOptions","tabBarIcon","focused","tintColor","iconFocused","width","height","require","Products","initialRouteName","tabBarOptions","activeTintColor","inactiveTintColor","activeBackgroundColor","labelStyle","fontSize","style","paddingVertical","borderTopWidth","borderTopColor","Note_tab","Add_contact_products","visible","alert","props","updateState","modalvisibility","setModalVisible","zIndex","position","right","top","marginLeft","selected_event_id","styles","StyleSheet","create","container","flex","justifyContent","alignItems","backgroundColor"],"mappings":"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","sourcesContent":["//import liraries\r\nimport React, { Component } from 'react';\r\nimport { Modal, Text, View, StyleSheet, Image,TouchableOpacity } from 'react-native';\r\nimport { createAppContainer } from 'react-navigation';\r\nimport { createBottomTabNavigator } from 'react-navigation-tabs';\r\nimport Create_product from './notes_components/Create_product';\r\nimport Create_contacts from './notes_components/Create_contacts';\r\n\r\n\r\nconst add_note = createBottomTabNavigator(\r\n\t{\r\n\t\tContacts: {\r\n\t\t\tscreen: Create_contacts,\r\n\t\t\tnavigationOptions: {\r\n\t\t\t\ttabBarIcon: ({ focused, tintColor }) => {\r\n\t\t\t\t\tconst iconFocused = focused ? 'add-contact-active.png' : 'add-contact-inactive.png';\r\n\r\n\t\t\t\t\tif (focused) {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<View>\r\n\t\t\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: 30, height: 30 }}\r\n\t\t\t\t\t\t\t\t\tsource={require('../../assets/img/add-contact-active.png')}\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<View>\r\n\t\t\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: 30, height: 30 }}\r\n\t\t\t\t\t\t\t\t\tsource={require('../../assets/img/add-contact-inactive.png')}\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tProducts: {\r\n\t\t\tscreen: Create_product,\r\n\t\t\tnavigationOptions: {\r\n\t\t\t\ttabBarIcon: ({ focused, tintColor }) => {\r\n\t\t\t\t\tconst iconFocused = focused ? 'add-product-active.png' : 'add-product-inactive.png';\r\n\t\t\t\t\tif (focused) {\r\n\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<View>\r\n\t\t\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: 30, height: 30 }}\r\n\t\t\t\t\t\t\t\t\tsource={require('../../assets/img/add-product-active.png')}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<View>\r\n\t\t\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: 30, height: 30 }}\r\n\t\t\t\t\t\t\t\t\tsource={require('../../assets/img/add-product-inactive.png')}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\r\n\t},\r\n\t{\r\n\t\tinitialRouteName: \"Contacts\",\r\n\r\n\t},\r\n\r\n\t{\r\n\t\ttabBarOptions: {\r\n\t\t\tactiveTintColor: 'red',\r\n\t\t\tinactiveTintColor: 'pink',\r\n\t\t\tactiveBackgroundColor: \"red\",\r\n\t\t\tlabelStyle: {\r\n\t\t\t\tfontSize: 20,\r\n\t\t\t},\r\n\r\n\t\t\tstyle: {\r\n\t\t\t\tpaddingVertical: 0,\r\n\t\t\t\theight: 100,\r\n\t\t\t\tborderTopWidth: 1,\r\n\t\t\t\tborderTopColor: 'red'\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n);\r\n\r\nconst Note_tab = createAppContainer(add_note);\r\n\r\n// create a component\r\nclass Add_contact_products extends Component {\r\n\r\n\tsetModalVisible(visible) {\r\n\t\talert(visible);\r\n\t  this.props.updateState(visible); \r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\treturn (\r\n\t\t\t<View>\r\n\t\t\t\t<Modal\r\n\t\t\t\t\tanimationType=\"slide\"\r\n\t\t\t\t\ttransparent={false}\r\n\t\t\t\t\tvisible={this.props.modalvisibility}\r\n\t\t\t\t\tonRequestClose={() => {\r\n\t\t\t\t\t\tthis.setModalVisible(false);\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t<TouchableOpacity style={{ zIndex: 10,position: \"absolute\", right: 10,top:10 }} onPress={() => { this.setModalVisible(false) }}>\r\n\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\tsource={require('../../assets/img/close.png')}\r\n\t\t\t\t\t\t\tstyle={{ width: 40, height: 40, marginLeft: 8 }}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t</TouchableOpacity>\r\n\t\t\t\t\t<Note_tab  event_id={this.props.selected_event_id} />\r\n\r\n\t\t\t\t</Modal>\r\n\t\t\t</View>\r\n\r\n\t\t);\r\n\t}\r\n}\r\n\r\n// define your styles\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tflex: 1,\r\n\t\tjustifyContent: 'center',\r\n\t\talignItems: 'center',\r\n\t\tbackgroundColor: '#2c3e50',\r\n\t},\r\n});\r\n\r\n//make this component available to the app\r\nexport default Add_contact_products;\r\n"]},"metadata":{},"sourceType":"module"}