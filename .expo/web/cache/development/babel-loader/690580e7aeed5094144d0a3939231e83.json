{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"D:\\\\Notes_app\\\\Pages\\\\add_notes\\\\notes_components\\\\Create_contacts.js\";\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport * as ImagePicker from 'expo-image-picker';\nimport Last_supplier from \"./Last_supplier.js\";\nimport Images_upload_view from \"./Images_upload_view.js\";\nimport { SafeAreaView } from 'react-navigation';\nimport * as Permissions from 'expo-permissions';\nimport * as FileSystem from 'expo-file-system';\nimport { SQLite } from 'expo-sqlite';\nimport { insert_contact } from \"../../models/all_models.js\";\nvar db = SQLite.openDatabase('db.db');\n\nvar Create_contacts = function (_Component) {\n  _inherits(Create_contacts, _Component);\n\n  function Create_contacts(props) {\n    var _this;\n\n    _classCallCheck(this, Create_contacts);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Create_contacts).call(this, props));\n\n    _this.getData = function _callee() {\n      var value;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('selected_event_id'));\n\n            case 3:\n              value = _context.sent;\n\n              _this.setState({\n                event_id: value\n              });\n\n              if (value !== null) {}\n\n              _context.next = 10;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 8]]);\n    };\n\n    _this.con_pro_data = function () {};\n\n    _this.choose_images = function _callee2() {\n      var _await$Permissions$as, status, result, img_array;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA_ROLL));\n\n            case 2:\n              _await$Permissions$as = _context2.sent;\n              status = _await$Permissions$as.status;\n\n              if (status == 'granted') {} else {}\n\n              _context2.next = 7;\n              return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n                allowsEditing: false,\n                aspect: [4, 3],\n                base64: true,\n                quality: 0.5\n              }));\n\n            case 7:\n              result = _context2.sent;\n              img_array = [];\n\n              if (result.base64) {\n                img_array.push(result.base64);\n              } else {}\n\n              _this.setState({\n                images: [].concat(_toConsumableArray(_this.state.images), img_array)\n              });\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    };\n\n    _this.click_images = function _callee3() {\n      var _await$Permissions$as2, status, result, img_array;\n\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 2:\n              _await$Permissions$as2 = _context3.sent;\n              status = _await$Permissions$as2.status;\n\n              if (status !== 'granted') {}\n\n              _context3.next = 7;\n              return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync({\n                mediaTypes: ImagePicker.MediaTypeOptions.All,\n                allowsEditing: false,\n                aspect: [4, 3],\n                base64: true,\n                quality: 0.5\n              }));\n\n            case 7:\n              result = _context3.sent;\n              img_array = [];\n\n              if (result.base64) {\n                img_array.push(result.base64);\n              } else {}\n\n              _this.setState({\n                images: [].concat(_toConsumableArray(_this.state.images), img_array)\n              });\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      });\n    };\n\n    _this.update_supp_id = function (val1) {\n      _this.setState({\n        supplier_id: val1.supplier_id,\n        supplier_name: val1.suppliername,\n        show_s_create_btn: false\n      });\n    };\n\n    _this.close_modal = function () {\n      _this.props.handle_visibility(false, \"contacts\");\n    };\n\n    _this.fetchContactdata = function () {\n      _this.setState({\n        response: \" Note: Please wait we saving your data .... \"\n      });\n\n      var eventid = _this.state.event_id;\n      var supplier_name = _this.state.supplier_name;\n      var supplier_id = _this.state.supplier_id;\n      var contact_name = _this.state.contact_name;\n      var position = _this.state.position;\n      var phone = _this.state.phone;\n      var email = _this.state.email;\n      var notes = _this.state.notes;\n      var images = _this.state.images;\n\n      if (supplier_name != '') {\n        if (contact_name != '') {\n          if (images.length > 0) {\n            insert_contact(eventid, supplier_name, supplier_id, contact_name, position, phone, email, notes, images).then(function (response) {\n              var supp_data = JSON.parse(response);\n\n              if (supp_data) {}\n\n              _this.close_modal();\n            });\n          } else {\n            alert('Please Choose images  ');\n\n            _this.setState({\n              response: \" Please choose images \"\n            });\n          }\n        } else {\n          alert('Please Fill Contact name ');\n\n          _this.setState({\n            response: \" Please Fill Contact name \"\n          });\n        }\n      } else {\n        alert('Please Fill Supplier name ');\n\n        _this.setState({\n          response: \"Please Fill Supplier name \"\n        });\n      }\n    };\n\n    _this.state = {\n      user_id: 0,\n      user_name: '',\n      event_id: 0,\n      lastsupp: [],\n      supplier_name: '',\n      supplier_id: 0,\n      contact_name: '',\n      position: '',\n      phone: '',\n      email: '',\n      notes: '',\n      images: [],\n      response: ' ',\n      type: '',\n      isCapturing: false,\n      show_s_create_btn: false\n    };\n    return _this;\n  }\n\n  _createClass(Create_contacts, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.single_supp) {\n        this.setState({\n          supplier_id: this.props.supp_id,\n          supplier_name: this.props.suppliername\n        });\n      } else {}\n\n      this.getData();\n      this.con_pro_data();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(SafeAreaView, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        }\n      }, React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 22,\n          marginBottom: 10,\n          fontWeight: \"bold\",\n          color: \"#000000\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        }\n      }, \"CREATE CONTACT\"), this.props.single_supp ? React.createElement(Last_supplier, {\n        update_supp_id: this.update_supp_id.bind(this),\n        suppliername: this.props.suppliername,\n        supplier_id: this.props.supp_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        }\n      }) : React.createElement(FlatList, {\n        numColumns: 3,\n        data: this.state.lastsupp,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(Last_supplier, {\n            update_supp_id: _this2.update_supp_id.bind(_this2),\n            suppliername: item.supplier_name,\n            supplier_id: item.supplier_note_id,\n            data: item,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 274\n            }\n          });\n        },\n        ListFooterComponent: this.renderFooter,\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        }\n      })), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputfields,\n        textAlign: \"left\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            contact_name: text\n          });\n        },\n        placeholderTextColor: \"#818181\",\n        placeholder: \"Contact Name*\",\n        ref: function ref(component) {\n          return _this2._textInput1 = component;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        }\n      })), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputfields,\n        textAlign: \"left\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            position: text\n          });\n        },\n        placeholderTextColor: \"#818181\",\n        placeholder: \"Position\",\n        ref: function ref(component) {\n          return _this2._textInput2 = component;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        }\n      })), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputfields,\n        textAlign: \"left\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            phone: text\n          });\n        },\n        placeholderTextColor: \"#818181\",\n        placeholder: \"Phone\",\n        keyboardType: 'phone-pad',\n        ref: function ref(component) {\n          return _this2._textInput3 = component;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        }\n      })), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputfields,\n        textAlign: \"left\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            email: text\n          });\n        },\n        placeholderTextColor: \"#818181\",\n        placeholder: \"Email\",\n        keyboardType: 'email-address',\n        ref: function ref(component) {\n          return _this2._textInput4 = component;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        }\n      })), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        }\n      }, React.createElement(TextInput, {\n        multiline: true,\n        numberOfLines: 10,\n        style: styles.textarea,\n        textAlign: \"left\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            notes: text\n          });\n        },\n        placeholderTextColor: \"#818181\",\n        placeholder: \"Notes\",\n        ref: function ref(component) {\n          return _this2._textInput5 = component;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        }\n      })), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        }\n      }, React.createElement(Text, {\n        style: styles.response,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        }\n      }, this.state.response)), React.createElement(View, {\n        style: styles.buttons,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372\n        }\n      }, React.createElement(View, {\n        style: styles.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.choose_images();\n        },\n        style: {\n          width: 40\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        }\n      }, React.createElement(Image, {\n        source: require(\"../../../assets/img/gallery.png\"),\n        style: {\n          width: 40,\n          height: 40,\n          marginLeft: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        }\n      }))), React.createElement(View, {\n        style: styles.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.click_images();\n        },\n        style: {\n          width: 40\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        }\n      }, React.createElement(Image, {\n        source: require(\"../../../assets/img/camera.png\"),\n        style: {\n          width: 40,\n          height: 40,\n          marginLeft: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393\n        }\n      }))), React.createElement(View, {\n        style: styles.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.fetchContactdata();\n        },\n        style: {\n          textAlign: \"center\",\n          backgroundColor: \"#176fc1\",\n          width: 100,\n          paddingLeft: 20,\n          paddingRight: 20,\n          paddingTop: 10,\n          paddingBottom: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"#fff\",\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408\n        }\n      }, \"SAVE\")))), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        }\n      }, React.createElement(FlatList, {\n        numColumns: 3,\n        data: this.state.images,\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item;\n          return React.createElement(Images_upload_view, {\n            base64img: item,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 421\n            }\n          });\n        },\n        ListFooterComponent: this.renderFooter,\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415\n        }\n      })))));\n    }\n  }]);\n\n  return Create_contacts;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    margin: 20,\n    backgroundColor: '#fff'\n  },\n  buttons: {\n    alignItems: \"flex-end\",\n    textAlign: \"center\",\n    marginTop: 5,\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  },\n  add_supp: {\n    backgroundColor: '#176fc1',\n    paddingLeft: 10,\n    paddingTop: 10,\n    paddingBottom: 10,\n    minWidth: 130,\n    maxWidth: 130\n  },\n  button: {\n    width: '20%'\n  },\n  inputfields: {\n    alignSelf: 'stretch',\n    opacity: 0.4,\n    marginTop: 15,\n    fontSize: 18,\n    backgroundColor: \"#fff\",\n    maxHeight: 40,\n    minWidth: 300,\n    borderColor: \"gray\",\n    borderWidth: 1,\n    paddingLeft: 15\n  },\n  textarea: {\n    alignSelf: 'stretch',\n    opacity: 0.4,\n    marginTop: 15,\n    fontSize: 18,\n    backgroundColor: \"#fff\",\n    maxHeight: 150,\n    minWidth: 300,\n    borderColor: \"gray\",\n    borderWidth: 1,\n    paddingLeft: 15,\n    textAlignVertical: 'top'\n  },\n  response: {\n    fontSize: 20,\n    color: \"red\",\n    marginBottom: 0\n  },\n  heading: {\n    fontSize: 18,\n    fontWeight: \"normal\",\n    borderColor: \"#176fc1\",\n    borderWidth: 1,\n    backgroundColor: \"#176fc1\",\n    color: \"#fff\",\n    padding: 5,\n    marginBottom: 10\n  },\n  camera: {\n    flex: 1,\n    justifyContent: 'space-between'\n  }\n});\nexport default Create_contacts;","map":{"version":3,"sources":["D:/Notes_app/Pages/add_notes/notes_components/Create_contacts.js"],"names":["React","Component","ImagePicker","Last_supplier","Images_upload_view","SafeAreaView","Permissions","FileSystem","SQLite","insert_contact","db","openDatabase","Create_contacts","props","getData","AsyncStorage","getItem","value","setState","event_id","con_pro_data","choose_images","askAsync","CAMERA_ROLL","status","launchImageLibraryAsync","allowsEditing","aspect","base64","quality","result","img_array","push","images","state","click_images","CAMERA","launchCameraAsync","mediaTypes","MediaTypeOptions","All","update_supp_id","val1","supplier_id","supplier_name","suppliername","show_s_create_btn","close_modal","handle_visibility","fetchContactdata","response","eventid","contact_name","position","phone","email","notes","length","then","supp_data","JSON","parse","alert","user_id","user_name","lastsupp","type","isCapturing","single_supp","supp_id","styles","container","fontSize","marginBottom","fontWeight","color","bind","item","supplier_note_id","renderFooter","index","toString","inputfields","text","component","_textInput1","_textInput2","_textInput3","_textInput4","textarea","_textInput5","buttons","button","width","require","height","marginLeft","textAlign","backgroundColor","paddingLeft","paddingRight","paddingTop","paddingBottom","StyleSheet","create","flex","margin","alignItems","marginTop","flexDirection","flexWrap","add_supp","minWidth","maxWidth","alignSelf","opacity","maxHeight","borderColor","borderWidth","textAlignVertical","heading","padding","camera","justifyContent"],"mappings":"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","sourcesContent":["//import liraries\r\nimport React, { Component } from 'react';\r\nimport { View, FlatList, Text, TextInput, StyleSheet, TouchableOpacity, ScrollView, Alert, Image, AsyncStorage } from 'react-native';\r\n// import ImagePicker from 'react-native-image-crop-picker';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport Last_supplier from './Last_supplier.js';\r\nimport Images_upload_view from './Images_upload_view.js';\r\nimport { SafeAreaView } from 'react-navigation';\r\nimport * as Permissions from 'expo-permissions';\r\nimport * as FileSystem from 'expo-file-system';\r\n \r\n////////////////////SQLLITE CONNECTION\r\nimport { SQLite } from 'expo-sqlite';\r\nimport { insert_contact } from '../../models/all_models.js';\r\nconst db = SQLite.openDatabase('db.db');\r\n//////////////////////////////////////\r\n\r\nclass Create_contacts extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        //////////////////\r\n        this.state = {\r\n            user_id: 0,\r\n            user_name: '',\r\n            event_id: 0,\r\n            lastsupp: [],\r\n            supplier_name: '',\r\n            supplier_id: 0,\r\n            contact_name: '',\r\n            position: '',\r\n            phone: '',\r\n            email: '',\r\n            notes: '',\r\n            images: [],\r\n            response: ' ',\r\n            type: '',\r\n            isCapturing: false,\r\n            show_s_create_btn: false\r\n\r\n        }\r\n        ///////////////////\r\n        \r\n     \r\n\r\n    }\r\n\r\n    componentDidMount() {  \r\n\r\n        if(this.props.single_supp){\r\n            this.setState({\r\n                supplier_id: this.props.supp_id,\r\n                supplier_name: this.props.suppliername,\r\n            })\r\n        }else{\r\n\r\n        }\r\n\r\n \r\n \r\n\r\n\r\n\r\n\r\n\r\n        /////////////////////////////////////////////////////\r\n\r\n        this.getData();\r\n        this.con_pro_data();\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    /////////////////GET COOKIES DATA /////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    getData = async () => {\r\n        try {\r\n            const value = await AsyncStorage.getItem('selected_event_id');\r\n            ///////////////////////     \r\n            this.setState({\r\n                event_id: value,\r\n            });\r\n            //////////////////////////\r\n            if (value !== null) {\r\n                // value previously stored\r\n            }\r\n        } catch (e) {\r\n            // error reading value\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    con_pro_data = () => {\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    // Choose images from camera\r\n    ///////////////////////////\r\n    choose_images = async () => { \r\n        const { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL); \r\n        if (status == 'granted') {\r\n            // alert('Sorry, we need camera roll permissions to make this work!');\r\n            // alert(status)\r\n        } else {\r\n            // alert(status)\r\n        } \r\n        let result = await ImagePicker.launchImageLibraryAsync({\r\n            allowsEditing: false,\r\n            aspect: [4, 3],\r\n            base64: true,\r\n            quality:0.5\r\n        });\r\n\r\n        // console.log(result.base64);\r\n        var img_array = []; \r\n        if(result.base64){\r\n            img_array.push(result.base64);\r\n        }else{ \r\n        }  \r\n        this.setState({\r\n            images: [...this.state.images, ...img_array]\r\n        });   \r\n    }\r\n\r\n    // Click images from camera \r\n    ///////////////////////////\r\n    click_images = async () => { \r\n        const { status } = await Permissions.askAsync(Permissions.CAMERA);\r\n        if (status !== 'granted') {\r\n            // alert('Sorry, we need camera roll permissions to make this work!');\r\n\r\n        } \r\n        let result = await ImagePicker.launchCameraAsync({\r\n            mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n            allowsEditing: false,\r\n            aspect: [4, 3],\r\n            base64: true,\r\n            quality:0.5\r\n        });\r\n  \r\n        var img_array = []; \r\n        if(result.base64){\r\n            img_array.push(result.base64);\r\n        }else{ \r\n        }\r\n\r\n        this.setState({\r\n            images: [...this.state.images, ...img_array]\r\n        });\r\n \r\n    }\r\n\r\n\r\n    ////// Set supplier id for the contact\r\n    //////////////////////////////////////\r\n    update_supp_id = (val1) => {\r\n\r\n        this.setState({\r\n            supplier_id: val1.supplier_id,\r\n            supplier_name: val1.suppliername,\r\n            show_s_create_btn: false\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    ///////////////////////////////////////\r\n\r\n    //// Create new supplier////\r\n\r\n \r\n\r\n\r\n \r\n    close_modal = ()=>{   \r\n        this.props.handle_visibility(false,\"contacts\");\r\n    }  \r\n\r\n    ////// POST Form data//////////////////\r\n    //////////////////////////////////////\r\n    fetchContactdata = () => {\r\n\r\n        this.setState({\r\n            response: \" Note: Please wait we saving your data .... \",\r\n        });\r\n\r\n\r\n\r\n        let eventid = this.state.event_id;\r\n        let supplier_name = this.state.supplier_name;\r\n        let supplier_id = this.state.supplier_id;\r\n        let contact_name = this.state.contact_name;\r\n        let position = this.state.position;\r\n        let phone = this.state.phone;\r\n        let email = this.state.email;\r\n        let notes = this.state.notes;\r\n        let images = this.state.images;\r\n\r\n        if (supplier_name != '') {\r\n            if (contact_name != '') {\r\n                if (images.length > 0) {\r\n\r\n                    /*************** */\r\n                   \r\n                    insert_contact(eventid, supplier_name, supplier_id, contact_name,position,phone,email,notes,images).then((response) => {\r\n                        var supp_data = JSON.parse(response);\r\n                        if(supp_data){\r\n                            \r\n                        }\r\n                        this.close_modal();\r\n                        \r\n                    });\r\n\r\n\r\n                    /* INSERT CODE HERE */\r\n\r\n                } else {\r\n                    alert('Please Choose images  ');\r\n                    this.setState({\r\n                        response: \" Please choose images \"\r\n                    })\r\n                }\r\n            }else {\r\n                alert('Please Fill Contact name ');\r\n                this.setState({\r\n                    response: \" Please Fill Contact name \"\r\n    \r\n                })\r\n            }\r\n        } else {\r\n            alert('Please Fill Supplier name ');\r\n            this.setState({\r\n                response: \"Please Fill Supplier name \"\r\n\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <SafeAreaView style={styles.container}>\r\n                <ScrollView>\r\n                    <View >\r\n\r\n                        <View>\r\n                            <Text style={{ fontSize: 22, marginBottom: 10, fontWeight: \"bold\", color: \"#000000\" }}>CREATE CONTACT</Text>\r\n                       \r\n                          {this.props.single_supp?\r\n                           <Last_supplier update_supp_id={this.update_supp_id.bind(this)} suppliername={this.props.suppliername} supplier_id={this.props.supp_id}   />\r\n                            :<FlatList\r\n                            numColumns={3}\r\n                            data={this.state.lastsupp}\r\n                            //Item Separator View this.state.lastsuppliers\r\n                            renderItem={({ item }) => (\r\n\r\n                                <Last_supplier update_supp_id={this.update_supp_id.bind(this)} suppliername={item.supplier_name} supplier_id={item.supplier_note_id} data={item} />\r\n\r\n                            )}\r\n\r\n                            ListFooterComponent={this.renderFooter}\r\n                            keyExtractor={(item, index) => index.toString()}\r\n\r\n                        />}\r\n\r\n\r\n                            {/* <TextInput\r\n                                style={styles.inputfields}\r\n                                textAlign=\"left\"\r\n                                onChangeText={(text) =>\r\n                                    this.setState({\r\n                                        supplier_name: text,\r\n                                        show_s_create_btn: true\r\n                                    })\r\n                                }\r\n                                placeholderTextColor='#818181'\r\n                                placeholder=\"Supplier Name*\"\r\n                                value={this.state.supplier_name}\r\n                            /> */}\r\n                         \r\n                        </View>\r\n\r\n                        <View>\r\n                            <TextInput\r\n                                style={styles.inputfields}\r\n                                textAlign=\"left\"\r\n                                onChangeText={(text) => this.setState({ contact_name: text })}\r\n                                placeholderTextColor='#818181'\r\n                                placeholder=\"Contact Name*\"\r\n                                ref={component => this._textInput1 = component}\r\n                            />\r\n                        </View>\r\n                        <View>\r\n                            <TextInput\r\n                                style={styles.inputfields}\r\n                                textAlign=\"left\"\r\n                                onChangeText={(text) => this.setState({ position: text })}\r\n                                placeholderTextColor='#818181'\r\n                                placeholder=\"Position\"\r\n                                ref={component => this._textInput2 = component}\r\n\r\n                            />\r\n                        </View>\r\n                        <View>\r\n                            <TextInput\r\n                                style={styles.inputfields}\r\n                                textAlign=\"left\"\r\n                                onChangeText={(text) => this.setState({ phone: text })}\r\n                                placeholderTextColor='#818181'\r\n                                placeholder=\"Phone\"\r\n                                keyboardType={'phone-pad'}\r\n                                ref={component => this._textInput3 = component}\r\n                            />\r\n                        </View>\r\n                        <View>\r\n                            <TextInput\r\n                                style={styles.inputfields}\r\n                                textAlign=\"left\"\r\n                                onChangeText={(text) => this.setState({ email: text })}\r\n                                placeholderTextColor='#818181'\r\n                                placeholder=\"Email\"\r\n                                keyboardType={'email-address'}\r\n                                ref={component => this._textInput4 = component}\r\n                            />\r\n                        </View>\r\n\r\n                        <View>\r\n                            <TextInput\r\n                                multiline={true}\r\n                                numberOfLines={10}\r\n                                style={styles.textarea}\r\n                                textAlign=\"left\"\r\n                                onChangeText={(text) => this.setState({ notes: text })}\r\n                                placeholderTextColor='#818181'\r\n                                placeholder=\"Notes\"\r\n                                ref={component => this._textInput5 = component}\r\n                            />\r\n                        </View>\r\n                        {/* <Image \r\n                        style ={{width:25,height:25}}\r\n                        source={require('../assets/img/search.png')}\r\n                         /> */}\r\n\r\n\r\n                        <View>\r\n                            <Text style={styles.response}>{this.state.response}</Text>\r\n                        </View>\r\n                        {/* <View style={{alignItems:\"center\",alignContent:\"center\"}}>\r\n                                    <TouchableOpacity\r\n                                //  onPress={() => {this.submitForm()}}\r\n                                    style={{backgroundColor:\"#176fc1\",width:100,paddingLeft:20,paddingRight:20,paddingTop:10,paddingBottom:10}}>\r\n                                        <Text style={{color:\"#fff\"}}>Save</Text>\r\n                                    </TouchableOpacity>\r\n                                </View> */}\r\n                        <View style={styles.buttons}>\r\n\r\n                            <View style={styles.button}>\r\n                                <TouchableOpacity\r\n                                    onPress={() => { this.choose_images() }}\r\n                                    style={{ width: 40 }}>\r\n                                    <Image\r\n                                        source={require('../../../assets/img/gallery.png')}\r\n                                        style={{ width: 40, height: 40, marginLeft: 8 }}\r\n                                    />\r\n                                    {/* <Text style={{color:\"#000000\"}}> GALLERY</Text> */}\r\n                                </TouchableOpacity>\r\n                            </View>\r\n\r\n\r\n\r\n\r\n                            <View style={styles.button}>\r\n                                <TouchableOpacity\r\n                                    onPress={() => { this.click_images() }}\r\n                                    style={{ width: 40 }}>\r\n                                    <Image\r\n                                        source={require('../../../assets/img/camera.png')}\r\n                                        style={{ width: 40, height: 40, marginLeft: 8 }}\r\n                                    />\r\n                                    {/* <Text style={{color:\"#000000\"}}>CAMERA</Text> */}\r\n                                </TouchableOpacity>\r\n                            </View>\r\n\r\n\r\n\r\n\r\n                            <View style={styles.button}>\r\n                                <TouchableOpacity\r\n                                    onPress={() => { this.fetchContactdata() }}\r\n                                    style={{ textAlign: \"center\", backgroundColor: \"#176fc1\", width: 100, paddingLeft: 20, paddingRight: 20, paddingTop: 10, paddingBottom: 10 }}>\r\n                                    <Text style={{ color: \"#fff\", textAlign: \"center\" }}>SAVE</Text>\r\n                                </TouchableOpacity>\r\n                            </View>\r\n                        </View>\r\n\r\n\r\n                        <View>\r\n                            <FlatList\r\n                                numColumns={3}\r\n                                data={this.state.images}\r\n                                //data={this.state.images} \r\n                                //Item Separator View this.state.lastsuppliers\r\n                                renderItem={({ item }) => (\r\n                                    <Images_upload_view base64img={item} />\r\n                                )}\r\n                                ListFooterComponent={this.renderFooter}\r\n                                keyExtractor={(item, index) => index.toString()}\r\n\r\n                            />\r\n                        </View>\r\n\r\n\r\n\r\n\r\n\r\n                    </View>\r\n                </ScrollView>\r\n            </SafeAreaView>\r\n        );\r\n    }\r\n}\r\n\r\n// define your styles\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        margin: 20,\r\n        backgroundColor: '#fff',\r\n    },\r\n    buttons: {\r\n        alignItems: \"flex-end\",\r\n        textAlign: \"center\",\r\n        marginTop: 5,\r\n        flexDirection: 'row',\r\n        flexWrap: 'wrap',\r\n\r\n    },\r\n    add_supp: {\r\n        backgroundColor: '#176fc1',\r\n        paddingLeft: 10,\r\n        paddingTop: 10,\r\n        paddingBottom: 10,\r\n        minWidth: 130,\r\n        maxWidth: 130,\r\n\r\n    },\r\n    button: {\r\n        width: '20%'\r\n    },\r\n\r\n    inputfields: {\r\n        alignSelf: 'stretch',\r\n        opacity: 0.4,\r\n        marginTop: 15,\r\n        fontSize: 18,\r\n        backgroundColor: \"#fff\",\r\n        maxHeight: 40,\r\n        minWidth: 300,\r\n        borderColor: \"gray\",\r\n        borderWidth: 1,\r\n        paddingLeft: 15\r\n    },\r\n    textarea: {\r\n        alignSelf: 'stretch',\r\n        opacity: 0.4,\r\n        marginTop: 15,\r\n        fontSize: 18,\r\n        backgroundColor: \"#fff\",\r\n        maxHeight: 150,\r\n        minWidth: 300,\r\n        borderColor: \"gray\",\r\n        borderWidth: 1,\r\n        paddingLeft: 15,\r\n        textAlignVertical: 'top',\r\n    },\r\n    response: {\r\n        fontSize: 20,\r\n        color: \"red\",\r\n        marginBottom: 0\r\n    },\r\n    heading: {\r\n        fontSize: 18,\r\n        fontWeight: \"normal\",\r\n        borderColor: \"#176fc1\",\r\n        borderWidth: 1,\r\n        backgroundColor: \"#176fc1\",\r\n        color: \"#fff\",\r\n        padding: 5,\r\n        marginBottom: 10\r\n    },\r\n    camera: {\r\n        flex: 1,\r\n        justifyContent: 'space-between',\r\n    }\r\n});\r\n\r\n\r\n//make this component available to the app\r\nexport default Create_contacts;\r\n"]},"metadata":{},"sourceType":"module"}