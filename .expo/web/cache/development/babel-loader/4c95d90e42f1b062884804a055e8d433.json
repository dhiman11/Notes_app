{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { api_name, cookies } from \"../Settings\";\nimport * as Permissions from 'expo-permissions';\nimport * as ImagePicker from 'expo-image-picker';\nexport function load_events() {\n  var limit,\n      u_id,\n      user_id,\n      _args = arguments;\n  return _regeneratorRuntime.async(function load_events$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          limit = _args.length > 0 && _args[0] !== undefined ? _args[0] : 0;\n          u_id = _args.length > 1 ? _args[1] : undefined;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(cookies.then(function (obj) {\n            var data = JSON.parse(obj);\n            return data.user_id;\n          }));\n\n        case 4:\n          user_id = _context.sent;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(fetch(api_name + 'Events/index', {\n            method: 'POST',\n            headers: {\n              Accept: 'application/json',\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              user_id: user_id,\n              limit: limit\n            })\n          }).then(function (response) {\n            return response.json();\n          }).then(function (responseJson) {\n            var fetch_data = {\n              Events_list: responseJson.interval_list_select,\n              Last_events_list: responseJson.interval_list,\n              event_list_all: responseJson.event_list,\n              headername: responseJson.header_name\n            };\n            result = JSON.stringify(fetch_data);\n            return result;\n          }).catch(function (error) {\n            console.error(error);\n          }));\n\n        case 7:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n}\nexport function tabs_data_load(limit, tab_name) {\n  var user_id;\n  return _regeneratorRuntime.async(function tabs_data_load$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          if (tab_name == 'supplier') {\n            funcation_name = 'load_suppliers_tab';\n          }\n\n          if (tab_name == 'products') {\n            funcation_name = 'load_products_tab';\n          }\n\n          if (tab_name == 'contacts') {\n            funcation_name = 'load_contacts_tab';\n          }\n\n          _context2.next = 5;\n          return _regeneratorRuntime.awrap(cookies.then(function (obj) {\n            var data = JSON.parse(obj);\n            return data.user_id;\n          }));\n\n        case 5:\n          user_id = _context2.sent;\n          _context2.next = 8;\n          return _regeneratorRuntime.awrap(fetch(api_name + 'Events/' + funcation_name, {\n            method: 'POST',\n            headers: {\n              Accept: 'application/json',\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              user_id: user_id,\n              limit: limit\n            })\n          }).then(function (response) {\n            return response.json();\n          }).then(function (responseJson) {\n            result = JSON.stringify(responseJson);\n            return result;\n          }).catch(function (error) {\n            console.error(error);\n          }));\n\n        case 8:\n          return _context2.abrupt(\"return\", _context2.sent);\n\n        case 9:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n}\nexport function load_suppliers(event_id) {\n  return fetch(api_name + 'Events/load_suppliers', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      event_id: event_id\n    })\n  }).then(function (response) {\n    return response.json();\n  }).then(function (responseJson) {\n    result = JSON.stringify(responseJson);\n    return result;\n  }).catch(function (error) {\n    console.error(error);\n  });\n}\nexport function load_products() {\n  var supp_id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var product_id = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  return fetch(api_name + 'Events/load_product', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      supp_id: supp_id,\n      limit: limit,\n      product_id: product_id\n    })\n  }).then(function (response) {\n    return response.json();\n  }).then(function (responseJson) {\n    result = JSON.stringify(responseJson);\n    return result;\n  }).catch(function (error) {\n    console.error(error);\n  });\n}\nexport function load_contacts(supp_id, limit) {\n  var contact_id = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  return fetch(api_name + 'Events/load_contacts', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      supp_id: supp_id,\n      limit: limit,\n      contact_id: contact_id\n    })\n  }).then(function (response) {\n    return response.json();\n  }).then(function (responseJson) {\n    result = JSON.stringify(responseJson);\n    return result;\n  }).catch(function (error) {\n    console.error(error);\n  });\n}\nexport function insert_supplier(event_id, supplier_name, notes, images) {\n  return fetch(api_name + 'Events/add_supplier', {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      event_id: event_id,\n      supplier_name: supplier_name,\n      notes: notes,\n      images: images\n    })\n  }).then(function (response) {\n    return response.json();\n  }).then(function (responseJson) {\n    result = JSON.stringify(responseJson);\n    return result;\n  }).catch(function (error) {\n    console.error(error);\n  });\n}\nexport function delete_images(image_id) {\n  return fetch(api_name + 'remove_images/' + image_id, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    }\n  }).then(function (response) {\n    return response.json();\n  }).then(function (responseJson) {\n    result = JSON.stringify(responseJson);\n    return result;\n  }).catch(function (error) {\n    console.error(error);\n  });\n}\nexport function insert_contact(eventid, supplier_name, supplier_id, contact_name, position, phone, email, notes, images) {\n  return fetch(api_name + 'Events/add_contacts', {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      event_id: eventid,\n      supplier_name: supplier_name,\n      supplier_id: supplier_id,\n      contact_name: contact_name,\n      position: position,\n      phone: phone,\n      email: email,\n      notes: notes,\n      images: images\n    })\n  }).then(function (response) {\n    return response.json();\n  }).then(function (responseJson) {\n    result = JSON.stringify(responseJson);\n    return result;\n  }).catch(function (error) {\n    console.error(error);\n  });\n}\nexport function insert_product(eventid, supplier_name, supplier_id, product_name, supp_ref, fobusd, moq, notes, images) {\n  return fetch(api_name + 'Events/add_products', {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      event_id: eventid,\n      supplier_name: supplier_name,\n      supplier_id: supplier_id,\n      product_name: product_name,\n      supp_ref: supp_ref,\n      fobusd: fobusd,\n      moq: moq,\n      notes: notes,\n      images: images\n    })\n  }).then(function (response) {\n    return response.json();\n  }).then(function (responseJson) {\n    result = JSON.stringify(responseJson);\n    return result;\n  }).catch(function (error) {\n    console.error(error);\n  });\n}\nexport function save_user_image(image, user_id) {\n  return fetch(api_name + 'Events/add_user_image', {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      user_id: user_id,\n      image: image\n    })\n  }).then(function (response) {\n    return response.json();\n  }).then(function (responseJson) {\n    result = JSON.stringify(responseJson);\n    return result;\n  }).catch(function (error) {\n    console.error(error);\n  });\n}\nexport function save_user_detailss(name, email, wechat, phone, new_password, user_id) {\n  return fetch(api_name + 'Events/update_user_data', {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      full_name: name,\n      email: email,\n      wechat: wechat,\n      phone: phone,\n      new_password: new_password,\n      user_id: user_id\n    })\n  }).then(function (response) {\n    return response.json();\n  }).then(function (responseJson) {\n    result = JSON.stringify(responseJson);\n    return result;\n  }).catch(function (error) {\n    console.error(error);\n  });\n}\nexport function get_user_data(user_id) {\n  return fetch(api_name + 'Events/user_data', {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      user_id: user_id\n    })\n  }).then(function (response) {\n    return response.json();\n  }).then(function (responseJson) {\n    result = JSON.stringify(responseJson);\n    return result;\n  }).catch(function (error) {\n    console.error(error);\n  });\n}\nexport function get_cookie_data(cookie, parameter) {}\nexport function click_images() {\n  var _await$Permissions$as, status, _result, img_array;\n\n  return _regeneratorRuntime.async(function click_images$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n        case 2:\n          _await$Permissions$as = _context3.sent;\n          status = _await$Permissions$as.status;\n\n          if (!(status !== 'granted')) {\n            _context3.next = 8;\n            break;\n          }\n\n          alert('Sorry, we need camera roll permissions to make this work!');\n          _context3.next = 14;\n          break;\n\n        case 8:\n          _context3.next = 10;\n          return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.All,\n            allowsEditing: false,\n            base64: true,\n            quality: 0.5\n          }));\n\n        case 10:\n          _result = _context3.sent;\n          img_array = [];\n\n          if (_result.base64) {\n            img_array.push(_result.base64);\n          } else {}\n\n          return _context3.abrupt(\"return\", img_array);\n\n        case 14:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  });\n}\nexport function insert_images(id, table, images) {\n  var user_id;\n  return _regeneratorRuntime.async(function insert_images$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return _regeneratorRuntime.awrap(cookies.then(function (obj) {\n            var data = JSON.parse(obj);\n            return data.user_id;\n          }));\n\n        case 2:\n          user_id = _context4.sent;\n          _context4.next = 5;\n          return _regeneratorRuntime.awrap(fetch(api_name + 'insert_image', {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              product_id: id,\n              table: table,\n              user_id: user_id,\n              images: images\n            })\n          }).then(function (response) {\n            return response.json();\n          }).then(function (responseJson) {\n            result = JSON.stringify(responseJson);\n            return result;\n          }).catch(function (error) {\n            console.error(error);\n          }));\n\n        case 5:\n          return _context4.abrupt(\"return\", _context4.sent);\n\n        case 6:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  });\n}\nexport function update_product(product_id, product_name, fob, moq, notes) {\n  return _regeneratorRuntime.async(function update_product$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          return _context5.abrupt(\"return\", fetch(api_name + 'Events/prooduct_update', {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              product_id: product_id,\n              product_name: product_name,\n              fob_price: fob,\n              moq: moq,\n              note: notes\n            })\n          }).then(function (response) {\n            return response.json();\n          }).then(function (responseJson) {\n            result = JSON.stringify(responseJson);\n            return result;\n          }).catch(function (error) {\n            console.error(error);\n          }));\n\n        case 1:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  });\n}","map":{"version":3,"sources":["D:/Notes_app/Pages/models/all_models.js"],"names":["api_name","cookies","Permissions","ImagePicker","load_events","limit","u_id","then","obj","data","JSON","parse","user_id","fetch","method","headers","Accept","body","stringify","response","json","responseJson","fetch_data","Events_list","interval_list_select","Last_events_list","interval_list","event_list_all","event_list","headername","header_name","result","catch","error","console","tabs_data_load","tab_name","funcation_name","load_suppliers","event_id","load_products","supp_id","product_id","load_contacts","contact_id","insert_supplier","supplier_name","notes","images","delete_images","image_id","insert_contact","eventid","supplier_id","contact_name","position","phone","email","insert_product","product_name","supp_ref","fobusd","moq","save_user_image","image","save_user_detailss","name","wechat","new_password","full_name","get_user_data","get_cookie_data","cookie","parameter","click_images","askAsync","CAMERA","status","alert","launchCameraAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","base64","quality","img_array","push","insert_images","id","table","update_product","fob","fob_price","note"],"mappings":"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","sourcesContent":["import { api_name, cookies } from \"../Settings\";\r\nimport * as Permissions from 'expo-permissions';\r\nimport * as ImagePicker from 'expo-image-picker';\r\n \r\n\r\n \r\n  \r\n\r\n    //This is Homepage Events view\r\n    export async function load_events(limit=0,u_id){   \r\n    \r\n    var user_id = await cookies.then((obj)  => {\r\n        var data =     JSON.parse(obj);   \r\n        return  data.user_id; \r\n    });\r\n    \r\n        \r\n    return   await fetch(api_name+'Events/index', {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                user_id: user_id,\r\n                limit:limit\r\n            }),\r\n        }).then((response) => response.json())\r\n            .then((responseJson) => { \r\n      \r\n                let fetch_data =\r\n                {\r\n                    Events_list: responseJson.interval_list_select,\r\n                    Last_events_list: responseJson.interval_list,\r\n                    event_list_all: responseJson.event_list,\r\n                    headername: responseJson.header_name\r\n                };\r\n               \r\n                result = JSON.stringify(fetch_data);\r\n                return result;\r\n\r\n            })\r\n            .catch((error) => {\r\n                 console.error(error);\r\n            });  \r\n    }\r\n\r\n\r\n    export async function tabs_data_load(limit,tab_name){\r\n\r\n        if(tab_name == 'supplier'){\r\n            funcation_name = 'load_suppliers_tab';\r\n        }\r\n\r\n        if(tab_name == 'products'){\r\n            funcation_name =  'load_products_tab';\r\n        }\r\n\r\n        if(tab_name == 'contacts'){\r\n            funcation_name =  'load_contacts_tab';\r\n        }\r\n\r\n    \r\n        var user_id = await cookies.then((obj)  => {\r\n            var data =     JSON.parse(obj);   \r\n            return  data.user_id; \r\n        });\r\n\r\n        return await   fetch(api_name+'Events/'+funcation_name, {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                user_id: user_id,\r\n                limit:limit\r\n            }),\r\n        }).then((response) => response.json())\r\n            .then((responseJson) => {  \r\n                result = JSON.stringify(responseJson);\r\n                return result;\r\n\r\n            })\r\n            .catch((error) => {\r\n                 console.error(error);\r\n            });  \r\n    }\r\n\r\n    ///Load explorer suppliers\r\n    export function load_suppliers(event_id){  \r\n  \r\n        return    fetch(api_name+'Events/load_suppliers', {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                event_id: event_id,\r\n            }),\r\n        }).then((response) => response.json())\r\n            .then((responseJson) => {  \r\n                result = JSON.stringify(responseJson);\r\n                return result;\r\n\r\n            })\r\n            .catch((error) => {\r\n                 console.error(error);\r\n            });  \r\n    }\r\n\r\n\r\n\r\n        ///Load explorer products\r\n        export function load_products(supp_id=0,limit=0,product_id=0){  \r\n        \r\n\r\n            return    fetch(api_name+'Events/load_product', {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    supp_id: supp_id   ,\r\n                    limit:limit,\r\n                    product_id:product_id           \r\n                }),\r\n            }).then((response) => response.json())\r\n                .then((responseJson) => {  \r\n                    result = JSON.stringify(responseJson);\r\n                    return result;\r\n    \r\n                })\r\n                .catch((error) => {\r\n                     console.error(error);\r\n                });  \r\n        }\r\n\r\n        /* LOAD ALL CONTACTS */\r\n        export function load_contacts(supp_id,limit,contact_id=0){    \r\n            return    fetch(api_name+'Events/load_contacts', {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    supp_id: supp_id   ,\r\n                    limit:limit,\r\n                    contact_id:contact_id       \r\n                }),\r\n            }).then((response) => response.json())\r\n                .then((responseJson) => {  \r\n                    result = JSON.stringify(responseJson);\r\n                    return result;\r\n    \r\n                })\r\n                .catch((error) => {\r\n                     console.error(error);\r\n                });  \r\n        }\r\n\r\n        /* INSERT SUPPLIERS  */\r\n\r\n        export function insert_supplier(event_id,supplier_name,notes,images){    \r\n            return     fetch(api_name+'Events/add_supplier', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    event_id: event_id   ,\r\n                    supplier_name:supplier_name,\r\n                    notes:notes,\r\n                    images:images\r\n                }),\r\n                }).then((response) => response.json())\r\n                .then((responseJson) => { \r\n                    // console.log(responseJson);\r\n                    result = JSON.stringify(responseJson);\r\n                    return result;  \r\n                  \r\n                })\r\n                .catch((error) => {\r\n                    console.error(error);\r\n                });\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        export function delete_images(image_id){    \r\n            return     fetch(api_name+'remove_images/'+image_id, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                }, \r\n                }).then((response) => response.json())\r\n                .then((responseJson) => { \r\n                    // console.log(responseJson);\r\n                    result = JSON.stringify(responseJson);\r\n                    return result;  \r\n                  \r\n                })\r\n                .catch((error) => {\r\n                    console.error(error);\r\n                });\r\n        }\r\n\r\n\r\n\r\n        export function insert_contact(eventid, supplier_name, supplier_id, contact_name,position,phone,email,notes,images){    \r\n            return     fetch(api_name+'Events/add_contacts', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    event_id: eventid   ,\r\n                    supplier_name:supplier_name,\r\n                    supplier_id:supplier_id,\r\n                    contact_name:contact_name,\r\n                    position:position,\r\n                    phone:phone,\r\n                    email:email,\r\n                    notes:notes,\r\n                    images:images\r\n                }),\r\n                }).then((response) => response.json())\r\n                .then((responseJson) => { \r\n                    // console.log(responseJson);\r\n                    result = JSON.stringify(responseJson);\r\n                    return result;  \r\n                  \r\n                })\r\n                .catch((error) => {\r\n                    console.error(error);\r\n                });\r\n        }\r\n\r\n\r\n        export function insert_product(eventid, supplier_name, supplier_id, product_name,supp_ref,fobusd,moq,notes,images){    \r\n            return     fetch(api_name+'Events/add_products', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    event_id: eventid   ,\r\n                    supplier_name:supplier_name,\r\n                    supplier_id:supplier_id,\r\n                    product_name:product_name,\r\n                    supp_ref:supp_ref,\r\n                    fobusd:fobusd,\r\n                    moq:moq,\r\n                    notes:notes,\r\n                    images:images\r\n                }),\r\n                }).then((response) => response.json())\r\n                .then((responseJson) => { \r\n                    // console.log(responseJson);\r\n                    result = JSON.stringify(responseJson);\r\n                    return result;  \r\n                  \r\n                })\r\n                .catch((error) => {\r\n                    console.error(error);\r\n                });\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        export function save_user_image(image,user_id){    \r\n            return     fetch(api_name+'Events/add_user_image', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ \r\n                    user_id:user_id,\r\n                    image:image\r\n                }),\r\n                }).then((response) => response.json())\r\n                .then((responseJson) => {  \r\n                    result = JSON.stringify(responseJson);\r\n                    return result;  \r\n                  \r\n                })\r\n                .catch((error) => {\r\n                    console.error(error);\r\n                });\r\n        }\r\n\r\n\r\n\r\n        export function save_user_detailss(name,email,wechat,phone,new_password,user_id){    \r\n           \r\n            return fetch(api_name+'Events/update_user_data', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ \r\n                   full_name:name,\r\n                   email:email,\r\n                   wechat:wechat,\r\n                   phone:phone,\r\n                   new_password:new_password,\r\n                   user_id:user_id\r\n                }),\r\n                }).then((response) => response.json())\r\n                .then((responseJson) => {  \r\n                    result = JSON.stringify(responseJson); \r\n                    return result;  \r\n                  \r\n                })\r\n                .catch((error) => {\r\n                    console.error(error);\r\n                });\r\n        }\r\n\r\n\r\n\r\n\r\n        export function get_user_data(user_id){    \r\n            return fetch(api_name+'Events/user_data', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ \r\n                    user_id:user_id, \r\n                }),\r\n                }).then((response) => response.json())\r\n                .then((responseJson) => {  \r\n                    result = JSON.stringify(responseJson);\r\n                    return result;  \r\n                  \r\n                })\r\n                .catch((error) => {\r\n                    console.error(error);\r\n                });\r\n        }\r\n\r\n\r\n        export function get_cookie_data(cookie,parameter){ \r\n\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        export async function click_images() { \r\n            \r\n            const { status } = await Permissions.askAsync(Permissions.CAMERA);\r\n            if (status !== 'granted') {\r\n                alert('Sorry, we need camera roll permissions to make this work!');\r\n    \r\n            } else{\r\n               \r\n                let result = await ImagePicker.launchCameraAsync({\r\n                    mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n                    allowsEditing: false, \r\n                    base64: true,\r\n                    quality:0.5,\r\n                    \r\n                });\r\n             \r\n                var img_array = []; \r\n             \r\n                if(result.base64){\r\n                    img_array.push(result.base64);\r\n                }else{ \r\n                }\r\n            \r\n                return img_array;\r\n            }\r\n        \r\n        }\r\n\r\n \r\n\r\n        export async function insert_images(id,table,images) { \r\n\r\n                var user_id = await cookies.then((obj)  => {\r\n                    var data =     JSON.parse(obj);   \r\n                    return  data.user_id; \r\n                });\r\n\r\n            return await fetch(api_name+'insert_image', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ \r\n                    product_id:id,\r\n                    table:table,\r\n                    user_id:user_id,\r\n                    images:images\r\n                }),\r\n                }).then((response) => response.json())\r\n                .then((responseJson) => {     \r\n                    result = JSON.stringify(responseJson);\r\n                    return result;  \r\n                  \r\n                })\r\n                .catch((error) => {\r\n                    console.error(error);\r\n                });\r\n        }\r\n\r\n        export async function update_product(product_id,product_name,fob,moq,notes) { \r\n            return fetch(api_name+'Events/prooduct_update', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ \r\n                    product_id:product_id, \r\n                    product_name:product_name, \r\n                    fob_price:fob, \r\n                    moq:moq,\r\n                    note:notes\r\n                }),\r\n                }).then((response) => response.json())\r\n                .then((responseJson) => {  \r\n                    result = JSON.stringify(responseJson);\r\n                    return result;  \r\n                  \r\n                })\r\n                .catch((error) => {\r\n                    console.error(error);\r\n                });\r\n\r\n        }\r\n\r\n        /* ***************** */\r\n\r\n\r\n\r\n\r\n "]},"metadata":{},"sourceType":"module"}