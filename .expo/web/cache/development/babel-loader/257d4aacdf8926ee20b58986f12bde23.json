{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"D:\\\\Notes_app\\\\Pages\\\\add_notes\\\\events_components\\\\My_events.js\";\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\n\nvar My_events = function (_Component) {\n  _inherits(My_events, _Component);\n\n  function My_events() {\n    _classCallCheck(this, My_events);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(My_events).apply(this, arguments));\n  }\n\n  _createClass(My_events, [{\n    key: \"addContactProduct\",\n    value: function addContactProduct(event_id) {\n      this.props.updateState(event_id);\n    }\n  }, {\n    key: \"load_events_suppliers\",\n    value: function load_events_suppliers(event_id, eventname) {\n      var event_values = {\n        \"event_id\": event_id,\n        \"event_name\": eventname\n      };\n      this.props.load_supplier_page(event_values);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this.load_events_suppliers(_this.props.eventid, _this.props.eventname);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        }\n      }, React.createElement(Image, {\n        style: {\n          width: 80,\n          height: 70,\n          marginRight: 15\n        },\n        source: require(\"../../../assets/img/eventicon.png\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        }\n      }), React.createElement(Text, {\n        numberOfLines: 1,\n        ellipsizeMode: \"tail\",\n        style: styles.eventname,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        }\n      }, this.props.eventname))), React.createElement(TouchableOpacity, {\n        style: {\n          position: \"absolute\",\n          top: 10\n        },\n        onPress: function onPress() {\n          _this.addContactProduct(_this.props.eventid);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        }\n      }, React.createElement(View, {\n        style: styles.inline_block,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        }\n      }, React.createElement(Image, {\n        style: {\n          width: 15,\n          height: 15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        }\n      }), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        }\n      }, \"Add\"))));\n    }\n  }]);\n\n  return My_events;\n}(Component);\n\nvar styles = StyleSheet.create({\n  eventname: {\n    fontWeight: \"bold\",\n    fontSize: 12,\n    marginBottom: 10,\n    flex: 1,\n    flexWrap: 'wrap',\n    width: 90\n  },\n  inline_block: {\n    flexDirection: 'row',\n    alignSelf: 'flex-start'\n  }\n});\nexport default My_events;","map":{"version":3,"sources":["D:/Notes_app/Pages/add_notes/events_components/My_events.js"],"names":["React","Component","TouchableOpacity","My_events","event_id","props","updateState","eventname","event_values","load_supplier_page","load_events_suppliers","eventid","width","height","marginRight","require","styles","position","top","addContactProduct","inline_block","StyleSheet","create","fontWeight","fontSize","marginBottom","flex","flexWrap","flexDirection","alignSelf"],"mappings":";;;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;AAEA,SAASC,gBAAT,QAAiC,8BAAjC;;IAIMC,S;;;;;;;;;;;sCAEgBC,Q,EAAS;AACzB,WAAKC,KAAL,CAAWC,WAAX,CAAuBF,QAAvB;AACD;;;0CAEqBA,Q,EAASG,S,EAAU;AACrC,UAAIC,YAAY,GAAI;AAAC,oBAAWJ,QAAZ;AAAqB,sBAAaG;AAAlC,OAApB;AAEA,WAAKF,KAAL,CAAWI,kBAAX,CAA8BD,YAA9B;AACH;;;6BAEQ;AAAA;;AACD,aACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,gBAAD;AAAmB,QAAA,OAAO,EAAG,mBAAM;AAAE,UAAA,KAAI,CAACE,qBAAL,CAA2B,KAAI,CAACL,KAAL,CAAWM,OAAtC,EAA8C,KAAI,CAACN,KAAL,CAAWE,SAAzD;AAAqE,SAA1G;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAG;AAACK,UAAAA,KAAK,EAAC,EAAP;AAAUC,UAAAA,MAAM,EAAC,EAAjB;AAAoBC,UAAAA,WAAW,EAAC;AAAhC,SAAf;AACA,QAAA,MAAM,EAAEC,OAAO,qCADf;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAKI,oBAAC,IAAD;AAAM,QAAA,aAAa,EAAE,CAArB;AAAwB,QAAA,aAAa,EAAE,MAAvC;AAA8C,QAAA,KAAK,EAAEC,MAAM,CAACT,SAA5D;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwE,KAAKF,KAAL,CAAWE,SAAnF,CALJ,CADJ,CADJ,EAYI,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAE;AAACU,UAAAA,QAAQ,EAAC,UAAV;AAAqBC,UAAAA,GAAG,EAAC;AAAzB,SAAzB;AAAwD,QAAA,OAAO,EAAG,mBAAM;AAAE,UAAA,KAAI,CAACC,iBAAL,CAAuB,KAAI,CAACd,KAAL,CAAWM,OAAlC;AAA4C,SAAtH;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEK,MAAM,CAACI,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAE;AAAER,UAAAA,KAAK,EAAE,EAAT;AAAaC,UAAAA,MAAM,EAAE;AAArB,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,EAGG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,eAHH,CADL,CAZJ,CADJ;AAwBP;;;;EArCmBZ,S;;AAyCxB,IAAMe,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC7Bf,EAAAA,SAAS,EAAC;AAENgB,IAAAA,UAAU,EAAC,MAFL;AAGNC,IAAAA,QAAQ,EAAC,EAHH;AAINC,IAAAA,YAAY,EAAC,EAJP;AAKNC,IAAAA,IAAI,EAAE,CALA;AAMNC,IAAAA,QAAQ,EAAE,MANJ;AAONf,IAAAA,KAAK,EAAC;AAPA,GADmB;AAU7BQ,EAAAA,YAAY,EAAE;AACVQ,IAAAA,aAAa,EAAE,KADL;AAEVC,IAAAA,SAAS,EAAE;AAFD;AAVe,CAAlB,CAAf;AAiBA,eAAe1B,SAAf","sourcesContent":[" \r\nimport React, { Component } from 'react';\r\nimport { View, Text, StyleSheet,Image } from 'react-native';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\n \r\n \r\n// create a component\r\nclass My_events extends Component {\r\n\r\n    addContactProduct(event_id){\r\n      this.props.updateState(event_id); \r\n    }\r\n    \r\n    load_events_suppliers(event_id,eventname){\r\n        var event_values =  {\"event_id\":event_id,\"event_name\":eventname} ;\r\n\r\n        this.props.load_supplier_page(event_values); \r\n    }\r\n\r\n    render() { \r\n            return ( \r\n                <View> \r\n                    <TouchableOpacity  onPress ={() => { this.load_events_suppliers(this.props.eventid,this.props.eventname) }} >\r\n                        <View>\r\n                            <Image style ={{width:80,height:70,marginRight:15}} \r\n                            source={require('../../../assets/img/eventicon.png')}\r\n                            />\r\n                           \r\n                            <Text numberOfLines={1} ellipsizeMode =\"tail\" style={styles.eventname}>{this.props.eventname}</Text>\r\n                            {/* <Text  >{this.props.arrayid}</Text> */}\r\n                        </View>   \r\n                    </TouchableOpacity>\r\n\r\n                    <TouchableOpacity style={{position:\"absolute\",top:10}}  onPress ={() => { this.addContactProduct(this.props.eventid) }} >\r\n                         <View style={styles.inline_block}>  \r\n                            <Image style={{ width: 15, height: 15 }}\r\n                            /> \r\n                            <Text>Add</Text>\r\n                        </View>\r\n                    </TouchableOpacity> \r\n                </View>  \r\n                    \r\n            );\r\n        \r\n    }\r\n}\r\n\r\n// define your styles\r\nconst styles = StyleSheet.create({\r\n    eventname:{\r\n        \r\n        fontWeight:\"bold\",\r\n        fontSize:12,\r\n        marginBottom:10,\r\n        flex: 1,\r\n        flexWrap: 'wrap',\r\n        width:90\r\n    },\r\n    inline_block: {\r\n        flexDirection: 'row',\r\n        alignSelf: 'flex-start'\r\n    }\r\n});\r\n\r\n//make this component available to the app\r\nexport default My_events;\r\n"]},"metadata":{},"sourceType":"module"}