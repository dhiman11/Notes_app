{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"D:\\\\Notes_app\\\\Pages\\\\add_notes\\\\notes_components\\\\Create_product.js\";\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport * as ImagePicker from 'expo-image-picker';\nimport Last_supplier from \"./Last_supplier.js\";\nimport Images_upload_view from \"./Images_upload_view.js\";\nimport { SafeAreaView } from 'react-navigation';\nimport * as Permissions from 'expo-permissions';\nimport * as FileSystem from 'expo-file-system';\nimport { SQLite } from 'expo-sqlite';\nimport { insert_product } from \"../../models/all_models.js\";\nvar db = SQLite.openDatabase('db.db');\n\nvar Create_product = function (_Component) {\n  _inherits(Create_product, _Component);\n\n  function Create_product(props) {\n    var _this;\n\n    _classCallCheck(this, Create_product);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Create_product).call(this, props));\n\n    _this.getData = function _callee() {\n      var value;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('selected_event_id'));\n\n            case 3:\n              value = _context.sent;\n\n              _this.setState({\n                event_id: value\n              });\n\n              if (value !== null) {}\n\n              _context.next = 10;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 8]]);\n    };\n\n    _this.con_pro_data = function () {};\n\n    _this.choose_images = function _callee2() {\n      var _await$Permissions$as, status, result, img_array;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA_ROLL));\n\n            case 2:\n              _await$Permissions$as = _context2.sent;\n              status = _await$Permissions$as.status;\n\n              if (status == 'granted') {} else {}\n\n              _context2.next = 7;\n              return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n                allowsEditing: false,\n                aspect: [4, 3],\n                base64: true,\n                quality: 0.5\n              }));\n\n            case 7:\n              result = _context2.sent;\n              img_array = [];\n\n              if (result.base64) {\n                img_array.push(result.base64);\n              } else {}\n\n              _this.setState({\n                images: [].concat(_toConsumableArray(_this.state.images), img_array)\n              });\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    };\n\n    _this.click_images = function _callee3() {\n      var _await$Permissions$as2, status, result, img_array;\n\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 2:\n              _await$Permissions$as2 = _context3.sent;\n              status = _await$Permissions$as2.status;\n\n              if (status !== 'granted') {}\n\n              _context3.next = 7;\n              return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync({\n                mediaTypes: ImagePicker.MediaTypeOptions.All,\n                allowsEditing: false,\n                aspect: [4, 3],\n                base64: true,\n                quality: 0.5\n              }));\n\n            case 7:\n              result = _context3.sent;\n              img_array = [];\n\n              if (result.base64) {\n                img_array.push(result.base64);\n              } else {}\n\n              _this.setState({\n                images: [].concat(_toConsumableArray(_this.state.images), img_array)\n              });\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      });\n    };\n\n    _this.update_supp_id = function (val1) {\n      _this.setState({\n        supplier_id: val1.supplier_id,\n        supplier_name: val1.suppliername,\n        show_s_create_btn: false\n      });\n\n      console.log(val1);\n    };\n\n    _this.cerate_folder_if_not_existed = function _callee4() {\n      var folder, fi;\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              folder = FileSystem.documentDirectory + \"mgsnotes\";\n              _context4.next = 4;\n              return _regeneratorRuntime.awrap(FileSystem.makeDirectoryAsync(folder, {\n                intermediates: true\n              }));\n\n            case 4:\n              _context4.next = 6;\n              return _regeneratorRuntime.awrap(FileSystem.getInfoAsync(folder));\n\n            case 6:\n              fi = _context4.sent;\n              console.log(JSON.stringify(fi));\n              _context4.next = 13;\n              break;\n\n            case 10:\n              _context4.prev = 10;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.log(_context4.t0);\n\n            case 13:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 10]]);\n    };\n\n    _this.close_modal = function () {\n      _this.props.handle_visibility(false, \"products\");\n    };\n\n    _this.fetchProductdata = function _callee5() {\n      var eventid, supplier_name, supplier_id, product_name, supp_ref, fobusd, moq, notes, images;\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _this.setState({\n                response: \" Note: Please wait we saving your data .... \"\n              });\n\n              eventid = _this.state.event_id;\n              supplier_name = _this.state.supplier_name;\n              supplier_id = _this.state.supplier_id;\n              product_name = _this.state.product_name;\n              supp_ref = _this.state.supp_ref;\n              fobusd = _this.state.fobusd;\n              moq = _this.state.moq;\n              notes = _this.state.notes;\n              images = _this.state.images;\n\n              if (supplier_name != '') {\n                if (product_name != '') {\n                  if (images.length > 0) {\n                    insert_product(eventid, supplier_name, supplier_id, product_name, supp_ref, fobusd, moq, notes, images).then(function (response) {\n                      var supp_data = JSON.parse(response);\n\n                      if (supp_data) {}\n\n                      _this.close_modal();\n                    });\n                  } else {\n                    alert('Please Choose images  ');\n\n                    _this.setState({\n                      response: \" Please choose images \"\n                    });\n                  }\n                } else {\n                  alert('Please Fill Product name ');\n\n                  _this.setState({\n                    response: \"Please Fill Product name  \"\n                  });\n                }\n              } else {\n                alert('Please Fill Supplier name ');\n\n                _this.setState({\n                  response: \"Please Fill Supplier name  \"\n                });\n              }\n\n            case 11:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      });\n    };\n\n    _this.state = {\n      user_id: 0,\n      user_name: '',\n      event_id: 0,\n      lastsupp: [],\n      supplier_name: '',\n      supplier_id: 0,\n      product_name: '',\n      supp_ref: '',\n      fobusd: '',\n      moq: '',\n      notes: '',\n      product_categories: [],\n      product_category: 0,\n      images: [],\n      response: ' ',\n      isCapturing: false,\n      show_s_create_btn: false\n    };\n    return _this;\n  }\n\n  _createClass(Create_product, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.single_supp) {\n        this.setState({\n          supplier_id: this.props.supp_id,\n          supplier_name: this.props.suppliername\n        });\n      } else {}\n\n      this.getData();\n      this.con_pro_data();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(SafeAreaView, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        }\n      }, React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 22,\n          marginBottom: 10,\n          fontWeight: \"bold\",\n          color: \"#000000\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        }\n      }, \"CREATE PRODUCT\"), this.props.single_supp ? React.createElement(Last_supplier, {\n        update_supp_id: this.update_supp_id.bind(this),\n        suppliername: this.props.suppliername,\n        supplier_id: this.props.supp_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        }\n      }) : React.createElement(FlatList, {\n        numColumns: 3,\n        data: this.state.lastsupp,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(Last_supplier, {\n            update_supp_id: _this2.update_supp_id.bind(_this2),\n            suppliername: item.supplier_name,\n            supplier_id: item.supplier_note_id,\n            data: item,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 308\n            }\n          });\n        },\n        ListFooterComponent: this.renderFooter,\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        }\n      })), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputfields,\n        textAlign: \"left\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            product_name: text\n          });\n        },\n        placeholderTextColor: \"#818181\",\n        placeholder: \"Product Name*\",\n        ref: function ref(component) {\n          return _this2._textInput1 = component;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        }\n      })), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputfields,\n        textAlign: \"left\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            supp_ref: text\n          });\n        },\n        placeholderTextColor: \"#818181\",\n        placeholder: \"Supp. Ref\",\n        ref: function ref(component) {\n          return _this2._textInput2 = component;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        }\n      })), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputfields,\n        textAlign: \"left\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            fobusd: text\n          });\n        },\n        placeholderTextColor: \"#818181\",\n        placeholder: \"FOB USD\",\n        keyboardType: 'phone-pad',\n        ref: function ref(component) {\n          return _this2._textInput3 = component;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        }\n      })), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputfields,\n        textAlign: \"left\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            moq: text\n          });\n        },\n        placeholderTextColor: \"#818181\",\n        placeholder: \"MOQ\",\n        keyboardType: 'phone-pad',\n        ref: function ref(component) {\n          return _this2._textInput4 = component;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        }\n      })), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        }\n      }, React.createElement(TextInput, {\n        multiline: true,\n        numberOfLines: 10,\n        style: styles.textarea,\n        textAlign: \"left\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            notes: text\n          });\n        },\n        placeholderTextColor: \"#818181\",\n        placeholder: \"Notes\",\n        ref: function ref(component) {\n          return _this2._textInput5 = component;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        }\n      })), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        }\n      }, React.createElement(Text, {\n        style: styles.response,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        }\n      }, this.state.response)), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        }\n      }, \"Product Category\")), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        }\n      }, React.createElement(Picker, {\n        mode: \"dropdown\",\n        selectedValue: this.state.product_category,\n        onValueChange: function onValueChange(value) {\n          _this2.setState({\n            product_category: value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399\n        }\n      }, this.state.product_categories.map(function (item, index) {\n        return React.createElement(Picker.Item, {\n          label: item.category_name,\n          value: item.id,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 408\n          }\n        });\n      }))), React.createElement(View, {\n        style: styles.buttons,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        }\n      }, React.createElement(View, {\n        style: styles.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.choose_images();\n        },\n        style: {\n          width: 40\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416\n        }\n      }, React.createElement(Image, {\n        source: require(\"../../../assets/img/gallery.png\"),\n        style: {\n          width: 40,\n          height: 40,\n          marginLeft: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419\n        }\n      }))), React.createElement(View, {\n        style: styles.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.click_images();\n        },\n        style: {\n          width: 40\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428\n        }\n      }, React.createElement(Image, {\n        source: require(\"../../../assets/img/camera.png\"),\n        style: {\n          width: 40,\n          height: 40,\n          marginLeft: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431\n        }\n      }))), React.createElement(View, {\n        style: styles.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.fetchProductdata();\n        },\n        style: {\n          textAlign: \"center\",\n          backgroundColor: \"#176fc1\",\n          width: 100,\n          paddingLeft: 20,\n          paddingRight: 20,\n          paddingTop: 10,\n          paddingBottom: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"#fff\",\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443\n        }\n      }, \"SAVE\")))), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448\n        }\n      }, React.createElement(FlatList, {\n        numColumns: 3,\n        data: this.state.images,\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item;\n          return React.createElement(Images_upload_view, {\n            base64img: item,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 455\n            }\n          });\n        },\n        ListFooterComponent: this.renderFooter,\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449\n        }\n      })))));\n    }\n  }]);\n\n  return Create_product;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    margin: 20,\n    backgroundColor: '#fff'\n  },\n  buttons: {\n    alignItems: \"flex-end\",\n    textAlign: \"center\",\n    marginTop: 5,\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  },\n  add_supp: {\n    backgroundColor: '#176fc1',\n    paddingLeft: 10,\n    paddingTop: 10,\n    paddingBottom: 10,\n    minWidth: 130,\n    maxWidth: 130\n  },\n  button: {\n    width: '20%'\n  },\n  inputfields: {\n    alignSelf: 'stretch',\n    opacity: 0.4,\n    marginTop: 15,\n    fontSize: 18,\n    backgroundColor: \"#fff\",\n    maxHeight: 40,\n    minWidth: 300,\n    borderColor: \"gray\",\n    borderWidth: 1,\n    paddingLeft: 15\n  },\n  textarea: {\n    alignSelf: 'stretch',\n    opacity: 0.4,\n    marginTop: 15,\n    fontSize: 18,\n    backgroundColor: \"#fff\",\n    maxHeight: 150,\n    minWidth: 300,\n    borderColor: \"gray\",\n    borderWidth: 1,\n    paddingLeft: 15,\n    textAlignVertical: 'top'\n  },\n  response: {\n    fontSize: 20,\n    color: \"red\",\n    marginBottom: 0\n  },\n  heading: {\n    fontSize: 18,\n    fontWeight: \"normal\",\n    borderColor: \"#176fc1\",\n    borderWidth: 1,\n    backgroundColor: \"#176fc1\",\n    color: \"#fff\",\n    padding: 5,\n    marginBottom: 10\n  },\n  camera: {\n    flex: 1,\n    justifyContent: 'space-between'\n  }\n});\nexport default Create_product;","map":{"version":3,"sources":["D:/Notes_app/Pages/add_notes/notes_components/Create_product.js"],"names":["React","Component","ImagePicker","Last_supplier","Images_upload_view","SafeAreaView","Permissions","FileSystem","SQLite","insert_product","db","openDatabase","Create_product","props","getData","AsyncStorage","getItem","value","setState","event_id","con_pro_data","choose_images","askAsync","CAMERA_ROLL","status","launchImageLibraryAsync","allowsEditing","aspect","base64","quality","result","img_array","push","images","state","click_images","CAMERA","launchCameraAsync","mediaTypes","MediaTypeOptions","All","update_supp_id","val1","supplier_id","supplier_name","suppliername","show_s_create_btn","console","log","cerate_folder_if_not_existed","folder","documentDirectory","makeDirectoryAsync","intermediates","getInfoAsync","fi","JSON","stringify","close_modal","handle_visibility","fetchProductdata","response","eventid","product_name","supp_ref","fobusd","moq","notes","length","then","supp_data","parse","alert","user_id","user_name","lastsupp","product_categories","product_category","isCapturing","single_supp","supp_id","styles","container","fontSize","marginBottom","fontWeight","color","bind","item","supplier_note_id","renderFooter","index","toString","inputfields","text","component","_textInput1","_textInput2","_textInput3","_textInput4","textarea","_textInput5","map","category_name","id","buttons","button","width","require","height","marginLeft","textAlign","backgroundColor","paddingLeft","paddingRight","paddingTop","paddingBottom","StyleSheet","create","flex","margin","alignItems","marginTop","flexDirection","flexWrap","add_supp","minWidth","maxWidth","alignSelf","opacity","maxHeight","borderColor","borderWidth","textAlignVertical","heading","padding","camera","justifyContent"],"mappings":"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","sourcesContent":["//import liraries\r\nimport React, { Component } from 'react';\r\nimport { View, FlatList, Text, TextInput, StyleSheet, TouchableOpacity, ScrollView, Alert, Image, AsyncStorage, Picker } from 'react-native';\r\n// import ImagePicker from 'react-native-image-crop-picker';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport Last_supplier from './Last_supplier.js';\r\nimport Images_upload_view from './Images_upload_view.js';\r\nimport { SafeAreaView } from 'react-navigation';\r\nimport * as Permissions from 'expo-permissions';\r\nimport * as FileSystem from 'expo-file-system';\r\n \r\n////////////////////SQLLITE CONNECTION\r\nimport { SQLite } from 'expo-sqlite';\r\nimport { insert_product } from '../../models/all_models.js';\r\nconst db = SQLite.openDatabase('db.db');\r\n//////////////////////////////////////\r\n\r\nclass Create_product extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        //////////////////\r\n        this.state = {\r\n            user_id: 0,\r\n            user_name: '',\r\n            event_id: 0,\r\n            lastsupp: [],\r\n            supplier_name: '',\r\n            supplier_id: 0,\r\n            product_name: '',\r\n            supp_ref: '',\r\n            fobusd: '',\r\n            moq: '',\r\n            notes: '',\r\n            product_categories: [],\r\n            product_category: 0,\r\n            images: [],\r\n            response: ' ',\r\n            isCapturing: false,\r\n            show_s_create_btn: false\r\n\r\n        }\r\n        ///////////////////\r\n\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        if(this.props.single_supp){\r\n            this.setState({\r\n                supplier_id: this.props.supp_id,\r\n                supplier_name: this.props.suppliername,\r\n            })\r\n        }else{\r\n\r\n        }\r\n\r\n\r\n        //////// Create the contacts database if not existed///////////\r\n \r\n\r\n        //////// Create the suppliers database if not existed///////////\r\n \r\n\r\n        //////// Create the photos database if not existed///////////\r\n \r\n\r\n\r\n\r\n        /////////////////////////////////////////////////////\r\n\r\n        this.getData();\r\n        this.con_pro_data();\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    /////////////////GET COOKIES DATA /////////////////////\r\n    ///////////////////////////////////////////////////////\r\n    getData = async () => {\r\n        try {\r\n            const value = await AsyncStorage.getItem('selected_event_id');\r\n           \r\n            ///////////////////////     \r\n            this.setState({\r\n                event_id: value,\r\n            });\r\n            //////////////////////////\r\n            if (value !== null) {\r\n                // value previously stored\r\n            }\r\n        } catch (e) {\r\n            // error reading value\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    con_pro_data = () => {\r\n\r\n\r\n  \r\n\r\n    }\r\n\r\n\r\n\r\n // Choose images from camera\r\n    ///////////////////////////\r\n    choose_images = async () => { \r\n        const { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL); \r\n        if (status == 'granted') {\r\n            // alert('Sorry, we need camera roll permissions to make this work!');\r\n            // alert(status)\r\n        } else {\r\n            // alert(status)\r\n        } \r\n        let result = await ImagePicker.launchImageLibraryAsync({\r\n            allowsEditing: false,\r\n            aspect: [4, 3],\r\n            base64: true,\r\n            quality:0.5\r\n        });\r\n\r\n        // console.log(result.base64);\r\n        var img_array = []; \r\n        if(result.base64){\r\n            img_array.push(result.base64);\r\n        }else{ \r\n        }  \r\n        this.setState({\r\n            images: [...this.state.images, ...img_array]\r\n        });   \r\n    }\r\n\r\n    // Click images from camera \r\n    ///////////////////////////\r\n    click_images = async () => { \r\n        const { status } = await Permissions.askAsync(Permissions.CAMERA);\r\n        if (status !== 'granted') {\r\n            // alert('Sorry, we need camera roll permissions to make this work!');\r\n\r\n        } \r\n        let result = await ImagePicker.launchCameraAsync({\r\n            mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n            allowsEditing: false,\r\n            aspect: [4, 3],\r\n            base64: true,\r\n            quality:0.5\r\n        });\r\n  \r\n        var img_array = []; \r\n        if(result.base64){\r\n            img_array.push(result.base64);\r\n        }else{ \r\n        }\r\n\r\n        this.setState({\r\n            images: [...this.state.images, ...img_array]\r\n        });\r\n \r\n    }\r\n\r\n\r\n\r\n    ////// Set supplier id for the contact\r\n    //////////////////////////////////////\r\n    update_supp_id = (val1) => {\r\n\r\n        this.setState({\r\n            supplier_id: val1.supplier_id,\r\n            supplier_name: val1.suppliername,\r\n            show_s_create_btn: false,\r\n           \r\n        });\r\n\r\n     console.log(val1);\r\n\r\n\r\n\r\n    }\r\n\r\n    ///////////////////////////////////////\r\n\r\n \r\n\r\n\r\n    cerate_folder_if_not_existed = async () => {\r\n\r\n        try {\r\n            let folder = FileSystem.documentDirectory + \"mgsnotes\"\r\n            await FileSystem.makeDirectoryAsync(folder, {\r\n                intermediates: true\r\n            })\r\n\r\n            var fi = await FileSystem.getInfoAsync(folder);\r\n\r\n            console.log(JSON.stringify(fi))\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n\r\n \r\n    close_modal = ()=>{   \r\n        this.props.handle_visibility(false,\"products\");\r\n    }  \r\n\r\n    ////// POST Form data//////////////////\r\n    //////////////////////////////////////\r\n    fetchProductdata = async() => {\r\n\r\n        this.setState({\r\n            response: \" Note: Please wait we saving your data .... \",\r\n        });\r\n \r\n   \r\n\r\n        let eventid = this.state.event_id;\r\n        let supplier_name = this.state.supplier_name;\r\n        let supplier_id = this.state.supplier_id;\r\n        let product_name = this.state.product_name;\r\n        let supp_ref = this.state.supp_ref;\r\n        let fobusd = this.state.fobusd;\r\n        let moq = this.state.moq;\r\n        let notes = this.state.notes;\r\n        let images = this.state.images;\r\n\r\n\r\n\r\n        if(supplier_name !='' ){\r\n             if(product_name !='' ){\r\n\r\n            if (images.length > 0){\r\n                   \r\n                        /*************** */\r\n        \r\n                        insert_product(eventid, supplier_name, supplier_id, product_name,supp_ref,fobusd,moq,notes,images).then((response) => {\r\n                            var supp_data = JSON.parse(response);\r\n                            if(supp_data){\r\n                                \r\n                            }\r\n                            this.close_modal();\r\n                            // console.log(supp_data);\r\n                            // this.setState({\r\n                            //     all_suppliers: supp_data.data\r\n                            // });\r\n                        });\r\n    \r\n    \r\n                        /* INSERT CODE HERE */\r\n\r\n\r\n                    }else{\r\n                        alert('Please Choose images  ');\r\n                        this.setState({\r\n                            response: \" Please choose images \" \r\n                        })\r\n                    }\r\n                }else{\r\n                    alert('Please Fill Product name ');\r\n                    this.setState({\r\n                        response: \"Please Fill Product name  \"\r\n                        \r\n                    })\r\n                }\r\n                }else{\r\n                    alert('Please Fill Supplier name ');\r\n                    this.setState({\r\n                        response: \"Please Fill Supplier name  \"\r\n                        \r\n                    })\r\n                }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <SafeAreaView style={styles.container}>\r\n                <ScrollView>\r\n                    <View >\r\n\r\n                        <View>\r\n                            <Text style={{ fontSize: 22, marginBottom: 10, fontWeight: \"bold\", color: \"#000000\" }}>CREATE PRODUCT</Text>\r\n                          \r\n                            {this.props.single_supp?\r\n                            <Last_supplier update_supp_id={this.update_supp_id.bind(this)} suppliername={this.props.suppliername} supplier_id={this.props.supp_id}   />:\r\n                \r\n                            <FlatList\r\n                                numColumns={3}\r\n                                data={this.state.lastsupp}\r\n                                //Item Separator View this.state.lastsuppliers\r\n                                renderItem={({ item }) => (\r\n                                     \r\n                                    <Last_supplier update_supp_id={this.update_supp_id.bind(this)} suppliername={item.supplier_name} supplier_id={item.supplier_note_id} data={item} />\r\n\r\n                                )}\r\n\r\n                                ListFooterComponent={this.renderFooter}\r\n                                keyExtractor={(item, index) => index.toString()}\r\n \r\n                                /> }\r\n\r\n\r\n                            {/* <TextInput\r\n                                style={styles.inputfields}\r\n                                textAlign=\"left\"\r\n                                onChangeText={(text) =>\r\n                                    this.setState({\r\n                                        supplier_name: text,\r\n                                        show_s_create_btn: true\r\n                                    })\r\n                                }\r\n                                placeholderTextColor='#818181'\r\n                                placeholder=\"Supplier Name*\"\r\n                                value={this.state.supplier_name}\r\n                            /> */}\r\n                             \r\n                        </View>\r\n\r\n                        <View>\r\n                            <TextInput\r\n                                style={styles.inputfields}\r\n                                textAlign=\"left\"\r\n                                onChangeText={(text) => this.setState({ product_name: text })}\r\n                                placeholderTextColor='#818181'\r\n                                placeholder=\"Product Name*\"\r\n                                ref={component => this._textInput1 = component}\r\n                            />\r\n                        </View>\r\n                        <View>\r\n                            <TextInput\r\n                                style={styles.inputfields}\r\n                                textAlign=\"left\"\r\n                                onChangeText={(text) => this.setState({ supp_ref: text })}\r\n                                placeholderTextColor='#818181'\r\n                                placeholder=\"Supp. Ref\"\r\n                                ref={component => this._textInput2 = component}\r\n\r\n                            />\r\n                        </View>\r\n                        <View>\r\n                            <TextInput\r\n                                style={styles.inputfields}\r\n                                textAlign=\"left\"\r\n                                onChangeText={(text) => this.setState({ fobusd: text })}\r\n                                placeholderTextColor='#818181'\r\n                                placeholder=\"FOB USD\"\r\n                                keyboardType={'phone-pad'}\r\n                                ref={component => this._textInput3 = component}\r\n                            />\r\n                        </View>\r\n                        <View>\r\n                            <TextInput\r\n                                style={styles.inputfields}\r\n                                textAlign=\"left\"\r\n                                onChangeText={(text) => this.setState({ moq: text })}\r\n                                placeholderTextColor='#818181'\r\n                                placeholder=\"MOQ\"\r\n                                keyboardType={'phone-pad'}\r\n                                ref={component => this._textInput4 = component}\r\n                            />\r\n                        </View>\r\n\r\n                        <View>\r\n                            <TextInput\r\n                                multiline={true}\r\n                                numberOfLines={10}\r\n                                style={styles.textarea}\r\n                                textAlign=\"left\"\r\n                                onChangeText={(text) => this.setState({ notes: text })}\r\n                                placeholderTextColor='#818181'\r\n                                placeholder=\"Notes\"\r\n                                ref={component => this._textInput5 = component}\r\n                            />\r\n                        </View>\r\n                        <View>\r\n                            <Text style={styles.response}>{this.state.response}</Text>\r\n                        </View>\r\n\r\n                        <View>\r\n                            <Text>Product Category</Text>\r\n                        </View>\r\n\r\n                        <View>\r\n                            <Picker\r\n                                mode=\"dropdown\"\r\n                                selectedValue={this.state.product_category}\r\n                                onValueChange={(value) => {\r\n                                    this.setState({\r\n                                        product_category: value\r\n                                    });\r\n                                }} >\r\n                                {this.state.product_categories.map((item, index) => {\r\n                                    return (<Picker.Item label={item.category_name} value={item.id} key={index} />)\r\n                                })}\r\n                            </Picker>\r\n                        </View>\r\n\r\n                        <View style={styles.buttons}>\r\n\r\n                            <View style={styles.button}>\r\n                                <TouchableOpacity\r\n                                    onPress={() => { this.choose_images() }}\r\n                                    style={{ width: 40 }}>\r\n                                    <Image\r\n                                        source={require('../../../assets/img/gallery.png')}\r\n                                        style={{ width: 40, height: 40, marginLeft: 8 }}\r\n                                    />\r\n                                    {/* <Text style={{color:\"#000000\"}}> GALLERY</Text> */}\r\n                                </TouchableOpacity>\r\n                            </View>\r\n\r\n                            <View style={styles.button}>\r\n                                <TouchableOpacity\r\n                                    onPress={() => { this.click_images() }}\r\n                                    style={{ width: 40 }}>\r\n                                    <Image\r\n                                        source={require('../../../assets/img/camera.png')}\r\n                                        style={{ width: 40, height: 40, marginLeft: 8 }}\r\n                                    />\r\n                                    {/* <Text style={{color:\"#000000\"}}>CAMERA</Text> */}\r\n                                </TouchableOpacity>\r\n                            </View>\r\n\r\n                            <View style={styles.button}>\r\n                                <TouchableOpacity\r\n                                    onPress={() => { this.fetchProductdata() }}\r\n                                    style={{ textAlign: \"center\", backgroundColor: \"#176fc1\", width: 100, paddingLeft: 20, paddingRight: 20, paddingTop: 10, paddingBottom: 10 }}>\r\n                                    <Text style={{ color: \"#fff\", textAlign: \"center\" }}>SAVE</Text>\r\n                                </TouchableOpacity>\r\n                            </View>\r\n                        </View>\r\n\r\n                        <View>\r\n                            <FlatList\r\n                                numColumns={3}\r\n                                data={this.state.images}\r\n                                //data={this.state.images} \r\n                                //Item Separator View this.state.lastsuppliers\r\n                                renderItem={({ item }) => (\r\n                                    <Images_upload_view base64img={item} />\r\n                                )}\r\n                                ListFooterComponent={this.renderFooter}\r\n                                keyExtractor={(item, index) => index.toString()}\r\n\r\n                            />\r\n                        </View>\r\n\r\n                    </View>\r\n                </ScrollView>\r\n            </SafeAreaView>\r\n        );\r\n    }\r\n}\r\n\r\n// define your styles\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        margin: 20,\r\n        backgroundColor: '#fff',\r\n    },\r\n    buttons: {\r\n        alignItems: \"flex-end\",\r\n        textAlign: \"center\",\r\n        marginTop: 5,\r\n        flexDirection: 'row',\r\n        flexWrap: 'wrap',\r\n\r\n    },\r\n    add_supp:{\r\n        backgroundColor: '#176fc1',\r\n        paddingLeft: 10,\r\n        paddingTop: 10,\r\n        paddingBottom: 10,\r\n        minWidth: 130,\r\n        maxWidth: 130,\r\n        \r\n    },\r\n    button: {\r\n        width: '20%'\r\n    },\r\n\r\n    inputfields: {\r\n        alignSelf: 'stretch',\r\n        opacity: 0.4,\r\n        marginTop: 15,\r\n        fontSize: 18,\r\n        backgroundColor: \"#fff\",\r\n        maxHeight: 40,\r\n        minWidth: 300,\r\n        borderColor: \"gray\",\r\n        borderWidth: 1,\r\n        paddingLeft: 15\r\n    },\r\n    textarea: {\r\n        alignSelf: 'stretch',\r\n        opacity: 0.4,\r\n        marginTop: 15,\r\n        fontSize: 18,\r\n        backgroundColor: \"#fff\",\r\n        maxHeight: 150,\r\n        minWidth: 300,\r\n        borderColor: \"gray\",\r\n        borderWidth: 1,\r\n        paddingLeft: 15,\r\n        textAlignVertical: 'top',\r\n    },\r\n    response: {\r\n        fontSize: 20,\r\n        color: \"red\",\r\n        marginBottom: 0\r\n    },\r\n    heading: {\r\n        fontSize: 18,\r\n        fontWeight: \"normal\",\r\n        borderColor: \"#176fc1\",\r\n        borderWidth: 1,\r\n        backgroundColor: \"#176fc1\",\r\n        color: \"#fff\",\r\n        padding: 5,\r\n        marginBottom: 10\r\n    },\r\n    camera: {\r\n        flex: 1,\r\n        justifyContent: 'space-between',\r\n    }\r\n});\r\n\r\n\r\n//make this component available to the app\r\nexport default Create_product;\r\n"]},"metadata":{},"sourceType":"module"}