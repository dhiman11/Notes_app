{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"D:\\\\Notes_app\\\\Pages\\\\edit_note\\\\Image_slider.js\";\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport PixelRatio from \"react-native-web/dist/exports/PixelRatio\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar Image_slider = function (_Component) {\n  _inherits(Image_slider, _Component);\n\n  function Image_slider(props) {\n    var _this;\n\n    _classCallCheck(this, Image_slider);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Image_slider).call(this, props));\n\n    _this.sum_values = function (val1, val2) {\n      return parseInt(val1) + parseInt(val2);\n    };\n\n    _this.state = {\n      slider_images: [],\n      zoomimage: false\n    };\n    return _this;\n  }\n\n  _createClass(Image_slider, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        }\n      }, React.createElement(ScrollView, {\n        horizontal: true,\n        indicatorStyle: \"black\",\n        nestedScrollEnabled: true,\n        pagingEnabled: true,\n        persistentScrollbar: true,\n        maximumZoomScale: 2,\n        resizeMode: \"contain\",\n        minimumZoomScale: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        }\n      }, this.props.Images_data.map(function (item, index) {\n        return React.createElement(View, {\n          key: index,\n          style: styles.index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          }\n        }, React.createElement(Image, {\n          style: _this2.state.zoomimage ? styles.zoom_images : styles.images,\n          source: {\n            uri: item.src\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          }\n        }));\n      })));\n    }\n  }]);\n\n  return Image_slider;\n}(Component);\n\nexport { Image_slider as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#fff'\n  },\n  heading: {\n    fontSize: 22,\n    color: \"#000000\",\n    marginTop: 10,\n    width: 100,\n    marginBottom: 20,\n    fontWeight: \"bold\"\n  },\n  images: {\n    width: width,\n    height: 350\n  },\n  zoom_images: {\n    width: width,\n    height: height\n  }\n});","map":{"version":3,"sources":["D:/Notes_app/Pages/edit_note/Image_slider.js"],"names":["React","Component","TouchableOpacity","Dimensions","get","width","height","Image_slider","props","sum_values","val1","val2","parseInt","state","slider_images","zoomimage","Images_data","map","item","index","styles","zoom_images","images","uri","src","StyleSheet","create","container","flex","justifyContent","alignItems","backgroundColor","heading","fontSize","color","marginTop","marginBottom","fontWeight"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;AAGA,SAASC,gBAAT,QAAiC,8BAAjC;;sBAE0BC,UAAU,CAACC,GAAX,CAAe,QAAf,C;IAAlBC,K,mBAAAA,K;IAAOC,M,mBAAAA,M;;IAEMC,Y;;;AACjB,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,sFAAMA,KAAN;;AADe,UAQnBC,UARmB,GAQR,UAACC,IAAD,EAAMC,IAAN,EAAa;AACpB,aAAOC,QAAQ,CAACF,IAAD,CAAR,GAAeE,QAAQ,CAACD,IAAD,CAA9B;AACH,KAVkB;;AAEf,UAAKE,KAAL,GAAa;AACTC,MAAAA,aAAa,EAAE,EADN;AAETC,MAAAA,SAAS,EAAE;AAFF,KAAb;AAFe;AAMlB;;;;6BAOQ;AAAA;;AACL,aACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,UAAD;AACI,QAAA,UAAU,EAAE,IADhB;AAEI,QAAA,cAAc,EAAC,OAFnB;AAGI,QAAA,mBAAmB,EAAE,IAHzB;AAKI,QAAA,aAAa,EAAE,IALnB;AAMI,QAAA,mBAAmB,EAAE,IANzB;AAOI,QAAA,gBAAgB,EAAE,CAPtB;AAQI,QAAA,UAAU,EAAC,SARf;AASI,QAAA,gBAAgB,EAAE,CATtB;AAAA;AAAA;AAAA;AAAA;AAAA,SAaQ,KAAKP,KAAL,CAAWQ,WAAX,CAAuBC,GAAvB,CAA2B,UAACC,IAAD,EAAOC,KAAP;AAAA,eACvB,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAEA,KAAX;AAAkB,UAAA,KAAK,EAAEC,MAAM,CAACD,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,KAAD;AACI,UAAA,KAAK,EAAE,MAAI,CAACN,KAAL,CAAWE,SAAX,GAAuBK,MAAM,CAACC,WAA9B,GAA2CD,MAAM,CAACE,MAD7D;AAEI,UAAA,MAAM,EAAE;AAAEC,YAAAA,GAAG,EAAEL,IAAI,CAACM;AAAZ,WAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADuB;AAAA,OAA3B,CAbR,CAFJ,CADJ;AAgCH;;;;EA/CqCvB,S;;SAArBM,Y;AAmDrB,IAAMa,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,SAAS,EAAE;AACPC,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,cAAc,EAAE,QAFT;AAGPC,IAAAA,UAAU,EAAE,QAHL;AAIPC,IAAAA,eAAe,EAAE;AAJV,GADkB;AAS7BC,EAAAA,OAAO,EAAE;AACLC,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,KAAK,EAAE,SAFF;AAGLC,IAAAA,SAAS,EAAE,EAHN;AAIL9B,IAAAA,KAAK,EAAE,GAJF;AAKL+B,IAAAA,YAAY,EAAE,EALT;AAMLC,IAAAA,UAAU,EAAE;AANP,GAToB;AAiB7Bf,EAAAA,MAAM,EAAE;AACJjB,IAAAA,KAAK,EAAEA,KADH;AAEJC,IAAAA,MAAM,EAAE;AAFJ,GAjBqB;AAqB7Be,EAAAA,WAAW,EAAE;AACThB,IAAAA,KAAK,EAAEA,KADE;AAETC,IAAAA,MAAM,EAAEA;AAFC;AArBgB,CAAlB,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { View, Text, StyleSheet, ScrollView, Image } from 'react-native';\r\nimport { Dimensions, PixelRatio } from 'react-native';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\n\r\nconst { width, height } = Dimensions.get('window');\r\n\r\nexport default class Image_slider extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            slider_images: [],\r\n            zoomimage: false\r\n        };\r\n    }\r\n\r\n    sum_values=(val1,val2)=>{\r\n        return parseInt(val1)+parseInt(val2);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <View>\r\n\r\n                <ScrollView \r\n                    horizontal={true}\r\n                    indicatorStyle=\"black\"\r\n                    nestedScrollEnabled={true}\r\n                    \r\n                    pagingEnabled={true}\r\n                    persistentScrollbar={true}\r\n                    maximumZoomScale={2}\r\n                    resizeMode=\"contain\"\r\n                    minimumZoomScale={1}\r\n                >\r\n                    {\r\n                       \r\n                        this.props.Images_data.map((item, index) => ( \r\n                            <View key={index} style={styles.index}>\r\n                                <Image\r\n                                    style={this.state.zoomimage ? styles.zoom_images :styles.images }\r\n                                    source={{ uri: item.src }} /> \r\n                                  \r\n                            </View>\r\n                        ))\r\n                    }\r\n                </ScrollView>\r\n\r\n\r\n            </View>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundColor: '#fff',\r\n\r\n\r\n    },\r\n    heading: {\r\n        fontSize: 22,\r\n        color: \"#000000\",\r\n        marginTop: 10,\r\n        width: 100,\r\n        marginBottom: 20,\r\n        fontWeight: \"bold\"\r\n    },\r\n    images: {\r\n        width: width,\r\n        height: 350\r\n    },\r\n    zoom_images: {\r\n        width: width,\r\n        height: height\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}