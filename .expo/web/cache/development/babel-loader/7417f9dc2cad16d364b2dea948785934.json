{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"D:\\\\Notes_app\\\\Pages\\\\modals\\\\Add_event_modal.js\";\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { TextInput } from 'react-native-gesture-handler';\nimport DateTimePicker from \"react-native-modal-datetime-picker\";\nimport { SQLite } from 'expo-sqlite';\nimport { api_name } from \"../Settings\";\n\nvar Add_event_modal = function (_Component) {\n  _inherits(Add_event_modal, _Component);\n\n  function Add_event_modal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Add_event_modal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Add_event_modal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isDateTimePickerVisible: false,\n      all_events: [],\n      fairnew: '',\n      city: '',\n      fromdate: '-',\n      todate: '-',\n      user_id: 1\n    };\n\n    _this.hideDateTimePicker = function () {\n      _this.setState({\n        isDateTimePickerVisible: false\n      });\n    };\n\n    _this.confirmed = function (date) {\n      var date = new Date(date);\n      var month = parseInt(date.getMonth()) + 1;\n      var date = date.getFullYear() + \"-\" + month + \"-\" + date.getDate();\n\n      if (_this.state.selecting_date_for == \"fromto\") {\n        _this.setState({\n          fromdate: date.toString()\n        });\n      }\n\n      if (_this.state.selecting_date_for == \"todate\") {\n        _this.setState({\n          todate: date.toString()\n        });\n      }\n\n      _this.hideDateTimePicker();\n    };\n\n    _this.showDateTimePicker = function (datetype) {\n      _this.setState({\n        isDateTimePickerVisible: true,\n        selecting_date_for: datetype\n      });\n    };\n\n    _this.submitForm = function () {\n      var fairnew = _this.state.fairnew;\n      var city = _this.state.city;\n      var fromdate = _this.state.fromdate;\n      var todate = _this.state.todate;\n      var user_id = _this.state.user_id;\n      var newdata = JSON.stringify({\n        fairnew: fairnew,\n        city: city,\n        fromdate: fromdate,\n        todate: todate,\n        user_id: user_id\n      });\n      fetch(api_name + '/Events/addevent', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          fairnew: fairnew,\n          city: city,\n          fromdate: fromdate,\n          todate: todate,\n          user_id: user_id\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this.setModalVisible(false);\n      }).catch(function (error) {});\n\n      _this.setModalVisible(false);\n    };\n\n    return _this;\n  }\n\n  _createClass(Add_event_modal, [{\n    key: \"setModalVisible\",\n    value: function setModalVisible(visible) {\n      this.props.updateState(visible);\n    }\n  }, {\n    key: \"set_data\",\n    value: function set_data(newdata) {\n      return _regeneratorRuntime.async(function set_data$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              try {\n                AsyncStorage.getItem('m_data', function (err, result) {\n                  if (result !== null) {} else {}\n                });\n              } catch (e) {}\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        }\n      }, React.createElement(Modal, {\n        animationType: \"slide\",\n        transparent: false,\n        visible: this.props.modalvisibility,\n        onRequestClose: function onRequestClose() {\n          _this2.setModalVisible(false);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          zIndex: 10,\n          position: \"absolute\",\n          right: 10,\n          top: 10\n        },\n        onPress: function onPress() {\n          _this2.setModalVisible(false);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        }\n      }, React.createElement(Image, {\n        source: require(\"../../assets/img/close.png\"),\n        style: {\n          width: 40,\n          height: 40,\n          marginLeft: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        }\n      })), React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 22,\n          marginBottom: 10,\n          fontWeight: \"bold\",\n          color: \"#000000\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        }\n      }, \"CREATE EVENT\"), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputfields,\n        textAlign: \"left\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            fairnew: text\n          });\n        },\n        placeholderTextColor: \"#818181\",\n        placeholder: \"Name of new event\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        }\n      })), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputfields,\n        textAlign: \"left\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            city: text\n          });\n        },\n        placeholderTextColor: \"#818181\",\n        placeholder: \"(City of New Event)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        }\n      })), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.showDateTimePicker('fromto');\n        },\n        style: styles.inputfields,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 22,\n          color: \"#818181\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        }\n      }, \"From date : \", this.state.fromdate))), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.showDateTimePicker('todate');\n        },\n        style: styles.inputfields,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 22,\n          color: \"#818181\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        }\n      }, \"To date \", this.state.todate))), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        }\n      }, React.createElement(DateTimePicker, {\n        isVisible: this.state.isDateTimePickerVisible,\n        onConfirm: this.confirmed,\n        onCancel: this.hideDateTimePicker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        }\n      })), React.createElement(View, {\n        style: {\n          alignItems: \"center\",\n          alignContent: \"center\",\n          marginTop: 15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.submitForm();\n        },\n        style: {\n          backgroundColor: \"#176fc1\",\n          width: 100,\n          paddingLeft: 20,\n          paddingRight: 20,\n          paddingTop: 10,\n          paddingBottom: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"#fff\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        }\n      }, \"CREATE\"))))));\n    }\n  }]);\n\n  return Add_event_modal;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    margin: 20,\n    backgroundColor: '#fff'\n  },\n  datebutton: {\n    alignSelf: 'stretch',\n    opacity: 0.4,\n    marginBottom: 15,\n    fontSize: 22,\n    backgroundColor: \"#fff\",\n    maxHeight: 50,\n    minWidth: 300,\n    borderColor: \"gray\",\n    borderWidth: 1,\n    paddingLeft: 15,\n    paddingTop: 8,\n    paddingBottom: 15\n  },\n  inputfields: {\n    alignSelf: 'stretch',\n    opacity: 0.4,\n    marginTop: 15,\n    fontSize: 22,\n    backgroundColor: \"#fff\",\n    maxHeight: 60,\n    minWidth: \"100%\",\n    borderColor: \"gray\",\n    borderWidth: 1,\n    paddingLeft: 15\n  }\n});\nexport default Add_event_modal;","map":{"version":3,"sources":["D:/Notes_app/Pages/modals/Add_event_modal.js"],"names":["React","Component","TextInput","DateTimePicker","SQLite","api_name","Add_event_modal","state","isDateTimePickerVisible","all_events","fairnew","city","fromdate","todate","user_id","hideDateTimePicker","setState","confirmed","date","Date","month","parseInt","getMonth","getFullYear","getDate","selecting_date_for","toString","showDateTimePicker","datetype","submitForm","newdata","JSON","stringify","fetch","method","headers","Accept","body","then","response","json","data","setModalVisible","catch","error","visible","props","updateState","AsyncStorage","getItem","err","result","e","modalvisibility","zIndex","position","right","top","require","width","height","marginLeft","styles","container","fontSize","marginBottom","fontWeight","color","inputfields","text","alignItems","alignContent","marginTop","backgroundColor","paddingLeft","paddingRight","paddingTop","paddingBottom","StyleSheet","create","flex","margin","datebutton","alignSelf","opacity","maxHeight","minWidth","borderColor","borderWidth"],"mappings":"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","sourcesContent":["//import liraries\r\n\r\nimport React, { Component } from 'react';\r\nimport { View, Text, StyleSheet, Modal, TouchableOpacity, AsyncStorage, Image } from 'react-native';\r\nimport { TextInput } from 'react-native-gesture-handler';\r\nimport DateTimePicker from \"react-native-modal-datetime-picker\";\r\n \r\nimport { SQLite } from 'expo-sqlite';\r\nimport { api_name } from '../Settings';\r\n\r\n \r\nclass Add_event_modal extends Component {\r\n\r\n    state = {\r\n        isDateTimePickerVisible: false,\r\n        all_events: [],\r\n        fairnew: '',\r\n        city: '',\r\n        fromdate: '-',\r\n        todate: '-',\r\n        user_id: 1\r\n    }\r\n\r\n\r\n    /////////////////Check if this table exist or not \r\n\r\n\r\n    setModalVisible(visible) {\r\n        this.props.updateState(visible);\r\n    }\r\n\r\n    /////////////////////\r\n    //// DATES ////////\r\n\r\n    hideDateTimePicker = () => {\r\n        this.setState({ isDateTimePickerVisible: false });\r\n    };\r\n\r\n\r\n\r\n\r\n    confirmed = date => {\r\n\r\n        var date = new Date(date);\r\n        var month = parseInt(date.getMonth())+1;\r\n        var date = date.getFullYear() + \"-\" + month + \"-\" + date.getDate();\r\n\r\n        if (this.state.selecting_date_for == \"fromto\") {\r\n\r\n            this.setState({\r\n                fromdate: date.toString()\r\n            });\r\n        }\r\n        if (this.state.selecting_date_for == \"todate\") {\r\n            this.setState({\r\n                todate: date.toString()\r\n            });\r\n        }\r\n        this.hideDateTimePicker();\r\n    };\r\n\r\n\r\n    showDateTimePicker = (datetype) => {\r\n        this.setState({\r\n            isDateTimePickerVisible: true,\r\n            selecting_date_for: datetype\r\n        });\r\n    };\r\n\r\n    async set_data(newdata) {\r\n\r\n        try {\r\n            AsyncStorage.getItem('m_data', (err, result) => {\r\n\r\n                if (result !== null) {\r\n\r\n                } else {\r\n\r\n                }\r\n            });\r\n\r\n\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////\r\n    /////SUBMIT THE FORM\r\n    ///////////////////\r\n\r\n    submitForm = () => {\r\n        //////////////////////////\r\n        ///////////////////////// \r\n\r\n        let fairnew = this.state.fairnew;\r\n        let city = this.state.city;\r\n        let fromdate = this.state.fromdate;\r\n        let todate = this.state.todate;\r\n        let user_id = this.state.user_id;\r\n\r\n        var newdata = JSON.stringify({\r\n            fairnew: fairnew,\r\n            city: city,\r\n            fromdate: fromdate,\r\n            todate: todate,\r\n            user_id: user_id,\r\n        });\r\n\r\n        // this.set_data(newdata);\r\n \r\n        fetch(api_name+'/Events/addevent', {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            }, \r\n            body: JSON.stringify({\r\n                fairnew:fairnew,\r\n                city:city,\r\n                fromdate:fromdate,\r\n                todate:todate,\r\n                user_id:user_id,\r\n            }),\r\n            }).then((response) => response.json())\r\n            .then((data) => { \r\n                   this.setModalVisible(false)  \r\n            })\r\n            .catch((error) => {\r\n             // console.error(error);\r\n            });\r\n \r\n\r\n        this.setModalVisible(false);\r\n \r\n    }\r\n\r\n    /////////////////////\r\n    //// DATES ////////\r\n\r\n    render() {\r\n        return (\r\n            <View>\r\n\r\n                <Modal\r\n                    animationType=\"slide\"\r\n                    transparent={false}\r\n                    visible={this.props.modalvisibility}\r\n                    onRequestClose={() => {\r\n                        this.setModalVisible(false)\r\n                    }}>\r\n\r\n                    <TouchableOpacity style={{ zIndex: 10, position: \"absolute\", right: 10, top: 10 }} onPress={() => { this.setModalVisible(false) }}>\r\n                        <Image\r\n                            source={require('../../assets/img/close.png')}\r\n                            style={{ width: 40, height: 40, marginLeft: 8 }}\r\n                        />\r\n                    </TouchableOpacity>\r\n\r\n                    <View style={styles.container}>\r\n                        <Text style={{ fontSize: 22, marginBottom: 10, fontWeight: \"bold\", color: \"#000000\" }}>CREATE EVENT</Text>\r\n\r\n                        <View>\r\n                            <TextInput\r\n                                style={styles.inputfields}\r\n                                textAlign=\"left\"\r\n                                onChangeText={(text) => this.setState({ fairnew: text })}\r\n                                placeholderTextColor='#818181'\r\n                                placeholder=\"Name of new event\"\r\n                            />\r\n                        </View>\r\n\r\n                        <View>\r\n                            <TextInput\r\n                                style={styles.inputfields}\r\n                                textAlign=\"left\"\r\n                                onChangeText={(text) => this.setState({ city: text })}\r\n                                placeholderTextColor='#818181'\r\n                                placeholder=\"(City of New Event)\"\r\n                            />\r\n                        </View>\r\n              \r\n                        <View>\r\n                            <TouchableOpacity\r\n                                onPress={() => { this.showDateTimePicker('fromto') }}\r\n                                style={styles.inputfields}\r\n                            >\r\n                                <Text style={{ fontSize: 22,color:\"#818181\" }}>From date : {this.state.fromdate}</Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n\r\n                        <View>\r\n                            <TouchableOpacity\r\n                                onPress={() => { this.showDateTimePicker('todate') }}\r\n                                style={styles.inputfields}\r\n                            >\r\n\r\n                                <Text style={{ fontSize: 22,color:\"#818181\" }} >To date {this.state.todate}</Text>\r\n\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                        <View>\r\n\r\n                            <DateTimePicker\r\n                                isVisible={this.state.isDateTimePickerVisible}\r\n                                onConfirm={this.confirmed}\r\n                                onCancel={this.hideDateTimePicker}\r\n                            />\r\n                        </View>\r\n                        <View style={{ alignItems: \"center\", alignContent: \"center\",marginTop: 15, }}>\r\n                            <TouchableOpacity\r\n                                onPress={() => { this.submitForm() }}\r\n                                style={{ backgroundColor: \"#176fc1\", width: 100, paddingLeft: 20, paddingRight: 20, paddingTop: 10, paddingBottom: 10 }}>\r\n                                <Text style={{ color: \"#fff\" }}>CREATE</Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n\r\n\r\n                    </View>\r\n                </Modal>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\n// define your styles\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        margin: 20,\r\n        backgroundColor: '#fff',\r\n    },\r\n    datebutton: {\r\n        alignSelf: 'stretch',\r\n        opacity: 0.4,\r\n        marginBottom: 15,\r\n        fontSize: 22,\r\n        backgroundColor: \"#fff\",\r\n        maxHeight: 50,\r\n        minWidth: 300,\r\n        borderColor: \"gray\",\r\n        borderWidth: 1,\r\n        paddingLeft: 15,\r\n        paddingTop: 8,\r\n        paddingBottom: 15\r\n\r\n\r\n    },\r\n    inputfields: {\r\n        alignSelf: 'stretch',\r\n        opacity: 0.4,\r\n        marginTop: 15,\r\n        fontSize: 22,\r\n        backgroundColor: \"#fff\",\r\n        maxHeight: 60,\r\n        minWidth: \"100%\",\r\n        borderColor: \"gray\",\r\n        borderWidth: 1,\r\n        paddingLeft: 15\r\n    },\r\n});\r\n\r\n//make this component available to the app\r\nexport default Add_event_modal;\r\n"]},"metadata":{},"sourceType":"module"}