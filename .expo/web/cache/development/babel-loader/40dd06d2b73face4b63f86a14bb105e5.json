{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"D:\\\\Notes_app\\\\Pages\\\\history_tabs\\\\Product_tab_data.js\";\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { SQLite } from 'expo-sqlite';\nvar db = SQLite.openDatabase('db.db');\nimport Product_compo from \"../History_components/Product_compo\";\nimport Edit_product from \"../edit_note/Edit_product\";\nimport { tabs_data_load } from \"../models/all_models\";\n\nvar Products_tab_data = function (_Component) {\n  _inherits(Products_tab_data, _Component);\n\n  function Products_tab_data(props) {\n    var _this;\n\n    _classCallCheck(this, Products_tab_data);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Products_tab_data).call(this, props));\n\n    _this.process_data = function (rows) {\n      _this.setState({\n        products_data: [].concat(_toConsumableArray(_this.state.products_data), _toConsumableArray(rows)),\n        loadingmore: false\n      });\n\n      console.log(_this.state.products_data);\n    };\n\n    _this.get_data = function (limit) {\n      var tabname = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'products';\n      tabs_data_load(limit, tabname).then(function (response) {\n        var data = JSON.parse(response);\n        console.log(data.data);\n\n        _this.process_data(data.data);\n      });\n    };\n\n    _this._onRefresh = function () {\n      _this.setState({\n        isRefreshing: true\n      });\n\n      _this.setState({\n        products_data: []\n      });\n\n      _this.setState({\n        limit: 0\n      });\n\n      _this.get_data(0);\n\n      _this.setState({\n        isRefreshing: false\n      });\n\n      _this.setState({\n        loadmore_test: ' '\n      });\n    };\n\n    _this.handleLoadMore = function () {\n      _this.setState({\n        loadmore_test: 'Loading...'\n      });\n\n      var limit = parseInt(_this.state.limit) + parseInt(20);\n\n      _this.setState({\n        limit: limit\n      });\n\n      _this.get_data(limit);\n\n      _this.setState({\n        loadmore_test: 'Scroll down to load more'\n      });\n    };\n\n    _this.edit_it = function (id, type) {\n      _this.props.navigation.navigate('Edit_product', {\n        product_id: id\n      });\n    };\n\n    _this.state = {\n      products_data: [],\n      loadmore_test: '',\n      isRefreshing: false,\n      loadingmore: false,\n      history_array: [],\n      limit: 0,\n      edit: false,\n      edit_id: 0\n    };\n    return _this;\n  }\n\n  _createClass(Products_tab_data, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.props.navigation.addListener('willFocus', function (route) {\n        _this2._onRefresh();\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        }\n      }, React.createElement(Modal, {\n        animationType: \"slide\",\n        transparent: false,\n        visible: this.state.edit,\n        onRequestClose: function onRequestClose() {\n          _this3.edit_data(false);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          zIndex: 10,\n          position: \"absolute\",\n          right: 10,\n          top: 10\n        },\n        onPress: function onPress() {\n          _this3.edit_data(false);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        }\n      }, React.createElement(Image, {\n        source: require(\"../../assets/img/close.png\"),\n        style: {\n          width: 40,\n          height: 40,\n          marginLeft: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        }\n      })), React.createElement(Edit_product, {\n        product_id: this.state.edit_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        }\n      })), this.state.loadingmore && React.createElement(ActivityIndicator, {\n        animating: this.state.loadingmore,\n        size: \"large\",\n        color: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        }\n      }), React.createElement(FlatList, {\n        numColumns: 1,\n        data: this.state.products_data,\n        refreshControl: React.createElement(RefreshControl, {\n          refreshing: this.state.isRefreshing,\n          onRefresh: this._onRefresh.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          }\n        }),\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        onEndReachedThreshold: 3,\n        onEndReached: this.handleLoadMore.bind(this),\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item,\n              index = _ref.index;\n          return React.createElement(View, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121\n            }\n          }, React.createElement(TouchableOpacity, {\n            onPress: function onPress() {\n              _this3.edit_it(item.product_id);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123\n            }\n          }, React.createElement(Product_compo, {\n            note: item.note,\n            moq: item.moq,\n            fob_price: item.fob_price,\n            product_name: item.product_name,\n            supplier_name: item.supplier_name,\n            image: item.main_image.src,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            }\n          })));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        }\n      }), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        }\n      }, this.state.loadmore_test)));\n    }\n  }]);\n\n  return Products_tab_data;\n}(Component);\n\nexport { Products_tab_data as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#fff'\n  },\n  heading: {\n    fontSize: 22,\n    color: \"#000000\",\n    marginTop: 10,\n    width: 100,\n    marginBottom: 20,\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"sources":["D:/Notes_app/Pages/history_tabs/Product_tab_data.js"],"names":["React","Component","SQLite","db","openDatabase","Product_compo","Edit_product","tabs_data_load","Products_tab_data","props","process_data","rows","setState","products_data","state","loadingmore","console","log","get_data","limit","tabname","then","response","data","JSON","parse","_onRefresh","isRefreshing","loadmore_test","handleLoadMore","parseInt","edit_it","id","type","navigation","navigate","product_id","history_array","edit","edit_id","addListener","route","styles","container","edit_data","zIndex","position","right","top","require","width","height","marginLeft","bind","item","index","toString","note","moq","fob_price","product_name","supplier_name","main_image","src","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","heading","fontSize","color","marginTop","marginBottom","fontWeight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { View, Modal, Text, StyleSheet, Image, FlatList, RefreshControl, ActivityIndicator, TouchableOpacity } from 'react-native';\r\n\r\nimport { SQLite } from 'expo-sqlite';\r\nconst db = SQLite.openDatabase('db.db');\r\nimport Product_compo from '../History_components/Product_compo'; \r\nimport Edit_product from '../edit_note/Edit_product';\r\nimport { tabs_data_load } from '../models/all_models';\r\n \r\nexport default class Products_tab_data extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            products_data: [],\r\n            loadmore_test: '',\r\n            isRefreshing: false,\r\n            loadingmore: false,\r\n            history_array: [],\r\n            limit: 0,\r\n            edit: false,\r\n            edit_id: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // this.get_data(this.state.limit);\r\n\r\n        this.props.navigation.addListener('willFocus', (route) => {\r\n            this._onRefresh();\r\n        });\r\n\r\n    }\r\n\r\n    process_data = (rows) => {\r\n\r\n        this.setState({\r\n            products_data: [...this.state.products_data, ...rows],\r\n            loadingmore: false\r\n        });\r\n\r\n        console.log(this.state.products_data);\r\n        \r\n    }\r\n\r\n    get_data = (limit,tabname='products') => {\r\n      \r\n        tabs_data_load(limit,tabname).then((response) => {  \r\n            var data   = JSON.parse(response);\r\n            console.log(data.data);\r\n            this.process_data(data.data)\r\n          \r\n        });   \r\n    }\r\n\r\n    _onRefresh = () => {\r\n        this.setState({ isRefreshing: true })\r\n        this.setState({ products_data: [] })\r\n        this.setState({ limit: 0 })\r\n        this.get_data(0);\r\n        this.setState({ isRefreshing: false })\r\n        this.setState({ loadmore_test: ' ', });\r\n    }\r\n\r\n    ///// LOAD MORE ////////////////////\r\n    handleLoadMore = () => {\r\n\r\n        this.setState({ loadmore_test: 'Loading...', });\r\n        var limit = parseInt(this.state.limit) + parseInt(20);  // increase page by 1\r\n        this.setState({ limit: limit });\r\n        this.get_data(limit);  // method for API call \r\n        this.setState({ loadmore_test: 'Scroll down to load more', });\r\n\r\n    };\r\n\r\n    //////////////EDIT PRODUCT OR CONTACT\r\n    edit_it = (id, type) => {   \r\n            this.props.navigation.navigate('Edit_product', {\r\n                product_id: id\r\n            });   \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <View style={styles.container}>\r\n\r\n                <Modal\r\n                    animationType=\"slide\"\r\n                    transparent={false}\r\n                    visible={this.state.edit}\r\n                    onRequestClose={() => {\r\n                        this.edit_data(false)\r\n                    }}>\r\n                    <TouchableOpacity style={{ zIndex: 10, position: \"absolute\", right: 10, top: 10 }} onPress={() => { this.edit_data(false) }}>\r\n                        <Image\r\n                            source={require('../../assets/img/close.png')}\r\n                            style={{ width: 40, height: 40, marginLeft: 8 }}\r\n                        />\r\n                    </TouchableOpacity>\r\n                    <Edit_product product_id={this.state.edit_id} />\r\n                </Modal>\r\n\r\n                {this.state.loadingmore &&\r\n                    <ActivityIndicator animating={this.state.loadingmore} size=\"large\" color=\"red\" />\r\n                }\r\n                <FlatList\r\n                    numColumns={1}\r\n                    data={this.state.products_data}\r\n                    refreshControl={\r\n                        <RefreshControl\r\n                            refreshing={this.state.isRefreshing}\r\n                            onRefresh={this._onRefresh.bind(this)}\r\n                        />\r\n                    }\r\n                    keyExtractor={(item, index) => index.toString()}\r\n                    onEndReachedThreshold={3}\r\n                    onEndReached={this.handleLoadMore.bind(this)}\r\n                    renderItem={({ item, index }) => (\r\n\r\n\r\n\r\n                        <View>\r\n\r\n                            <TouchableOpacity onPress={() => { this.edit_it(item.product_id) }}>\r\n                                <Product_compo note={item.note} moq={item.moq} fob_price={item.fob_price} product_name={item.product_name} supplier_name={item.supplier_name} image={item.main_image.src} />\r\n                            </TouchableOpacity>\r\n                        </View>\r\n\r\n                    )}\r\n                />\r\n\r\n                <View>\r\n                    <Text>{this.state.loadmore_test}</Text>\r\n                </View>\r\n\r\n\r\n            </View>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n// define your styles\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundColor: '#fff',\r\n\r\n\r\n    },\r\n    heading: {\r\n        fontSize: 22,\r\n        color: \"#000000\",\r\n        marginTop: 10,\r\n        width: 100,\r\n        marginBottom: 20,\r\n        fontWeight: \"bold\"\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}